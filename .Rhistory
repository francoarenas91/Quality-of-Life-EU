NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=code)
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2_code)
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
income <-get_eurostat(dataset)
income %>%
mutate(country_code=substr(geo,1,2)) %>%
filter(country_code %in% EU_countries$country_code) %>%
filter(nchar(geo)==4) %>%   #only nuts 2 regions
filter(direct=="BAL") %>%  #balance
filter(unit=="EUR_HAB") %>% #eur per habitant
filter(na_item=="B5N") %>% #income
left_join(NUTS2,by="geo") %>%
left_join(EU_countries,by=c("country_code")) %>%
# mutate(date = TIME_PERIOD) %>%
select(-c(direct,na_item)) ->income_export
save(income_export, file = paste0("./data/",dataset, ".RData"))
data_files<- list.files("./data")
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo","country_code")) %>%
left_join(NUTS2,by=c("geo","NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" )
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
data_files<- list.files("./data") %>%
filter(-"geo_dates")
# List all files in the "./data" directory
data_files <- list.files("./data")
# Exclude "geo_dates" from the list
data_files <- data_files[!data_files %in% "geo_dates"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" )
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
data_files
# Exclude "geo_dates" from the list
data_files <- data_files[!data_files %in% "geo_dates.Rdata"]
data_files
# Exclude "geo_dates" from the list
data_files <- data_files[!data_files %in% "geo_dates.Rdata"]
# Exclude "geo_dates" from the list
data_files <- data_files[!"geo_dates.Rdata"]
# Exclude "geo_dates" from the list
data_files <- data_files[-"geo_dates.Rdata"]
# Exclude "geo_dates" from the list
data_files <- data_files[!data_files != "geo_dates.Rdata"]
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.Rdata"]
# List all files in the "./data" directory
data_files <- list.files("./data")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.Rdata"]
data_files
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
data_files
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" )
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/","geo_dates", ".RData"))
View(geo_dates)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
file="nama_10r_2hhinc.RData"
print(file)
data %>%
select(geo,time)
file="nama_10r_2hhinc.RData"
load(paste0("./data/",file))
dataset="nama_10r_2hhinc"
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
income <-get_eurostat(dataset)
income <-get_eurostat(dataset)
income %>%
mutate(country_code=substr(geo,1,2)) %>%
filter(country_code %in% EU_countries$country_code) %>%
filter(nchar(geo)==4) %>%   #only nuts 2 regions
filter(direct=="BAL") %>%  #balance
filter(unit=="EUR_HAB") %>% #eur per habitant
filter(na_item=="B5N") %>% #income
left_join(NUTS2,by="geo") %>%
left_join(EU_countries,by=c("country_code")) %>%
# mutate(date = TIME_PERIOD) %>%
select(-c(direct,na_item)) ->income_export
save(income_export, file = paste0("./data/",dataset, ".RData"))
geo_dates <- data.frame()
for (file in data_files) {
# file="nama_10r_2hhinc.RData"
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" )
geo_dates <- data.frame()
for (file in data_files) {
# file="nama_10r_2hhinc.RData"
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
left_join(NUTS2,by=c("geo"="NUTS2")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
View(geo_dates)
file="nama_10r_2hhinc.RData"
load(paste0("./data/",file))
View(data)
# List all files in the "./data" directory
data_files <- list.files("./data/country")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
geo_dates <- data.frame()
for (file in data_files) {
file="nama_10r_2hhinc.RData"
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
# List all files in the "./data" directory
data_files <- list.files("./data/country")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/country/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
for (file in data_files) {
load(paste0("./data/country/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/country/","geo_dates", ".RData"))
# List all files in the "./data" directory
data_files <- list.files("./data/country")
save(geo_dates, file = paste0("./data/country/","geo_dates", ".RData"))
# List all files in the "./data" directory
data_files <- list.files("./data/country")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/country/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
left_join(EU_countries,by=c("geo"="country_code"))
unique() ->geo_dates
}
# List all files in the "./data" directory
data_files <- list.files("./data/country")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/country/",file))
print(file)
data %>%
select(geo,time) %>%
rbind(geo_dates) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
unique() ->geo_dates
}
# List all files in the "./data" directory
data_files <- list.files("./data/country")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/country/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by=c("geo"="country_code")) %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/country/","geo_dates", ".RData"))
EU_countries<-read_excel("./dictionaries/EU_countries.xlsx" ) %>%
rename(country_code=code,country_name=name)
load_data_region <- function(series,alias,dictionary,sheet_names){
EU_countries<-read_excel("./dictionaries/EU_countries.xlsx" ,sheet="region") %>%
rename(country_code=code,country_name=name)
#load data
data <- get_eurostat(series) %>%
filter(!is.na(values)) %>%  #filter out NAs
mutate(country_code=substr(geo,1,2)) %>%
filter(country_code %in% EU_countries$country_code) %>%
filter(nchar(geo)==4) %>%
left_join(EU_countries,by=c("country_code"))
#recode columns
for (sheet in sheet_names){
if (sheet %in% colnames(data)){
data <- data %>%
mutate(!!sym(sheet) := recode(!!sym(sheet), !!!dictionary))
##!!! splits a vector into individual arguments for a function
## !!sym() is a way to convert the string sheet into a symbol that dplyr can understand as a column name.
}
}
save(data, file = paste0("./data/region/",alias, ".RData"))
print(paste0("series ",series," ", alias, " loaded"))
rm(data)
gc()
}
statistics<-read_excel("./loading_statistics.xlsx",sheet="region" )
for (ii in 1:nrow(statistics)) {
load_data_region(statistics$code[ii],statistics$alias[ii],dictionary,sheet_names)
}
load_data_region <- function(series,alias,dictionary,sheet_names){
EU_countries<-read_excel("./dictionaries/EU_countries.xlsx") %>%
rename(country_code=code,country_name=name)
#load data
data <- get_eurostat(series) %>%
filter(!is.na(values)) %>%  #filter out NAs
mutate(country_code=substr(geo,1,2)) %>%
filter(country_code %in% EU_countries$country_code) %>%
filter(nchar(geo)==4) %>%
left_join(EU_countries,by=c("country_code"))
#recode columns
for (sheet in sheet_names){
if (sheet %in% colnames(data)){
data <- data %>%
mutate(!!sym(sheet) := recode(!!sym(sheet), !!!dictionary))
##!!! splits a vector into individual arguments for a function
## !!sym() is a way to convert the string sheet into a symbol that dplyr can understand as a column name.
}
}
save(data, file = paste0("./data/region/",alias, ".RData"))
print(paste0("series ",series," ", alias, " loaded"))
rm(data)
gc()
}
statistics<-read_excel("./loading_statistics.xlsx",sheet="region" )
for (ii in 1:nrow(statistics)) {
load_data_region(statistics$code[ii],statistics$alias[ii],dictionary,sheet_names)
}
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/region/",file))
print(file)
data %>%
select(geo,time) %>%
left_join(EU_countries,by="geo") %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/region/",file))
print(file)
data %>%
select(geo,TIME_PERIOD) %>%
left_join(EU_countries,by="geo") %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/region/",file))
print(file)
data %>%
select(geo,TIME_PERIOD) %>%
left_join(NUTS2,by="geo") %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/region/","geo_dates", ".RData"))
View(geo_dates)
# Path to the dictionary fil
file_path <- paste0("./dictionaries/","decoding_dict",".xlsx")
# Get a list of all sheet names
sheet_names <- excel_sheets(file_path)
# Load each dictionary sheet
dictionary_df <- lapply(sheet_names, function(sheet) {
read_excel(file_path, sheet = sheet, col_types = c("code" = "text", "name" = "text"))
}) %>% bind_rows()
dictionary <- setNames(dictionary_df$name, dictionary_df$code)
#load EU country names
EU_countries<-read_excel("./dictionaries/EU_countries.xlsx") %>%
rename(country_code=code,country_name=name)
EU_Countries_names_dict<- setNames(EU_countries$country_name, EU_countries$country_code)
#function to load and save country data
load_data_country <- function(series,alias,dictionary,sheet_names){
#load data
data <- get_eurostat(series,
filters=list(geo=pull(EU_countries,country_code))) %>%
filter(!is.na(values)) #filter out NAs
#recode columns
for (sheet in sheet_names){
if (sheet %in% colnames(data)){
data <- data %>%
mutate(!!sym(sheet) := recode(!!sym(sheet), !!!dictionary))
##!!! splits a vector into individual arguments for a function
## !!sym() is a way to convert the string sheet into a symbol that dplyr can understand as a column name.
}
}
save(data, file = paste0("./data/country/",alias, ".RData"))
print(paste0("series ",series," ", alias, " loaded"))
rm(data)
gc()
}
statistics<-read_excel("./loading_statistics.xlsx",sheet="region" )
for (ii in 1:nrow(statistics)) {
load_data_region(statistics$code[ii],statistics$alias[ii],dictionary,sheet_names)
}
# Path to the dictionary fil
file_path <- paste0("./dictionaries/","decoding_dict",".xlsx")
# Get a list of all sheet names
sheet_names <- excel_sheets(file_path)
# Load each dictionary sheet
dictionary_df <- lapply(sheet_names, function(sheet) {
read_excel(file_path, sheet = sheet, col_types = c("code" = "text", "name" = "text"))
}) %>% bind_rows()
dictionary <- setNames(dictionary_df$name, dictionary_df$code)
#load EU country names
EU_countries<-read_excel("./dictionaries/EU_countries.xlsx") %>%
rename(country_code=code,country_name=name)
EU_Countries_names_dict<- setNames(EU_countries$country_name, EU_countries$country_code)
#function to load and save country data
load_data_country <- function(series,alias,dictionary,sheet_names){
#load data
data <- get_eurostat(series,
filters=list(geo=pull(EU_countries,country_code))) %>%
filter(!is.na(values)) #filter out NAs
#recode columns
for (sheet in sheet_names){
if (sheet %in% colnames(data)){
data <- data %>%
mutate(!!sym(sheet) := recode(!!sym(sheet), !!!dictionary))
##!!! splits a vector into individual arguments for a function
## !!sym() is a way to convert the string sheet into a symbol that dplyr can understand as a column name.
}
}
save(data, file = paste0("./data/country/",alias, ".RData"))
print(paste0("series ",series," ", alias, " loaded"))
rm(data)
gc()
}
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/region/",file))
print(file)
data %>%
select(geo,TIME_PERIOD) %>%
left_join(NUTS2,by="geo") %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/region/","geo_dates", ".RData"))
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/region/",file))
print(file)
data %>%
select(geo,TIME_PERIOD) %>%
left_join(NUTS2,by="geo") %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/region/","geo_dates", ".RData"))
# List all files in the "./data" directory
data_files <- list.files("./data/region")
statistics<-read_excel("./loading_statistics.xlsx",sheet="region" )
for (ii in 1:nrow(statistics)) {
load_data_region(statistics$code[ii],statistics$alias[ii],dictionary,sheet_names)
}
# List all files in the "./data" directory
data_files <- list.files("./data/region")
# Exclude "geo_dates" from the list
data_files <- data_files[data_files != "geo_dates.RData"]
NUTS2<-read_excel("./dictionaries/NUTS2.xlsx" ) %>%
rename(geo=NUTS2)
geo_dates <- data.frame()
for (file in data_files) {
load(paste0("./data/region/",file))
print(file)
data %>%
select(geo,TIME_PERIOD) %>%
left_join(NUTS2,by="geo") %>%
rbind(geo_dates) %>%
unique() ->geo_dates
}
save(geo_dates, file = paste0("./data/region/","geo_dates", ".RData"))
