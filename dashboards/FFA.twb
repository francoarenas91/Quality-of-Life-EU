<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='city data' inline='true' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/city' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[TIME_PERIOD (living_cond.RData)]' value='[living_cond.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[city_code (living_cond.RData)]' value='[living_cond.RData].[city_code]' />
          <map key='[city_code]' value='[geo_dates.RData].[city_code]' />
          <map key='[city_name]' value='[geo_dates.RData].[city_name]' />
          <map key='[country_code]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[freq]' value='[living_cond.RData].[freq]' />
          <map key='[indic_ur]' value='[living_cond.RData].[indic_ur]' />
          <map key='[rownames (living_cond.RData)]' value='[living_cond.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[values]' value='[living_cond.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indic_ur</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indic_ur]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>indic_ur</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TIME PERIOD (living cond.RData)' datatype='date' name='[TIME_PERIOD (living_cond.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='living_cond.RData' datatype='table' name='[__tableau_internal_object_id__].[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]' role='measure' type='quantitative' />
      <column caption='city code (living cond.RData)' datatype='string' name='[city_code (living_cond.RData)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Code' datatype='string' name='[city_code]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
          <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
          <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
          <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
          <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
          <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
          <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
          <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
          <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
          <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
          <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
          <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
          <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
          <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
          <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
          <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
          <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
          <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
          <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
          <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
        </semantic-values>
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
      <column caption='rownames (living cond.RData)' datatype='integer' name='[rownames (living_cond.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_code:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='living_cond.RData' id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[city_code]' />
                <expression op='[city_code (living_cond.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (living_cond.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9' unique-key='true' />
            <second-end-point object-id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='region_data' inline='true' name='federated.0m1qf021ngu4lq199qvkn02knoxn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1pdfkm21soii8n16rlhqy1sggv47'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/region' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='hosp_beds.RData' table='[hosp_beds.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='risk_poverty.RData' table='[risk_poverty.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='unemployment_rate.RData' table='[unemployment_rate.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age class]' value='[unemployment_rate.RData].[Age class]' />
          <map key='[International Standard Classification of Education (ISCED 2011)]' value='[unemployment_rate.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[NUTS2_name (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[NUTS2_name]' />
          <map key='[NUTS2_name]' value='[geo_dates.RData].[NUTS2_name]' />
          <map key='[Sex]' value='[unemployment_rate.RData].[Sex]' />
          <map key='[TIME_PERIOD (hosp_beds.RData)]' value='[hosp_beds.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (physicians.RData)]' value='[physicians.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (risk_poverty.RData)]' value='[risk_poverty.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (road_accidents.RData)]' value='[road_accidents.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (unemployment_rate.RData)]' value='[unemployment_rate.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[Time frequency (hosp_beds.RData)]' value='[hosp_beds.RData].[Time frequency]' />
          <map key='[Time frequency (risk_poverty.RData)]' value='[risk_poverty.RData].[Time frequency]' />
          <map key='[Time frequency (road_accidents.RData)]' value='[road_accidents.RData].[Time frequency]' />
          <map key='[Time frequency (unemployment_rate.RData)]' value='[unemployment_rate.RData].[Time frequency]' />
          <map key='[Time frequency]' value='[physicians.RData].[Time frequency]' />
          <map key='[Type of victim]' value='[road_accidents.RData].[Type of victim]' />
          <map key='[Unit of measure (hosp_beds.RData)]' value='[hosp_beds.RData].[Unit of measure]' />
          <map key='[Unit of measure (risk_poverty.RData)]' value='[risk_poverty.RData].[Unit of measure]' />
          <map key='[Unit of measure (road_accidents.RData)]' value='[road_accidents.RData].[Unit of measure]' />
          <map key='[Unit of measure (unemployment_rate.RData)]' value='[unemployment_rate.RData].[Unit of measure]' />
          <map key='[Unit of measure]' value='[physicians.RData].[Unit of measure]' />
          <map key='[country_code (geo_dates.RData)]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_code]' value='[nama_10r_2hhinc.RData].[country_code]' />
          <map key='[country_name (geo_dates.RData)]' value='[geo_dates.RData].[country_name]' />
          <map key='[country_name]' value='[nama_10r_2hhinc.RData].[country_name]' />
          <map key='[freq (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[freq]' />
          <map key='[geo (hosp_beds.RData)]' value='[hosp_beds.RData].[geo]' />
          <map key='[geo (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[geo]' />
          <map key='[geo (physicians.RData)]' value='[physicians.RData].[geo]' />
          <map key='[geo (risk_poverty.RData)]' value='[risk_poverty.RData].[geo]' />
          <map key='[geo (road_accidents.RData)]' value='[road_accidents.RData].[geo]' />
          <map key='[geo (unemployment_rate.RData)]' value='[unemployment_rate.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[rownames (hosp_beds.RData)]' value='[hosp_beds.RData].[rownames]' />
          <map key='[rownames (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[rownames]' />
          <map key='[rownames (physicians.RData)]' value='[physicians.RData].[rownames]' />
          <map key='[rownames (risk_poverty.RData)]' value='[risk_poverty.RData].[rownames]' />
          <map key='[rownames (road_accidents.RData)]' value='[road_accidents.RData].[rownames]' />
          <map key='[rownames (unemployment_rate.RData)]' value='[unemployment_rate.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[unit (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[unit]' />
          <map key='[values (hosp_beds.RData)]' value='[hosp_beds.RData].[values]' />
          <map key='[values (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[values]' />
          <map key='[values (risk_poverty.RData)]' value='[risk_poverty.RData].[values]' />
          <map key='[values (road_accidents.RData)]' value='[road_accidents.RData].[values]' />
          <map key='[values (unemployment_rate.RData)]' value='[unemployment_rate.RData].[values]' />
          <map key='[values]' value='[physicians.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of victim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of victim]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>Type of victim</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank regions umeployment' datatype='integer' name='[Calculation_1295347907822551040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(avg([values (unemployment_rate.RData)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
      <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
        <semantic-values semantic-role='[NUTS].[Name]'>
          <semantic-value key='&quot;Ciudad de Ceuta&quot;' value='&quot;ES64&quot;' />
          <semantic-value key='&quot;Ciudad de Melilla&quot;' value='&quot;ES63&quot;' />
          <semantic-value key='&quot;Comunitat Valenciana&quot;' value='&quot;ES52&quot;' />
        </semantic-values>
      </column>
      <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
        <semantic-values semantic-role='[NUTS].[Name]'>
          <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
        </semantic-values>
      </column>
      <column caption='TIME PERIOD (hosp beds.RData)' datatype='date' name='[TIME_PERIOD (hosp_beds.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (physicians.RData)' datatype='date' name='[TIME_PERIOD (physicians.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (risk poverty.RData)' datatype='date' name='[TIME_PERIOD (risk_poverty.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (road accidents.RData)' datatype='date' name='[TIME_PERIOD (road_accidents.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <column caption='Time frequency (hosp beds.RData)' datatype='string' name='[Time frequency (hosp_beds.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (risk poverty.RData)' datatype='string' name='[Time frequency (risk_poverty.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (unemployment rate.RData)' datatype='string' name='[Time frequency (unemployment_rate.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (hosp beds.RData)' datatype='string' name='[Unit of measure (hosp_beds.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (risk poverty.RData)' datatype='string' name='[Unit of measure (risk_poverty.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (unemployment rate.RData)' datatype='string' name='[Unit of measure (unemployment_rate.RData)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='hosp_beds.RData' datatype='table' name='[__tableau_internal_object_id__].[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='income' datatype='table' name='[__tableau_internal_object_id__].[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='physicians.RData' datatype='table' name='[__tableau_internal_object_id__].[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='risk_poverty.RData' datatype='table' name='[__tableau_internal_object_id__].[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='road_accidents.RData' datatype='table' name='[__tableau_internal_object_id__].[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='unemployment_rate.RData' datatype='table' name='[__tableau_internal_object_id__].[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]' role='measure' type='quantitative' />
      <column datatype='string' name='[country_code (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='geo (hosp beds.RData)' datatype='string' name='[geo (hosp_beds.RData)]' role='dimension' type='nominal' />
      <column caption='geo (nama 10r 2hhinc.RData)' datatype='string' name='[geo (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='geo (risk poverty.RData)' datatype='string' name='[geo (risk_poverty.RData)]' role='dimension' type='nominal' />
      <column caption='geo (road accidents.RData)' datatype='string' name='[geo (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='geo (unemployment rate.RData)' datatype='string' name='[geo (unemployment_rate.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column caption='rownames (hosp beds.RData)' datatype='integer' name='[rownames (hosp_beds.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (nama 10r 2hhinc.RData)' datatype='integer' name='[rownames (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (risk poverty.RData)' datatype='integer' name='[rownames (risk_poverty.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (road accidents.RData)' datatype='integer' name='[rownames (road_accidents.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (unemployment rate.RData)' datatype='integer' name='[rownames (unemployment_rate.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='values (hosp beds.RData)' datatype='real' name='[values (hosp_beds.RData)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
      </column>
      <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='values (risk poverty.RData)' datatype='real' name='[values (risk_poverty.RData)]' role='measure' type='quantitative' />
      <column caption='values (road accidents.RData)' datatype='real' name='[values (road_accidents.RData)]' role='measure' type='quantitative' />
      <column aggregation='None' caption='values (unemployment rate.RData) (bin) (1)' datatype='integer' name='[values (unemployment rate.RData) (bin) 1]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
      </column>
      <column aggregation='None' datatype='integer' name='[values (unemployment rate.RData) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
      </column>
      <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name (geo_dates.RData):nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:International Standard Classification of Education (ISCED 2011):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;No response&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name (geo_dates.RData):nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='hosp_beds.RData' id='hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='hosp_beds.RData' table='[hosp_beds.RData]' type='table' />
            </properties>
          </object>
          <object caption='income' id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
            </properties>
          </object>
          <object caption='physicians.RData' id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
            </properties>
          </object>
          <object caption='risk_poverty.RData' id='risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='risk_poverty.RData' table='[risk_poverty.RData]' type='table' />
            </properties>
          </object>
          <object caption='road_accidents.RData' id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
            </properties>
          </object>
          <object caption='unemployment_rate.RData' id='unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='unemployment_rate.RData' table='[unemployment_rate.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (hosp_beds.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (hosp_beds.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (nama_10r_2hhinc.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (nama_10r_2hhinc.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (physicians.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (physicians.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (risk_poverty.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (risk_poverty.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (road_accidents.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (road_accidents.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (unemployment_rate.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (unemployment_rate.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='country data' inline='true' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_data' name='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/country' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='BMI.RData' table='[BMI.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='BMI.RData' table='[BMI.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='fruit_vegetables.RData' table='[fruit_vegetables.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_coleagues.RData' table='[good_rel_coleagues.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_supervisor.RData' table='[good_rel_supervisor.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='over_qualification.RData' table='[over_qualification.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='poverty.RData' table='[poverty.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='satisfaction.RData' table='[satisfaction.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='smokers.RData' table='[smokers.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='drinking.RData' table='[drinking.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='vacancy rate.RData' table='[vacancy rate.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='work_health_problem.RData' table='[work_health_problem.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age class (BMI.RData)]' value='[BMI.RData].[Age class]' />
          <map key='[Age class (drinking.RData)]' value='[drinking.RData].[Age class]' />
          <map key='[Age class (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Age class]' />
          <map key='[Age class (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Age class]' />
          <map key='[Age class (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Age class]' />
          <map key='[Age class (over_qualification.RData)]' value='[over_qualification.RData].[Age class]' />
          <map key='[Age class (poverty.RData)]' value='[poverty.RData].[Age class]' />
          <map key='[Age class (smokers.RData)]' value='[smokers.RData].[Age class]' />
          <map key='[Age class (underemployment.RData)]' value='[underemployment.RData].[Age class]' />
          <map key='[Age class (work_health_problem.RData)]' value='[work_health_problem.RData].[Age class]' />
          <map key='[Age class]' value='[time_health_enhancing.RData].[Age class]' />
          <map key='[Body Mass Index]' value='[BMI.RData].[Body Mass Index]' />
          <map key='[Degree of urbanisation]' value='[get_together.RData].[Degree of urbanisation]' />
          <map key='[Duration]' value='[time_health_enhancing.RData].[Duration]' />
          <map key='[Frequency (drinking.RData)]' value='[drinking.RData].[Frequency]' />
          <map key='[Frequency]' value='[get_together.RData].[Frequency]' />
          <map key='[Income and living conditions indicator]' value='[poverty.RData].[Income and living conditions indicator]' />
          <map key='[Individual type]' value='[get_together.RData].[Individual type]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (BMI.RData)]' value='[BMI.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' value='[drinking.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' value='[over_qualification.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (smokers.RData)]' value='[smokers.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' value='[work_health_problem.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011)]' value='[time_health_enhancing.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[Migration status]' value='[over_qualification.RData].[Migration status]' />
          <map key='[Number of portions]' value='[fruit_vegetables.RData].[Number of portions]' />
          <map key='[Quantile]' value='[get_together.RData].[Quantile]' />
          <map key='[Sex (BMI.RData)]' value='[BMI.RData].[Sex]' />
          <map key='[Sex (drinking.RData)]' value='[drinking.RData].[Sex]' />
          <map key='[Sex (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Sex]' />
          <map key='[Sex (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Sex]' />
          <map key='[Sex (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Sex]' />
          <map key='[Sex (over_qualification.RData)]' value='[over_qualification.RData].[Sex]' />
          <map key='[Sex (poverty.RData)]' value='[poverty.RData].[Sex]' />
          <map key='[Sex (smokers.RData)]' value='[smokers.RData].[Sex]' />
          <map key='[Sex (underemployment.RData)]' value='[underemployment.RData].[Sex]' />
          <map key='[Sex (work_health_problem.RData)]' value='[work_health_problem.RData].[Sex]' />
          <map key='[Sex]' value='[time_health_enhancing.RData].[Sex]' />
          <map key='[Size classes in number of employees]' value='[vacancy rate.RData].[Size classes in number of employees]' />
          <map key='[Smoking behaviour]' value='[smokers.RData].[Smoking behaviour]' />
          <map key='[Statistical classification of economic activities in the European Community (NACE Rev. 2)]' value='[vacancy rate.RData].[Statistical classification of economic activities in the European Community (NACE Rev. 2)]' />
          <map key='[Time frequency (BMI.RData)]' value='[BMI.RData].[Time frequency]' />
          <map key='[Time frequency (drinking.RData)]' value='[drinking.RData].[Time frequency]' />
          <map key='[Time frequency (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Time frequency]' />
          <map key='[Time frequency (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Time frequency]' />
          <map key='[Time frequency (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Time frequency]' />
          <map key='[Time frequency (over_qualification.RData)]' value='[over_qualification.RData].[Time frequency]' />
          <map key='[Time frequency (poverty.RData)]' value='[poverty.RData].[Time frequency]' />
          <map key='[Time frequency (smokers.RData)]' value='[smokers.RData].[Time frequency]' />
          <map key='[Time frequency (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[Time frequency]' />
          <map key='[Time frequency (underemployment.RData)]' value='[underemployment.RData].[Time frequency]' />
          <map key='[Time frequency (vacancy rate.RData)]' value='[vacancy rate.RData].[Time frequency]' />
          <map key='[Time frequency (work_health_problem.RData)]' value='[work_health_problem.RData].[Time frequency]' />
          <map key='[Time frequency]' value='[get_together.RData].[Time frequency]' />
          <map key='[Type of household]' value='[get_together.RData].[Type of household]' />
          <map key='[Unit of measure (BMI.RData)]' value='[BMI.RData].[Unit of measure]' />
          <map key='[Unit of measure (drinking.RData)]' value='[drinking.RData].[Unit of measure]' />
          <map key='[Unit of measure (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Unit of measure]' />
          <map key='[Unit of measure (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Unit of measure]' />
          <map key='[Unit of measure (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Unit of measure]' />
          <map key='[Unit of measure (over_qualification.RData)]' value='[over_qualification.RData].[Unit of measure]' />
          <map key='[Unit of measure (poverty.RData)]' value='[poverty.RData].[Unit of measure]' />
          <map key='[Unit of measure (smokers.RData)]' value='[smokers.RData].[Unit of measure]' />
          <map key='[Unit of measure (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[Unit of measure]' />
          <map key='[Unit of measure (underemployment.RData)]' value='[underemployment.RData].[Unit of measure]' />
          <map key='[Unit of measure (vacancy rate.RData)]' value='[vacancy rate.RData].[Unit of measure]' />
          <map key='[Unit of measure (work_health_problem.RData)]' value='[work_health_problem.RData].[Unit of measure]' />
          <map key='[Unit of measure]' value='[get_together.RData].[Unit of measure]' />
          <map key='[age (satisfaction.RData)]' value='[satisfaction.RData].[age]' />
          <map key='[age (self_health.RData)]' value='[self_health.RData].[age]' />
          <map key='[age]' value='[activities.RData].[age]' />
          <map key='[country_name (satisfaction.RData)]' value='[satisfaction.RData].[country_name]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[education]' value='[satisfaction.RData].[education]' />
          <map key='[freq (satisfaction.RData)]' value='[satisfaction.RData].[freq]' />
          <map key='[freq (self_health.RData)]' value='[self_health.RData].[freq]' />
          <map key='[freq]' value='[activities.RData].[freq]' />
          <map key='[frequenc]' value='[activities.RData].[frequenc]' />
          <map key='[geo (BMI.RData)]' value='[BMI.RData].[geo]' />
          <map key='[geo (activities.RData)]' value='[activities.RData].[geo]' />
          <map key='[geo (drinking.RData)]' value='[drinking.RData].[geo]' />
          <map key='[geo (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[geo]' />
          <map key='[geo (get_together.RData)]' value='[get_together.RData].[geo]' />
          <map key='[geo (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[geo]' />
          <map key='[geo (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[geo]' />
          <map key='[geo (over_qualification.RData)]' value='[over_qualification.RData].[geo]' />
          <map key='[geo (poverty.RData)]' value='[poverty.RData].[geo]' />
          <map key='[geo (satisfaction.RData)]' value='[satisfaction.RData].[geo]' />
          <map key='[geo (self_health.RData)]' value='[self_health.RData].[geo]' />
          <map key='[geo (smokers.RData)]' value='[smokers.RData].[geo]' />
          <map key='[geo (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[geo]' />
          <map key='[geo (underemployment.RData)]' value='[underemployment.RData].[geo]' />
          <map key='[geo (vacancy rate.RData)]' value='[vacancy rate.RData].[geo]' />
          <map key='[geo (work_health_problem.RData)]' value='[work_health_problem.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[indicator]' value='[satisfaction.RData].[indicator]' />
          <map key='[isced11]' value='[activities.RData].[isced11]' />
          <map key='[lev_satis]' value='[satisfaction.RData].[lev_satis]' />
          <map key='[levels]' value='[self_health.RData].[levels]' />
          <map key='[quantile (self_health.RData)]' value='[self_health.RData].[quantile]' />
          <map key='[rownames (BMI.RData)]' value='[BMI.RData].[rownames]' />
          <map key='[rownames (activities.RData)]' value='[activities.RData].[rownames]' />
          <map key='[rownames (drinking.RData)]' value='[drinking.RData].[rownames]' />
          <map key='[rownames (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[rownames]' />
          <map key='[rownames (get_together.RData)]' value='[get_together.RData].[rownames]' />
          <map key='[rownames (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[rownames]' />
          <map key='[rownames (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[rownames]' />
          <map key='[rownames (over_qualification.RData)]' value='[over_qualification.RData].[rownames]' />
          <map key='[rownames (poverty.RData)]' value='[poverty.RData].[rownames]' />
          <map key='[rownames (satisfaction.RData)]' value='[satisfaction.RData].[rownames]' />
          <map key='[rownames (self_health.RData)]' value='[self_health.RData].[rownames]' />
          <map key='[rownames (smokers.RData)]' value='[smokers.RData].[rownames]' />
          <map key='[rownames (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[rownames]' />
          <map key='[rownames (underemployment.RData)]' value='[underemployment.RData].[rownames]' />
          <map key='[rownames (vacancy rate.RData)]' value='[vacancy rate.RData].[rownames]' />
          <map key='[rownames (work_health_problem.RData)]' value='[work_health_problem.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[sex (satisfaction.RData)]' value='[satisfaction.RData].[sex]' />
          <map key='[sex (self_health.RData)]' value='[self_health.RData].[sex]' />
          <map key='[sex]' value='[activities.RData].[sex]' />
          <map key='[time (BMI.RData)]' value='[BMI.RData].[time]' />
          <map key='[time (activities.RData)]' value='[activities.RData].[time]' />
          <map key='[time (drinking.RData)]' value='[drinking.RData].[time]' />
          <map key='[time (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[time]' />
          <map key='[time (get_together.RData)]' value='[get_together.RData].[time]' />
          <map key='[time (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[time]' />
          <map key='[time (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[time]' />
          <map key='[time (over_qualification.RData)]' value='[over_qualification.RData].[time]' />
          <map key='[time (poverty.RData)]' value='[poverty.RData].[time]' />
          <map key='[time (satisfaction.RData)]' value='[satisfaction.RData].[time]' />
          <map key='[time (self_health.RData)]' value='[self_health.RData].[time]' />
          <map key='[time (smokers.RData)]' value='[smokers.RData].[time]' />
          <map key='[time (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[time]' />
          <map key='[time (underemployment.RData)]' value='[underemployment.RData].[time]' />
          <map key='[time (vacancy rate.RData)]' value='[vacancy rate.RData].[time]' />
          <map key='[time (work_health_problem.RData)]' value='[work_health_problem.RData].[time]' />
          <map key='[time]' value='[geo_dates.RData].[time]' />
          <map key='[unit (satisfaction.RData)]' value='[satisfaction.RData].[unit]' />
          <map key='[unit (self_health.RData)]' value='[self_health.RData].[unit]' />
          <map key='[unit]' value='[activities.RData].[unit]' />
          <map key='[values (BMI.RData)]' value='[BMI.RData].[values]' />
          <map key='[values (drinking.RData)]' value='[drinking.RData].[values]' />
          <map key='[values (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[values]' />
          <map key='[values (get_together.RData)]' value='[get_together.RData].[values]' />
          <map key='[values (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[values]' />
          <map key='[values (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[values]' />
          <map key='[values (over_qualification.RData)]' value='[over_qualification.RData].[values]' />
          <map key='[values (poverty.RData)]' value='[poverty.RData].[values]' />
          <map key='[values (satisfaction.RData)]' value='[satisfaction.RData].[values]' />
          <map key='[values (self_health.RData)]' value='[self_health.RData].[values]' />
          <map key='[values (smokers.RData)]' value='[smokers.RData].[values]' />
          <map key='[values (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[values]' />
          <map key='[values (underemployment.RData)]' value='[underemployment.RData].[values]' />
          <map key='[values (vacancy rate.RData)]' value='[vacancy rate.RData].[values]' />
          <map key='[values (work_health_problem.RData)]' value='[work_health_problem.RData].[values]' />
          <map key='[values]' value='[activities.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Body Mass Index</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Body Mass Index]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Body Mass Index</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequenc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[frequenc]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>frequenc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>isced11</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of portions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Number of portions]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Number of portions</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Frequency]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Individual type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Individual type]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Individual type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Degree of urbanisation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Degree of urbanisation]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Degree of urbanisation</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of household</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of household]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Type of household</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Quantile]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migration status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Migration status]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Migration status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income and living conditions indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income and living conditions indicator]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Income and living conditions indicator</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>education</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>indicator</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lev_satis</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lev_satis]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>lev_satis</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quantile (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>levels</remote-name>
            <remote-type>129</remote-type>
            <local-name>[levels]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>levels</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking behaviour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Smoking behaviour]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Smoking behaviour</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Frequency (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Duration</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Statistical classification of economic activities in the European Community (NACE Rev. 2)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Statistical classification of economic activities in the European Community (NACE Rev. 2)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Statistical classification of economic activities in the European Community (NACE Rev. 2)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Size classes in number of employees</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Size classes in number of employees]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Size classes in number of employees</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age class (fruit vegetables.RData)' datatype='string' name='[Age class (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (good rel coleagues.RData)' datatype='string' name='[Age class (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (good rel supervisor.RData)' datatype='string' name='[Age class (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (work health problem.RData)' datatype='string' name='[Age class (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([values (self_health.RData)]) / TOTAL(SUM([values (self_health.RData)]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
      </column>
      <column caption='Sort time health' datatype='real' name='[Calculation_-8711650466664865789]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Duration]=&quot;300 minutes or over&quot;&#13;&#10;then [values (time_health_enhancing.RData)]&#13;&#10;else null       &#13;&#10;END' />
      </column>
      <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
      <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
      <column caption='International Standard Classification of Education (ISCED 2011) (fruit vegetables.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='International Standard Classification of Education (ISCED 2011) (work health problem.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Number of portions]' role='dimension' type='nominal' />
      <column caption='Sex (fruit vegetables.RData)' datatype='string' name='[Sex (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (good rel coleagues.RData)' datatype='string' name='[Sex (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (good rel supervisor.RData)' datatype='string' name='[Sex (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (work health problem.RData)' datatype='string' name='[Sex (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Smoking behaviour]' role='dimension' type='nominal' />
      <column caption='Time frequency (fruit vegetables.RData)' datatype='string' name='[Time frequency (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (good rel coleagues.RData)' datatype='string' name='[Time frequency (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (good rel supervisor.RData)' datatype='string' name='[Time frequency (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (over qualification.RData)' datatype='string' name='[Time frequency (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (work health problem.RData)' datatype='string' name='[Time frequency (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (fruit vegetables.RData)' datatype='string' name='[Unit of measure (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (good rel coleagues.RData)' datatype='string' name='[Unit of measure (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (good rel supervisor.RData)' datatype='string' name='[Unit of measure (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (work health problem.RData)' datatype='string' name='[Unit of measure (work_health_problem.RData)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='BMI.RData' datatype='table' name='[__tableau_internal_object_id__].[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='activities.RData' datatype='table' name='[__tableau_internal_object_id__].[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='drinking.RData' datatype='table' name='[__tableau_internal_object_id__].[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fruit_vegetables.RData' datatype='table' name='[__tableau_internal_object_id__].[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='get_together.RData' datatype='table' name='[__tableau_internal_object_id__].[get_together.RData_32250D35A0C042CC918EFD895D987719]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='good_rel_coleagues.RData' datatype='table' name='[__tableau_internal_object_id__].[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='good_rel_supervisor.RData' datatype='table' name='[__tableau_internal_object_id__].[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='over_qualification.RData' datatype='table' name='[__tableau_internal_object_id__].[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='poverty.RData' datatype='table' name='[__tableau_internal_object_id__].[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='satisfaction.RData' datatype='table' name='[__tableau_internal_object_id__].[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='self_health.RData' datatype='table' name='[__tableau_internal_object_id__].[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='smokers.RData' datatype='table' name='[__tableau_internal_object_id__].[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_health_enhancing.RData' datatype='table' name='[__tableau_internal_object_id__].[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='underemployment.RData' datatype='table' name='[__tableau_internal_object_id__].[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='vacancy rate.RData' datatype='table' name='[__tableau_internal_object_id__].[vacancy rate.RData_A379AB40C52341268FB8320822157486]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='work_health_problem.RData' datatype='table' name='[__tableau_internal_object_id__].[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]' role='measure' type='quantitative' />
      <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='country name (satisfaction.RData)' datatype='string' name='[country_name (satisfaction.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
      <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
      <column caption='geo (fruit vegetables.RData)' datatype='string' name='[geo (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='geo (get together.RData)' datatype='string' name='[geo (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='geo (good rel coleagues.RData)' datatype='string' name='[geo (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='geo (good rel supervisor.RData)' datatype='string' name='[geo (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='geo (over qualification.RData)' datatype='string' name='[geo (over_qualification.RData)]' role='dimension' type='nominal' />
      <column datatype='string' name='[geo (poverty.RData)]' role='dimension' type='nominal' />
      <column caption='geo (self health.RData)' datatype='string' name='[geo (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='geo (time health enhancing.RData)' datatype='string' name='[geo (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='geo (work health problem.RData)' datatype='string' name='[geo (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' type='nominal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='Isced11' datatype='string' name='[isced11]' role='dimension' type='nominal' />
      <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
      <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
      <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='rownames (fruit vegetables.RData)' datatype='integer' name='[rownames (fruit_vegetables.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (get together.RData)' datatype='integer' name='[rownames (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (good rel coleagues.RData)' datatype='integer' name='[rownames (good_rel_coleagues.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (good rel supervisor.RData)' datatype='integer' name='[rownames (good_rel_supervisor.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (over qualification.RData)' datatype='integer' name='[rownames (over_qualification.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (self health.RData)' datatype='integer' name='[rownames (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (time health enhancing.RData)' datatype='integer' name='[rownames (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (work health problem.RData)' datatype='integer' name='[rownames (work_health_problem.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='time (fruit vegetables.RData)' datatype='date' name='[time (fruit_vegetables.RData)]' role='dimension' type='ordinal' />
      <column caption='time (get together.RData)' datatype='date' name='[time (get_together.RData)]' role='dimension' type='ordinal' />
      <column caption='time (good rel coleagues.RData)' datatype='date' name='[time (good_rel_coleagues.RData)]' role='dimension' type='ordinal' />
      <column caption='time (good rel supervisor.RData)' datatype='date' name='[time (good_rel_supervisor.RData)]' role='dimension' type='ordinal' />
      <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
      <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
      <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
      <column caption='time (work health problem.RData)' datatype='date' name='[time (work_health_problem.RData)]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
      <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='values (fruit vegetables.RData)' datatype='real' name='[values (fruit_vegetables.RData)]' role='measure' type='quantitative' />
      <column caption='values (get together.RData)' datatype='real' name='[values (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='values (good rel coleagues.RData)' datatype='real' name='[values (good_rel_coleagues.RData)]' role='measure' type='quantitative' />
      <column caption='values (good rel supervisor.RData)' datatype='real' name='[values (good_rel_supervisor.RData)]' role='measure' type='quantitative' />
      <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
      <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='values (work health problem.RData)' datatype='real' name='[values (work_health_problem.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
      <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of portions]' derivation='None' name='[none:Number of portions:nk]' pivot='key' type='nominal' />
      <column-instance column='[Smoking behaviour]' derivation='None' name='[none:Smoking behaviour:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[geo (poverty.RData)]' derivation='None' name='[none:geo (poverty.RData):nk]' pivot='key' type='nominal' />
      <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
      <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Number of portions:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;0 portions&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;From 1 to 4 portions&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 portions or more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Frequency (drinking.RData):nk]' palette='sf_bluegrass' type='palette'>
            <map to='#27aab0'>
              <bucket>&quot;Never or not in the last 12 months&quot;</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;Less than once a month&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;Every month&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;At least once a week&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Smoking behaviour:nk]' palette='gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;20 or more cigarettes per day&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Less than 20 cigarettes per day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:geo (poverty.RData):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;EL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EU27_2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EU28&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EU27_2007&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:lev_satis:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MED&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:levels:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Very good&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Fair&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Very good or good&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Very bad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bad or very bad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Duration:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Zero minutes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='BMI.RData' id='BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='BMI.RData' table='[BMI.RData]' type='table' />
            </properties>
          </object>
          <object caption='activities.RData' id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
            </properties>
          </object>
          <object caption='drinking.RData' id='drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='drinking.RData' table='[drinking.RData]' type='table' />
            </properties>
          </object>
          <object caption='fruit_vegetables.RData' id='fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='fruit_vegetables.RData' table='[fruit_vegetables.RData]' type='table' />
            </properties>
          </object>
          <object caption='geo_dates.RData' id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='get_together.RData' id='get_together.RData_32250D35A0C042CC918EFD895D987719'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
            </properties>
          </object>
          <object caption='good_rel_coleagues.RData' id='good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_coleagues.RData' table='[good_rel_coleagues.RData]' type='table' />
            </properties>
          </object>
          <object caption='good_rel_supervisor.RData' id='good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_supervisor.RData' table='[good_rel_supervisor.RData]' type='table' />
            </properties>
          </object>
          <object caption='over_qualification.RData' id='over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='over_qualification.RData' table='[over_qualification.RData]' type='table' />
            </properties>
          </object>
          <object caption='poverty.RData' id='poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='poverty.RData' table='[poverty.RData]' type='table' />
            </properties>
          </object>
          <object caption='satisfaction.RData' id='satisfaction.RData_F091EC82533343EF8928718D907A4B8E'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='satisfaction.RData' table='[satisfaction.RData]' type='table' />
            </properties>
          </object>
          <object caption='self_health.RData' id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
            </properties>
          </object>
          <object caption='smokers.RData' id='smokers.RData_69F8F2CEDE24439196090F46BE0C30A7'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='smokers.RData' table='[smokers.RData]' type='table' />
            </properties>
          </object>
          <object caption='time_health_enhancing.RData' id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
            </properties>
          </object>
          <object caption='underemployment.RData' id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
            </properties>
          </object>
          <object caption='vacancy rate.RData' id='vacancy rate.RData_A379AB40C52341268FB8320822157486'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='vacancy rate.RData' table='[vacancy rate.RData]' type='table' />
            </properties>
          </object>
          <object caption='work_health_problem.RData' id='work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='work_health_problem.RData' table='[work_health_problem.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (BMI.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (BMI.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (activities.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (activities.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo (smokers.RData)]' />
                <expression op='[geo (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Sex (smokers.RData)]' />
                <expression op='[Sex (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[International Standard Classification of Education (ISCED 2011) (smokers.RData)]' />
                <expression op='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Age class (smokers.RData)]' />
                <expression op='[Age class (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time (smokers.RData)]' />
                <expression op='[time (drinking.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='smokers.RData_69F8F2CEDE24439196090F46BE0C30A7' />
            <second-end-point object-id='drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (fruit_vegetables.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (fruit_vegetables.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (get_together.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (get_together.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='get_together.RData_32250D35A0C042CC918EFD895D987719' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (good_rel_coleagues.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (good_rel_coleagues.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Age class (good_rel_coleagues.RData)]' />
                <expression op='[Age class (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[geo (good_rel_coleagues.RData)]' />
                <expression op='[geo (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Sex (good_rel_coleagues.RData)]' />
                <expression op='[Sex (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time (good_rel_coleagues.RData)]' />
                <expression op='[time (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Time frequency (good_rel_coleagues.RData)]' />
                <expression op='[Time frequency (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Unit of measure (good_rel_coleagues.RData)]' />
                <expression op='[Unit of measure (good_rel_supervisor.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D' unique-key='true' />
            <second-end-point object-id='good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (over_qualification.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (over_qualification.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (poverty.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (poverty.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (satisfaction.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (satisfaction.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='satisfaction.RData_F091EC82533343EF8928718D907A4B8E' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (self_health.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (self_health.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (smokers.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (smokers.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='smokers.RData_69F8F2CEDE24439196090F46BE0C30A7' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (time_health_enhancing.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (time_health_enhancing.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (underemployment.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (underemployment.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (vacancy rate.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (vacancy rate.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='vacancy rate.RData_A379AB40C52341268FB8320822157486' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (work_health_problem.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (work_health_problem.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='activities'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='None' name='[none:age:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[frequenc]' derivation='None' name='[none:frequenc:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex]' derivation='None' name='[none:sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit]' derivation='None' name='[none:unit:nk]' pivot='key' type='nominal' />
            <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (activities.RData)]' role='dimension' type='ordinal' />
            <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[time (activities.RData)]' derivation='Year' name='[yr:time (activities.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]'>
            <groupfilter function='member' level='[none:age:nk]' member='&quot;From 16 to 24 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]'>
            <groupfilter function='member' level='[none:frequenc:nk]' member='&quot;At least once&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]'>
            <groupfilter function='member' level='[none:sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit:nk]' />
              <groupfilter function='member' level='[none:unit:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]'>
            <groupfilter function='member' level='[yr:time (activities.RData):ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' />
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{43001160-6874-4204-824A-001E443F5538}' />
    </worksheet>
    <worksheet name='bad_habits_age'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Smoking behaviour]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (smokers.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (drinking.RData)]' derivation='Avg' name='[avg:values (drinking.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[geo (drinking.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (drinking.RData)]' derivation='None' name='[none:Age class (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (drinking.RData)]' derivation='None' name='[none:Sex (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Smoking behaviour]' derivation='None' name='[none:Smoking behaviour:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (drinking.RData)]' derivation='None' name='[none:Unit of measure (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (smokers.RData)]' derivation='None' name='[none:Unit of measure (smokers.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (drinking.RData)]' derivation='None' name='[none:geo (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (smokers.RData)]' derivation='Sum' name='[sum:values (smokers.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[time (drinking.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (drinking.RData)]' role='measure' type='quantitative' />
            <column datatype='real' name='[values (smokers.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (drinking.RData)]' derivation='Year' name='[yr:time (drinking.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 15 to 19 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 25 to 29 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 55 to 64 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 65 to 74 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Never or not in the last 12 months&quot;</bucket>
              <bucket>&quot;Less than once a month&quot;</bucket>
              <bucket>&quot;Every month&quot;</bucket>
              <bucket>&quot;At least once a week&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Females&quot;' />
              <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Males&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Smoking behaviour:nk]' />
              <groupfilter function='member' level='[none:Smoking behaviour:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 20 cigarettes per day&quot;</bucket>
              <bucket>&quot;20 or more cigarettes per day&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (drinking.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (drinking.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (smokers.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:geo (drinking.RData):nk]' member='&quot;ES&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]'>
            <groupfilter function='member' level='[yr:time (drinking.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7361326217651367' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.52674031257629395' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk] + [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk])</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk] / [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk])</cols>
      </table>
      <simple-id uuid='{62315233-3BB1-4109-9706-89FEFAF710FF}' />
    </worksheet>
    <worksheet name='bad_habits_educ'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Smoking behaviour]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (smokers.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (drinking.RData)]' derivation='Avg' name='[avg:values (drinking.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (smokers.RData)]' derivation='Avg' name='[avg:values (smokers.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[geo (drinking.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (drinking.RData)]' derivation='None' name='[none:Age class (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (drinking.RData)]' derivation='None' name='[none:Sex (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Smoking behaviour]' derivation='None' name='[none:Smoking behaviour:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (drinking.RData)]' derivation='None' name='[none:Unit of measure (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (smokers.RData)]' derivation='None' name='[none:Unit of measure (smokers.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (drinking.RData)]' derivation='None' name='[none:geo (drinking.RData):nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (drinking.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (drinking.RData)]' role='measure' type='quantitative' />
            <column datatype='real' name='[values (smokers.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (drinking.RData)]' derivation='Year' name='[yr:time (drinking.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Never or not in the last 12 months&quot;</bucket>
              <bucket>&quot;Less than once a month&quot;</bucket>
              <bucket>&quot;Every month&quot;</bucket>
              <bucket>&quot;At least once a week&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Females&quot;' />
              <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Males&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Smoking behaviour:nk]' />
              <groupfilter function='member' level='[none:Smoking behaviour:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 20 cigarettes per day&quot;</bucket>
              <bucket>&quot;20 or more cigarettes per day&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (drinking.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (drinking.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (smokers.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:geo (drinking.RData):nk]' member='&quot;EU27_2020&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]'>
            <groupfilter function='member' level='[yr:time (drinking.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7361326217651367' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.52674031257629395' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk] + [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk])</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk] / [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk])</cols>
      </table>
      <simple-id uuid='{AFFCE484-9E6F-4A70-9048-BE9C0FA648D7}' />
    </worksheet>
    <worksheet name='bad_habits_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Time frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (drinking.RData)]' derivation='None' name='[none:Age class (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (drinking.RData)]' derivation='None' name='[none:Sex (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Time frequency (drinking.RData)]' derivation='None' name='[none:Time frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (drinking.RData)]' derivation='Sum' name='[sum:values (drinking.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[time (drinking.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (drinking.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (drinking.RData)]' derivation='Year' name='[yr:time (drinking.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Frequency (drinking.RData):nk]' member='&quot;At least once a week&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Time frequency (drinking.RData):nk]' />
              <groupfilter function='member' level='[none:Time frequency (drinking.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]'>
            <groupfilter function='member' level='[yr:time (drinking.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2A735053-7542-406D-973A-310D5DAF50C6}' />
    </worksheet>
    <worksheet name='beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column caption='Unit of measure (hosp beds.RData)' datatype='string' name='[Unit of measure (hosp_beds.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (hosp_beds.RData)]' derivation='Avg' name='[avg:values (hosp_beds.RData):qk]' pivot='key' type='quantitative' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Unit of measure (hosp_beds.RData)]' derivation='None' name='[none:Unit of measure (hosp_beds.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column caption='values (hosp beds.RData)' datatype='real' name='[values (hosp_beds.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (hosp_beds.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (hosp_beds.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (hosp_beds.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (hosp_beds.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='8998358.2275716737' min='-8848598.1726668309' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='11425108.527582187' min='3979752.4572063312' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2BBD2C5C-868E-4A4F-B8F4-D1F08000DEE8}' />
    </worksheet>
    <worksheet name='city living cond'>
      <table>
        <view>
          <datasources>
            <datasource caption='city data' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wyeh3p1rd106b1g75pnn0q7e2uf'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
                <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
                <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
                <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
                <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
                <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
                <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
                <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
                <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
                <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
                <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
                <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
                <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
                <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
                <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
                <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
                <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
                <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
                <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
                <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[indic_ur]' derivation='None' name='[none:indic_ur:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]'>
            <groupfilter function='member' level='[none:indic_ur:nk]' member='&quot;Average disposable annual household income - EUR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]' field-type='quantitative' max='4207445.3698918596' min='-1285432.8226952429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]' field-type='quantitative' max='7704729.0012606503' min='4285024.9978328897' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' />
              <size column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]</rows>
        <cols>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{79C0A39F-02CC-4F34-84B1-586ECDD54936}' />
    </worksheet>
    <worksheet name='fruits_veg'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (fruit vegetables.RData)' datatype='string' name='[Age class (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (fruit vegetables.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Number of portions]' role='dimension' type='nominal' />
            <column caption='Sex (fruit vegetables.RData)' datatype='string' name='[Sex (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column caption='geo (fruit vegetables.RData)' datatype='string' name='[geo (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (fruit_vegetables.RData)]' derivation='None' name='[none:Age class (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of portions]' derivation='None' name='[none:Number of portions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (fruit_vegetables.RData)]' derivation='None' name='[none:Sex (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (fruit_vegetables.RData)]' derivation='None' name='[none:geo (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (fruit_vegetables.RData)]' derivation='Sum' name='[sum:values (fruit_vegetables.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (fruit vegetables.RData)' datatype='date' name='[time (fruit_vegetables.RData)]' role='dimension' type='ordinal' />
            <column caption='values (fruit vegetables.RData)' datatype='real' name='[values (fruit_vegetables.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (fruit_vegetables.RData)]' derivation='Year' name='[yr:time (fruit_vegetables.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;5 portions or more&quot;</bucket>
              <bucket>&quot;From 1 to 4 portions&quot;</bucket>
              <bucket>&quot;0 portions&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Males&quot;</bucket>
              <bucket>&quot;Females&quot;</bucket>
              <bucket>&quot;Total&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (fruit_vegetables.RData):nk]'>
            <groupfilter function='member' level='[none:geo (fruit_vegetables.RData):nk]' member='&quot;EU27_2020&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]'>
            <groupfilter function='member' level='[yr:time (fruit_vegetables.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk] / [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk])</cols>
      </table>
      <simple-id uuid='{152150BC-B1F9-4A62-BE69-1E5A4FC01C9D}' />
    </worksheet>
    <worksheet name='health_income'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (self_health.RData)]' derivation='Year' name='[yr:time (self_health.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:quantile (self_health.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]'>
            <groupfilter function='member' level='[yr:time (self_health.RData):ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</cols>
      </table>
      <simple-id uuid='{C65641FB-E666-48D9-B2A6-C05E98FE86D1}' />
    </worksheet>
    <worksheet name='income'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Ciudad de Ceuta&quot;' value='&quot;ES64&quot;' />
                <semantic-value key='&quot;Ciudad de Melilla&quot;' value='&quot;ES63&quot;' />
                <semantic-value key='&quot;Comunitat Valenciana&quot;' value='&quot;ES52&quot;' />
              </semantic-values>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[NUTS2_name (nama_10r_2hhinc.RData)]' derivation='None' name='[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (nama_10r_2hhinc.RData)]' derivation='None' name='[none:freq (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:freq (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='7341571.9361555912' min='-6030686.2951889159' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='10396204.193777176' min='2754913.4342737272' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD327D37-FF64-4260-8EDA-774862904D4E}' />
    </worksheet>
    <worksheet name='income low'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (nama_10r_2hhinc.RData)]' derivation='None' name='[none:unit (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466649944059]' derivation='User' name='[usr:Calculation_-8711650466649944059:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
              </table-calc>
            </column-instance>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' using='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' />
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:unit (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:5]' included-values='in-range'>
            <min>221</min>
            <max>241</max>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' field-type='quantitative' max='45000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]</cols>
      </table>
      <simple-id uuid='{BC01C4D5-D8AD-4175-B81A-F641FC9D25C6}' />
    </worksheet>
    <worksheet name='income top'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Avg' name='[avg:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (nama_10r_2hhinc.RData)]' derivation='None' name='[none:unit (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466649944059]' derivation='User' name='[usr:Calculation_-8711650466649944059:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[NUTS2_name]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
              </table-calc>
            </column-instance>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' using='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (nama_10r_2hhinc.RData):qk]' />
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:unit (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:7]' included-values='in-range'>
            <min>1</min>
            <max>20</max>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]</cols>
      </table>
      <simple-id uuid='{FD237179-2F6C-4080-9175-6627455B7A83}' />
    </worksheet>
    <worksheet name='income_hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Count' name='[cnt:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (nama 10r 2hhinc.RData) (bin)]' derivation='None' name='[none:values (nama 10r 2hhinc.RData) (bin):qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
            </column>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]' field-type='quantitative' max='45000.0' min='1642.5' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (nama_10r_2hhinc.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (nama 10r 2hhinc.RData) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{58DAA26C-E44E-4FA6-920D-DB4B166C3217}' />
    </worksheet>
    <worksheet name='job_relations'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (good rel coleagues.RData)' datatype='string' name='[Age class (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
            <column caption='Sex (good rel coleagues.RData)' datatype='string' name='[Sex (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (good_rel_coleagues.RData)]' derivation='None' name='[none:Age class (good_rel_coleagues.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (good_rel_coleagues.RData)]' derivation='None' name='[none:Sex (good_rel_coleagues.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (good_rel_coleagues.RData)]' derivation='Sum' name='[sum:values (good_rel_coleagues.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (good_rel_supervisor.RData)]' derivation='Sum' name='[sum:values (good_rel_supervisor.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (good rel coleagues.RData)' datatype='date' name='[time (good_rel_coleagues.RData)]' role='dimension' type='ordinal' />
            <column caption='values (good rel coleagues.RData)' datatype='real' name='[values (good_rel_coleagues.RData)]' role='measure' type='quantitative' />
            <column caption='values (good rel supervisor.RData)' datatype='real' name='[values (good_rel_supervisor.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (good_rel_coleagues.RData)]' derivation='Year' name='[yr:time (good_rel_coleagues.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (good_rel_coleagues.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (good_rel_coleagues.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (good_rel_coleagues.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (good_rel_coleagues.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (good_rel_coleagues.RData):ok]'>
            <groupfilter function='member' level='[yr:time (good_rel_coleagues.RData):ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (good_rel_coleagues.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (good_rel_coleagues.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (good_rel_coleagues.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.57071822881698608' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_supervisor.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_supervisor.RData):qk] + [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk])</cols>
      </table>
      <simple-id uuid='{E12FBBA0-AEEA-4919-A12B-18D6A5088EA8}' />
    </worksheet>
    <worksheet name='over_educ'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Migration status]' role='dimension' type='nominal' />
            <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='geo (over qualification.RData)' datatype='string' name='[geo (over_qualification.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (over_qualification.RData)]' derivation='None' name='[none:Age class (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Migration status]' derivation='None' name='[none:Migration status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (over_qualification.RData)]' derivation='None' name='[none:Sex (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (over_qualification.RData)]' derivation='None' name='[none:Unit of measure (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (over_qualification.RData)]' derivation='None' name='[none:geo (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (over_qualification.RData)]' derivation='Sum' name='[sum:values (over_qualification.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
            <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (over_qualification.RData)]' derivation='Year' name='[yr:time (over_qualification.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (over_qualification.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]'>
            <groupfilter function='member' level='[none:Migration status:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (over_qualification.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (over_qualification.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (over_qualification.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:geo (over_qualification.RData):nk]' member='&quot;AT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]'>
            <groupfilter function='member' level='[yr:time (over_qualification.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]</cols>
      </table>
      <simple-id uuid='{A132A913-EEE4-46F0-8D30-714298F99B87}' />
    </worksheet>
    <worksheet name='over_inmig'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Migration status]' role='dimension' type='nominal' />
            <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='geo (over qualification.RData)' datatype='string' name='[geo (over_qualification.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (over_qualification.RData)]' derivation='None' name='[none:Age class (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Migration status]' derivation='None' name='[none:Migration status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (over_qualification.RData)]' derivation='None' name='[none:Sex (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (over_qualification.RData)]' derivation='None' name='[none:Unit of measure (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (over_qualification.RData)]' derivation='None' name='[none:geo (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (over_qualification.RData)]' derivation='Sum' name='[sum:values (over_qualification.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
            <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (over_qualification.RData)]' derivation='Year' name='[yr:time (over_qualification.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (over_qualification.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (over_qualification.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (over_qualification.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (over_qualification.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:geo (over_qualification.RData):nk]' member='&quot;AT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]'>
            <groupfilter function='member' level='[yr:time (over_qualification.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]</cols>
      </table>
      <simple-id uuid='{6E543644-1246-4FC7-ACD2-1283486E537D}' />
    </worksheet>
    <worksheet name='over_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Migration status]' role='dimension' type='nominal' />
            <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (over_qualification.RData)]' derivation='None' name='[none:Age class (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Migration status]' derivation='None' name='[none:Migration status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (over_qualification.RData)]' derivation='None' name='[none:Sex (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (over_qualification.RData)]' derivation='None' name='[none:Unit of measure (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (over_qualification.RData)]' derivation='Sum' name='[sum:values (over_qualification.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
            <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (over_qualification.RData)]' derivation='Year' name='[yr:time (over_qualification.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (over_qualification.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]'>
            <groupfilter function='member' level='[none:Migration status:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (over_qualification.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (over_qualification.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (over_qualification.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]'>
            <groupfilter function='member' level='[yr:time (over_qualification.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{91DD8398-7932-4EA4-8077-64BBDE4EBF11}' />
    </worksheet>
    <worksheet name='physicians'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Unit of measure]' role='dimension' type='nominal' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Unit of measure]' derivation='None' name='[none:Unit of measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]'>
            <groupfilter function='member' level='[none:Unit of measure:nk]' member='&quot;Per hundred thousand inhabitants&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='8998358.2275716737' min='-8848598.1726668309' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='11425108.527582187' min='3979752.4572063312' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5F9B334B-D507-4D05-BC37-F45069A6A85F}' />
    </worksheet>
    <worksheet name='poverty_age'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income and living conditions indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (poverty.RData)]' derivation='Avg' name='[avg:values (poverty.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[geo (poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (poverty.RData)]' derivation='None' name='[none:Age class (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Income and living conditions indicator]' derivation='None' name='[none:Income and living conditions indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (poverty.RData)]' derivation='None' name='[none:Sex (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (poverty.RData)]' derivation='None' name='[none:Unit of measure (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (poverty.RData)]' derivation='None' name='[none:geo (poverty.RData):nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (poverty.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (poverty.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (poverty.RData)]' derivation='Year' name='[yr:time (poverty.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;75 years or over&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 16 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 25 to 49 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 50 to 64 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 65 to 74 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;Less than 16 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 16 years&quot;</bucket>
              <bucket>&quot;From 16 to 24 years&quot;</bucket>
              <bucket>&quot;From 20 to 24 years&quot;</bucket>
              <bucket>&quot;From 25 to 49 years&quot;</bucket>
              <bucket>&quot;From 50 to 64 years&quot;</bucket>
              <bucket>&quot;From 65 to 74 years&quot;</bucket>
              <bucket>&quot;75 years or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]'>
            <groupfilter function='member' level='[none:Income and living conditions indicator:nk]' member='&quot;At risk of poverty rate (cut-off point: 40\% of mean equivalised income)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (poverty.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (poverty.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]'>
            <groupfilter function='member' level='[yr:time (poverty.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (poverty.RData):nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</cols>
      </table>
      <simple-id uuid='{FA121FBE-9F68-4938-9EA2-7DFDDAB43312}' />
    </worksheet>
    <worksheet name='poverty_reg'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='TIME PERIOD (road accidents.RData)' datatype='date' name='[TIME_PERIOD (road_accidents.RData)]' role='dimension' type='ordinal' />
            <column caption='Unit of measure (risk poverty.RData)' datatype='string' name='[Unit of measure (risk_poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (risk_poverty.RData)]' derivation='Avg' name='[avg:values (risk_poverty.RData):qk]' pivot='key' type='quantitative' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Unit of measure (risk_poverty.RData)]' derivation='None' name='[none:Unit of measure (risk_poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column caption='values (risk poverty.RData)' datatype='real' name='[values (risk_poverty.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (road_accidents.RData)]' derivation='Year' name='[yr:TIME_PERIOD (road_accidents.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (risk_poverty.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (risk_poverty.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (risk_poverty.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (road_accidents.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (road_accidents.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (road_accidents.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (risk_poverty.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F0B9CFEA-4882-48EF-8DF9-CF359E373A4F}' />
    </worksheet>
    <worksheet name='povery_time'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income and living conditions indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (poverty.RData)]' derivation='Avg' name='[avg:values (poverty.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (poverty.RData)]' derivation='None' name='[none:Age class (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Income and living conditions indicator]' derivation='None' name='[none:Income and living conditions indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (poverty.RData)]' derivation='None' name='[none:Sex (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (poverty.RData)]' derivation='None' name='[none:Unit of measure (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (poverty.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (poverty.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (poverty.RData)]' derivation='Year' name='[yr:time (poverty.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]'>
            <groupfilter function='member' level='[none:Income and living conditions indicator:nk]' member='&quot;At risk of poverty rate (cut-off point: 40\% of mean equivalised income)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (poverty.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (poverty.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Estonia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</cols>
      </table>
      <simple-id uuid='{AA1313D2-B827-45DE-8698-B709C88D13FC}' />
    </worksheet>
    <worksheet name='satisfaction_levels'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (satisfaction.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (satisfaction.RData)]' derivation='Avg' name='[avg:values (satisfaction.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
            <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
            <column-instance column='[age (satisfaction.RData)]' derivation='None' name='[none:age (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (satisfaction.RData)]' derivation='None' name='[none:sex (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (satisfaction.RData)]' derivation='None' name='[none:unit (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (satisfaction.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (satisfaction.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (satisfaction.RData)]' derivation='Year' name='[yr:time (satisfaction.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:age (satisfaction.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Greece&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]'>
            <groupfilter function='member' level='[none:education:nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:sex (satisfaction.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:unit (satisfaction.RData):nk]' member='&quot;PC&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]'>
            <groupfilter function='member' level='[yr:time (satisfaction.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]</cols>
      </table>
      <simple-id uuid='{6D88F233-BE5E-4467-9587-825310A1661C}' />
    </worksheet>
    <worksheet name='satisfaction_rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (satisfaction.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (satisfaction.RData)]' derivation='Avg' name='[avg:values (satisfaction.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
            <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
            <column-instance column='[age (satisfaction.RData)]' derivation='None' name='[none:age (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (satisfaction.RData)]' derivation='None' name='[none:sex (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (satisfaction.RData)]' derivation='None' name='[none:unit (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (satisfaction.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (satisfaction.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (satisfaction.RData)]' derivation='Year' name='[yr:time (satisfaction.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:age (satisfaction.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]'>
            <groupfilter function='member' level='[none:education:nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]'>
            <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Job satisfaction&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]'>
            <groupfilter function='member' level='[none:lev_satis:nk]' member='%null%' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:sex (satisfaction.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:unit (satisfaction.RData):nk]' member='&quot;RTG&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]'>
            <groupfilter function='member' level='[yr:time (satisfaction.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F963CEA9-8ADC-42FE-B60B-FEAAF82A05DD}' />
    </worksheet>
    <worksheet name='self_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
            </column>
            <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[age (self_health.RData)]' derivation='None' name='[none:age (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (self_health.RData)]' derivation='None' name='[none:freq (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (self_health.RData)]' derivation='None' name='[none:sex (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (self_health.RData)]' derivation='None' name='[none:unit (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8183884885348159488]' derivation='Sum' name='[sum:Calculation_-8183884885348159488:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:age (self_health.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:freq (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:levels:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Bad or very bad&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Very bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Fair&quot;</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Very good&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:sex (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:unit (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:time:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]</cols>
      </table>
      <simple-id uuid='{9C214ACD-B248-458D-BD97-15AB6338C325}' />
    </worksheet>
    <worksheet name='test'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
            </column>
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-8183884885348159488]' derivation='Sum' name='[sum:Calculation_-8183884885348159488:qk]' pivot='key' type='quantitative' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]</cols>
      </table>
      <simple-id uuid='{222E04EC-99BF-437F-9E1C-B4DA48D45B41}' />
    </worksheet>
    <worksheet name='time_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column caption='Sort time health' datatype='real' name='[Calculation_-8711650466664865789]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Duration]=&quot;300 minutes or over&quot;&#13;&#10;then [values (time_health_enhancing.RData)]&#13;&#10;else null       &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='string' name='[Time frequency (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466664865789]' derivation='Avg' name='[avg:Calculation_-8711650466664865789:qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time frequency (time_health_enhancing.RData)]' derivation='None' name='[none:Time frequency (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (time_health_enhancing.RData)]' derivation='None' name='[none:Unit of measure (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='member' level='[none:Age class:nk]' member='&quot;18 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:Duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Time frequency (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:Time frequency (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:Calculation_-8711650466664865789:qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:time:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</cols>
      </table>
      <simple-id uuid='{7A7FEDCE-33E2-4947-BA42-34B214407AAD}' />
    </worksheet>
    <worksheet name='time_health_age_sex'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 15 to 19 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 15 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 25 to 34 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 55 to 64 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 65 to 74 years&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:Duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;300 minutes or over&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sex:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Sex:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (2007-2013)&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk] / [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk])</cols>
      </table>
      <simple-id uuid='{76B6CC1F-C04D-45A1-ABFC-41BD2071C664}' />
    </worksheet>
    <worksheet name='time_health_educ_sex'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='member' level='[none:Age class:nk]' member='&quot;18 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:Duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;300 minutes or over&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sex:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Sex:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (2007-2013)&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk] / [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk])</cols>
      </table>
      <simple-id uuid='{16FB6B15-0E5C-49E6-A14C-7061C99CA00D}' />
    </worksheet>
    <worksheet name='time_vs_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[age (self_health.RData)]' derivation='None' name='[none:age (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (self_health.RData)]' derivation='None' name='[none:sex (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (self_health.RData)]' derivation='None' name='[none:unit (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (self_health.RData)]' derivation='Year' name='[yr:time (self_health.RData):ok]' pivot='key' type='ordinal' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='member' level='[none:Age class:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:age (self_health.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:sex (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:unit (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]'>
            <groupfilter function='member' level='[yr:time (self_health.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</cols>
      </table>
      <simple-id uuid='{724D08A3-5387-4708-81A8-B41330571382}' />
    </worksheet>
    <worksheet name='underemployment'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (underemployment.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (underemployment.RData)]' derivation='Avg' name='[avg:values (underemployment.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (underemployment.RData)]' derivation='None' name='[none:Age class (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (underemployment.RData)]' derivation='None' name='[none:Sex (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (underemployment.RData)]' derivation='None' name='[none:Unit of measure (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (underemployment.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (underemployment.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (underemployment.RData)]' derivation='Year' name='[yr:time (underemployment.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 12 to 17 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 18 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 25 to 29 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 55 to 59 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 6 to 11 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;Less than 6 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 6 years&quot;</bucket>
              <bucket>&quot;From 6 to 11 years&quot;</bucket>
              <bucket>&quot;From 12 to 17 years&quot;</bucket>
              <bucket>&quot;From 18 to 24 years&quot;</bucket>
              <bucket>&quot;From 20 to 24 years&quot;</bucket>
              <bucket>&quot;From 25 to 29 years&quot;</bucket>
              <bucket>&quot;From 35 to 44 years&quot;</bucket>
              <bucket>&quot;From 45 to 54 years&quot;</bucket>
              <bucket>&quot;From 55 to 59 years&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (underemployment.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (underemployment.RData):nk]' member='&quot;Percentage of total population aged less than 60&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]'>
            <groupfilter function='member' level='[yr:time (underemployment.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (underemployment.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]</cols>
      </table>
      <simple-id uuid='{881456DE-BC9C-4A32-9008-E8CB85C669DA}' />
    </worksheet>
    <worksheet name='unempl_educ'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Count' name='[cnt:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (unemployment rate.RData) (bin) 1]' derivation='None' name='[none:values (unemployment rate.RData) (bin) 1:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='values (unemployment rate.RData) (bin) (1)' datatype='integer' name='[values (unemployment rate.RData) (bin) 1]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
            </column>
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (unemployment_rate.RData)]' derivation='Year' name='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (unemployment_rate.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (unemployment rate.RData) (bin) 1:qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (unemployment rate.RData) (bin) 1]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F10FDEC5-A5AA-49E3-8C60-07702963FBBF}' />
    </worksheet>
    <worksheet name='unempl_high'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions umeployment' datatype='integer' name='[Calculation_1295347907822551040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (unemployment_rate.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Sum' name='[sum:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1295347907822551040]' derivation='User' name='[usr:Calculation_1295347907822551040:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[NUTS2_name]' />
              </table-calc>
            </column-instance>
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (unemployment_rate.RData)]' derivation='Year' name='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_1295347907822551040:qk:7]' included-values='in-range'>
            <min>1</min>
            <max>20</max>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (unemployment_rate.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_1295347907822551040:qk:7]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (unemployment_rate.RData):qk]</cols>
      </table>
      <simple-id uuid='{0F2185EF-FC93-4358-BFE9-E9C267639DE1}' />
    </worksheet>
    <worksheet name='unempl_hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Count' name='[cnt:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (unemployment rate.RData) (bin)]' derivation='None' name='[none:values (unemployment rate.RData) (bin):qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[values (unemployment rate.RData) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
            </column>
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (unemployment_rate.RData)]' derivation='Year' name='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]'>
            <groupfilter function='level-members' level='[none:country_name (geo_dates.RData):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (unemployment_rate.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (unemployment rate.RData) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (unemployment rate.RData) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{9C4612FA-2D56-4E1F-93F6-D6A80BB07F35}' />
    </worksheet>
    <worksheet name='unempl_reg'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Avg' name='[avg:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Age class:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age class:nk]' />
              <groupfilter function='member' level='[none:Age class:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Age class:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D1F4F78-14D0-45E2-A4ED-AA53A41ED2B8}' />
    </worksheet>
    <worksheet name='work_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (work health problem.RData)' datatype='string' name='[Age class (work_health_problem.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (work health problem.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' role='dimension' type='nominal' />
            <column caption='Sex (work health problem.RData)' datatype='string' name='[Sex (work_health_problem.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (work_health_problem.RData)]' derivation='None' name='[none:Age class (work_health_problem.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (work_health_problem.RData)]' derivation='None' name='[none:Sex (work_health_problem.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (work_health_problem.RData)]' derivation='Sum' name='[sum:values (work_health_problem.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (work health problem.RData)' datatype='date' name='[time (work_health_problem.RData)]' role='dimension' type='ordinal' />
            <column caption='values (work health problem.RData)' datatype='real' name='[values (work_health_problem.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (work_health_problem.RData)]' derivation='Year' name='[yr:time (work_health_problem.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age class (work_health_problem.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='&quot;From 15 to 64 years&quot;' />
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='&quot;From 15 to 74 years&quot;' />
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='&quot;From 35 to 64 years&quot;' />
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (work_health_problem.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (work_health_problem.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Austria&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (work_health_problem.RData):ok]'>
            <groupfilter function='member' level='[yr:time (work_health_problem.RData):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (work_health_problem.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (work_health_problem.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]</cols>
      </table>
      <simple-id uuid='{0B6F6B35-E2FC-4C73-A45F-072BCD20C97A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='habits'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[geo (drinking.RData)]' role='dimension' type='nominal' />
        <column-instance column='[geo (drinking.RData)]' derivation='None' name='[none:geo (drinking.RData):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='bad_habits_educ' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='bad_habits_age' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='bad_habits_map' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='17' name='fruits_veg' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='8' mode='dropdown' name='bad_habits_educ' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='9' name='bad_habits_educ' pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type-v2='color' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='10' name='bad_habits_educ' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type-v2='color' w='16000' x='83200' y='20750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='12' mode='dropdown' name='bad_habits_age' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]' type-v2='filter' w='16000' x='83200' y='29000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='16' name='bad_habits_map' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' type-v2='color' w='16000' x='83200' y='35500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='18' name='fruits_veg' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type-v2='color' w='16000' x='83200' y='43625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='37' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='17' is-fixed='true' name='fruits_veg' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='18' name='fruits_veg' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type-v2='color' w='16000' x='83200' y='43625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='bad_habits_map' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='16' name='bad_habits_map' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' type-v2='color' w='16000' x='83200' y='35500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='dropdown' name='bad_habits_age' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]' type-v2='filter' w='16000' x='83200' y='29000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='bad_habits_age' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='dropdown' name='bad_habits_educ' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='bad_habits_educ' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='9' name='bad_habits_educ' pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type-v2='color' w='16000' x='83200' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='10' name='bad_habits_educ' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type-v2='color' w='16000' x='83200' y='20750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{55C87B02-2F82-433A-8165-542D0516AC37}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='health'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
        <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
        <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='physicians' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='self_health' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='time_health' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='47' name='beds' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9375' id='8' mode='slider' name='physicians' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='physicians' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type-v2='color' w='16000' x='83200' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='12' name='self_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type-v2='color' w='16000' x='83200' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='14' name='time_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='16000' x='83200' y='34250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='11' mode='slider' name='self_health' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type-v2='filter' w='16000' x='83200' y='47500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='48' name='beds' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' type-v2='color' w='16000' x='83200' y='56875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='64' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='63' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='47' is-fixed='true' name='beds' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='48' name='beds' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' type-v2='color' w='16000' x='83200' y='56875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='8' mode='slider' name='physicians' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='physicians' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='physicians' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type-v2='color' w='16000' x='83200' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='11' mode='slider' name='self_health' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type-v2='filter' w='16000' x='83200' y='47500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='self_health' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='12' name='self_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type-v2='color' w='16000' x='83200' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='time_health' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='14' name='time_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='16000' x='83200' y='34250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E88EA626-18DD-4F00-8F86-D29875329578}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='health_2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='time_health_age_sex' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='time_health_educ_sex' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='health_income' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='time_vs_health' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='13250' id='8' name='time_health_age_sex' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='11' name='health_income' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' type-v2='color' w='16000' x='83200' y='14250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='39' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='time_health_educ_sex' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='time_health_age_sex' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='8' name='time_health_age_sex' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='health_income' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='11' name='health_income' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' type-v2='color' w='16000' x='83200' y='14250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='time_vs_health' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{030206DA-3EC2-404B-BD0F-F6DEF9E0F029}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='income_das'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
        <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
        <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
        <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='income' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='income low' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='income top' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='income_hist' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9375' id='8' mode='slider' name='income' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='income' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type-v2='color' w='16000' x='83200' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='11' name='income low' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='14' mode='slider' name='income_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='34250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='52' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='51' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='income top' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='8' mode='slider' name='income' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='income' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='income' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type-v2='color' w='16000' x='83200' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='income low' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='11' name='income low' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='14' mode='slider' name='income_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='34250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='income_hist' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FD94A390-07AB-46B9-8117-DA64092ACAFD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='job_quality'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='24000' id='3' name='work_health' w='38800' x='44400' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='9' name='job_relations' w='43600' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='74000' id='11' name='underemployment' w='38800' x='44400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='work_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='10' name='job_relations' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' type-v2='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='12' name='underemployment' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' type-v2='color' w='16000' x='83200' y='17375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='job_relations' w='43600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='10' name='job_relations' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' type-v2='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='11' is-fixed='true' name='underemployment' w='38800' x='44400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='underemployment' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' type-v2='color' w='16000' x='83200' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24000' id='3' is-fixed='true' name='work_health' w='38800' x='44400' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='work_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8DC12EA9-483A-4C69-988D-16B9B86CC964}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='overqual'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='414' h='98000' id='9' is-fixed='true' type-v2='layout-basic' w='41400' x='800' y='1000'>
              <zone h='49000' id='3' name='over_inmig' w='41400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='over_educ' w='41400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='98000' id='8' name='over_map' w='41000' x='42200' y='1000'>
              <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='160' h='98000' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='12' name='over_map' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='over_inmig' w='41400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='8' is-fixed='true' name='over_map' w='41000' x='42200' y='1000'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='over_map' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='over_educ' w='41400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BD6535DB-3501-4FC5-A918-540AF36D42CF}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='poverty'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='poverty_reg' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='povery_time' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='poverty_age' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='poverty_reg' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='76000' id='10' name='povery_time' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5750' id='11' name='povery_time' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='color' w='16000' x='83200' y='85125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='13' name='poverty_age' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]' type-v2='color' w='16000' x='83200' y='90875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='28' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='76000' id='10' mode='checkdropdown' name='povery_time' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='povery_time' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='11' name='povery_time' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='color' w='16000' x='83200' y='85125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='poverty_age' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='13' name='poverty_age' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]' type-v2='color' w='16000' x='83200' y='90875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='poverty_reg' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='poverty_reg' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2A2D6CEA-7060-4942-8360-14BFF788166B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='satisfaction'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
        <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='satisfaction_rating' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='satisfaction_levels' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='8' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type-v2='filter' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='satisfaction_rating' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type-v2='color' w='16000' x='83200' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='12' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='22125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='13' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='28625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='14' name='satisfaction_levels' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' type-v2='color' w='16000' x='83200' y='35125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='55' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='12' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='22125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='13' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='28625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='satisfaction_levels' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='14' name='satisfaction_levels' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' type-v2='color' w='16000' x='83200' y='35125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type-v2='filter' w='16000' x='83200' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='satisfaction_rating' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='satisfaction_rating' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type-v2='color' w='16000' x='83200' y='14000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BC40F8D7-5D09-4CC7-B3E1-8F39BAB9A238}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='unemployment'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='unempl_educ' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='unempl_hist' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='13250' id='8' name='unempl_educ' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13812' id='10' name='unempl_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='filter' w='16000' x='83200' y='14250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13812' id='11' name='unempl_hist' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='28062'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8126' id='13' name='unempl_reg' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' type-v2='color' w='16000' x='83200' y='41874'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='12' name='unempl_reg' w='49200' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='14' name='unempl_high' w='49200' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='unempl_educ' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='8' name='unempl_educ' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13812' id='10' mode='checkdropdown' name='unempl_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='filter' w='16000' x='83200' y='14250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='unempl_hist' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13812' id='11' name='unempl_hist' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='28062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='14' is-fixed='true' name='unempl_high' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='unempl_reg' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8126' id='13' name='unempl_reg' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' type-v2='color' w='16000' x='83200' y='41874'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3A1F6FCC-78CA-4D5F-A1A8-71D33BE2DD1F}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='beds' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (hosp_beds.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{709C71EF-0C0F-49F1-98B6-992DF1CA7020}' />
    </window>
    <window class='worksheet' name='physicians' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB83FB30-D3CA-483A-93C5-872FAF34BFEC}' />
    </window>
    <window class='worksheet' name='self_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16EC6DDA-2081-4A71-A80E-CFDC401479A4}' />
    </window>
    <window class='worksheet' name='time_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86B29200-FAF7-4875-B1C6-C589E02E7445}' />
    </window>
    <window class='dashboard' name='health' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='beds'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='physicians'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='self_health'>
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='time_health'>
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8B0EEA34-BB74-49BB-8576-CA9AE8ED22C5}' />
    </window>
    <window class='worksheet' name='time_health_age_sex' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F46BE4D-FB05-4A7E-9654-7C07B806DB08}' />
    </window>
    <window class='worksheet' name='time_health_educ_sex' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB922F29-0673-4074-B34F-3E516BCE7294}' />
    </window>
    <window class='worksheet' name='time_vs_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A87D27D-4AE7-4236-A65E-1EC07357509F}' />
    </window>
    <window class='worksheet' name='health_income' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD158D8E-5A09-4095-93F4-290521B979A5}' />
    </window>
    <window class='dashboard' name='health_2' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='health_income' />
        <viewpoint name='time_health_age_sex'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='time_health_educ_sex'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='time_vs_health'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{887D26B4-C129-4AD9-9E1D-6B84AD610400}' />
    </window>
    <window class='worksheet' name='bad_habits_educ' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2BE2E4A-165F-4208-9241-5B2B773DA117}' />
    </window>
    <window class='worksheet' name='bad_habits_age' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9072A5F9-2893-4884-82E9-2A36910901EF}' />
    </window>
    <window class='worksheet' name='bad_habits_map' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC75F775-AAE0-4DE0-BA14-4230AEA665A2}' />
    </window>
    <window class='worksheet' name='fruits_veg' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1CE42FC-B9D5-4F90-9659-1E7E3E142CD8}' />
    </window>
    <window class='dashboard' name='habits' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='bad_habits_age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bad_habits_educ'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='bad_habits_map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='fruits_veg'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3382FC6D-892E-423F-9810-E1BB39C537F5}' />
    </window>
    <window class='worksheet' name='city living cond'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]' type='filter' />
            <card mode='slider' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{50541DAF-8670-4F43-B99B-D6104843A61A}' />
    </window>
    <window class='worksheet' name='activities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C47DEE94-88D5-4C69-B281-3AC50BE52E5D}' />
    </window>
    <window class='worksheet' name='poverty_reg' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (risk_poverty.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (road_accidents.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4802920F-4C69-4F69-8CA8-4B8D1DB3DCC3}' />
    </window>
    <window class='worksheet' name='povery_time' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4377CC87-B074-4F44-B17B-0C147A6CDC6D}' />
    </window>
    <window class='worksheet' name='poverty_age' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00419F74-AB8A-4105-A10B-E13FBEE2A2A6}' />
    </window>
    <window class='dashboard' name='poverty' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='poverty_age' />
        <viewpoint name='poverty_reg'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='povery_time'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{81FCBEEE-3CA7-42BD-9AC5-B38105195F63}' />
    </window>
    <window class='worksheet' name='income' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4841B069-481F-4F62-B292-C6C01A915389}' />
    </window>
    <window class='worksheet' name='income low' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BC69202-EA07-4058-95B8-BCEDCBBDBE5C}' />
    </window>
    <window class='worksheet' name='income top' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{023B726F-39B3-4B6A-8772-38B75F46E096}' />
    </window>
    <window class='worksheet' name='income_hist' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8A0AFD1-869C-475C-B7FE-C0F84F6C07F6}' />
    </window>
    <window class='dashboard' name='income_das' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='income'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='income low'>
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='income top' />
        <viewpoint name='income_hist'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (nama_10r_2hhinc.RData):qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{517E9779-C6B4-4958-8179-44A408FAF19A}' />
    </window>
    <window class='worksheet' name='satisfaction_levels' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A806F614-E9DE-430D-BE73-72EFD0AD8B95}' />
    </window>
    <window class='worksheet' name='satisfaction_rating' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2E72282-4F69-46BD-AA2D-4D13B8C4771F}' />
    </window>
    <window class='dashboard' name='satisfaction' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='satisfaction_levels'>
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='satisfaction_rating'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{52BF987B-6119-4FE7-81D0-828C5DD9FCC2}' />
    </window>
    <window class='worksheet' name='test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EC8B3AC-78A2-4E00-8A9D-2DBC078373BA}' />
    </window>
    <window class='worksheet' name='over_inmig' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C47BA93-75F8-4035-AE5B-2D3114C4AC11}' />
    </window>
    <window class='worksheet' name='over_educ' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9CCC51B-992E-4EEF-AEF0-3CE815AAF7D5}' />
    </window>
    <window class='worksheet' name='over_map' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08CD5DCA-7D99-457A-B3B8-523D2EB783AD}' />
    </window>
    <window class='dashboard' name='overqual' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='over_educ' />
        <viewpoint name='over_inmig' />
        <viewpoint name='over_map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6C6E8010-39DA-4C65-9C64-B09C2FA8630B}' />
    </window>
    <window class='worksheet' name='unempl_educ' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB21B5CC-977F-48FF-A1AC-2A081A2BBC6B}' />
    </window>
    <window class='worksheet' name='unempl_high' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{894D5006-FADC-418C-8162-4EE02B9356D2}' />
    </window>
    <window class='worksheet' name='unempl_hist' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F7EF14F-45F3-4EAA-BAF1-602306176289}' />
    </window>
    <window class='worksheet' name='unempl_reg' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Age class:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Time frequency (unemployment_rate.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (unemployment_rate.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41FD1EC9-FD23-461A-9494-2CAADBD24BD9}' />
    </window>
    <window class='dashboard' name='unemployment' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='unempl_educ'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='unempl_high' />
        <viewpoint name='unempl_hist'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='unempl_reg'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{6C92676D-868A-43AC-A69E-A6024945A1BC}' />
    </window>
    <window class='worksheet' name='work_health' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (work_health_problem.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (work_health_problem.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B57B3B4-4FBA-4205-BE76-34E4DC1B2A45}' />
    </window>
    <window class='worksheet' name='job_relations' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (good_rel_coleagues.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (good_rel_coleagues.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (good_rel_coleagues.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4AAA991-C8B7-4AF0-9326-062F194E1D79}' />
    </window>
    <window class='worksheet' name='underemployment' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E850836D-AC67-4352-BB61-A2FBEC87C5F2}' />
    </window>
    <window class='dashboard' maximized='true' name='job_quality' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='job_relations' />
        <viewpoint name='underemployment' />
        <viewpoint name='work_health' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{90049676-F601-4310-A861-3231C7128F46}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='activities' width='192'>
      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
      nN25VlY0/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='bad_habits_age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bad_habits_educ' width='192'>
      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
      rphi0/Gnjf8PFwTY/PjM3XYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='bad_habits_map' width='192'>
      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
      ssUYw9raGv4/Lkw0paQwMSwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='beds' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='city living cond' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='fruits_veg' width='192'>
      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
      4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='habits' width='192'>
      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
      zXYOrJrzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='health' width='192'>
      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
      /wGHSoyuw0XfswAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='health_2' width='192'>
      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
      2oCwSBdEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='health_income' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfx0lEQVR4nO2deVRUV77vP1BVUMUgIIKIoCAODI5BBYJDi5HEmGjURE1iNKPvdrpfVtLr
      vu7b9717X27f9H3rmdeJ6QydpjsmrcYJUeMQjUbQKAJqKWJEBWVQkFIEqhhrPu8PlGiMWCqc
      A6n9WYtVizqnzm/vVfU7e5/93b/fz0OSJAmBwE3xVLoBAoGSCAcQuDXCAQRujXAAgVsjHEDg
      1ggH6BXYKSwsUroRD47UxtGjPasfwgEUwlCcS7kRwExOTi4YC3kvI+cnzy3PXk+VJvLOF7vx
      2ZZK3vn3P5BbbAAgI6fShZYYWfFeBpgN5OnLAchavoLbPlmZw9I3/8An7/8X/9j9PcbCLP7b
      75fzwfJ3WL+/+LarFufmY/zxmx46nJX5HLtidaFd8qB6++2331a6Eb0ZS0MF69duoqSsgfAh
      PpwpaWaAfzMnSprRtlxg3aZt1Fh8GRZiZ+83h8g9eADP0BB2f/guOSW1hMeMwNncRESIJ3mn
      zSTH+5G5dh0XGjWMGNwfgHU79vPME7+g5dIp1mzchkkVTKRPE2vXbMTgCCAm2EreaTPOsu3s
      LYfExEQGhfixfdcuLhQVMTBuFG2Vx1iXtRtN6FD8W8tZs3ELZUZP4qODyM87jabxe/6yNgdN
      33Dsl4qpMNVQVGpi1LBIPABMFZRqxvLmyzPYs2kbiUP9aRiYzq8WP87Xa1YyLmUkO9auI6+4
      huHhat79r/cpqW0kJmEYhzau4cCJMqLi4hk2REdWVjFJD0Ur+r3dQIwAD8gXf1/D1AVLkc6f
      xGQ2cOKMAa6/2uxWkGDTF6swmQ0UlFh5bvZodn99ntTJCaQvXEZ8GOTn6Tuut+uzjzhnspP9
      2ccUtwC04MQbL2D/th0ExiYSG9GX9Z9+RI3ZQdaHn1Bz/bOpkyaRMHk2qfFhAAREjGL2aBXb
      Cs7w0YoM7I4mPv70c+wOG0iQvXIVF69/NjE1lVGJ6cxKjQdg1JTZqE4e5tJNfT19cBsf/+kT
      Bqc8etO7agKcThrtNmwS1Og38U1VXyYnjGbhshcIU9uxSWAszSbr8EXwDcfReL57voz7QK10
      A3o7NjzRajyxWG0AWMwWGmpNWAhlx6Y9pL3xFteqP0ACfHz9UWs0qACVWkVrays/FuIlDx1p
      c59n/MsLsXsBaHF6WABImf88V8rPseJvRxjp5ceshS8S/VwbHrdPWADw9fdHo9EgSRK64Cie
      f+UNFjY3sv/zv/DQS2/iqPgTHdZVKqwd7fHG388bjUrNza1LmDyLyPp9eAX4dLzXdPkUF71C
      sR3bQeOgNGb5XeOCJKFWWWltddB0YT9nfR7imTQHeyQJsOCJDz0FMQV6QGIHBbJl6zfUVDUw
      avaT2E5nUy31Y0RUFInxQezZd4KYuHiGxQxCrfYjMjwI1H6MHT+ao7u34B0xkn6+WiIiw0Ht
      x5TpEzi6ayuFF0zEjhyGt6cnV4qO4h07EWvlcQ6eKCd1xkzSp4wi+6utnDFYiY+Lbr/2gEDQ
      BjEoxK+jfeFBWtR+A5kSH8DWr3ZjUvVl0sRosr85RMTwkcQMj0KLmoiYUUi1Rymu92ZoZD9C
      BkWgBUJC1WQfOMew6AGg7cuMx6Zz8UQB/WNiKM7PobTGwUsvLyJ0wEBKDu6BkBiGxAxjbHww
      u7fsY8iUGTSfyKbZN4KYITH4GfKp8BvPmOhA5b60m/AQe4G6huLcfMJTk+mOr9Ved45V313h
      5blTuuHqMiK18Y9P1jLv9Vfw91C6Me0IBxC4NeIhWODWCAcQuDXCAQRuzc9yFchUns+7H3/J
      ybz9XFZHEucoZPk+E6nxYWS8t4KYlLHsX/8lH23+lsemPiyj3RFseO9T8o/nor8oMT5+UPfa
      9T3D8n0m+jcXkbljLzu27WbIhCkEeHWFVQdb/voue48UsSf7OGNTxrNqxQpiUpLRVuZ09Pv0
      jlW88pftPPdYVz3A391uTONe/tfKA1w8d5K+MYkEae98tZ/lCPB11rcs+s3veON3v6V4/6af
      OEPLY4uWMqiPU167zj4sfustXl36FIbSEtnsDp2YzmuvLGVYoJMWWxcZrT3O946xvPH66yye
      4MFO/dXbz7Fe5dBVPyYP7sJ1fxfsXr5UzePP/pJly5Zxt9XWn6UDGO1e9PUB8MLT3oa5p9j1
      VFFfmse7H21jyT8tls+u2cCav62kzmsQQdquWfRzNDWi7tcPgD4BgVy7Vn/bOYeyshj/xBNd
      Yu9e7PaNmUhFzme8/W9vU1Lv6PR6P0sHGB+tZm9BFU1VehwBI9D696X1YhkOaz2XWxz4K2XX
      Us2Hqwp483e/ITpI0+12z3x/mvCB/blcZ+PZZa8zKewqx8pbu8SmKjIBS1E2TVYrOQdPk/JQ
      DP3UbVTUmjvsWr3U6Ld+wemiUx0b9OSwqwqOZukry5gxXMP5q53f/n6eOoBk4cC2TZyrrMQY
      kMw/L03jwtE97D9Zw5Qn5jMisJnVq7bRBtA3hmVPT5fHrraWjI17AdANTOCFWandavfEtT7M
      m5lMzenD7M37Hv+IMcx9LKnL9r80VBSx5dsCKi9Ws/D13xLbp5msTduRQhKYNzO5w05ufh6p
      ySldZPXudo1lJ9iec4w+gx9i7iOJnd7lf54OIBC4yM9yCiQQuMpto+Hly5eVaIfLfFlUpohd
      m73zh6nuwmHv2pUqV5AcTiSnAnatdiSbXVabvW4K9PiX3ypit83cVeuH94ZVAbtOqx2nzD9E
      AGeLGWeLRVabYgokcGvu6gDrPvrf/NuKNXe9UF5+7m3v6ffl3B4XKhD0IDpfEZNM1ElRhFuq
      aZDAeLyQoMSxNOgLCUocSdG29ZQafXh4bH8yMjI4VWVmQWIgZc1e1DWp6OujQ4uN/VvWc75B
      zayFCxjgq5KpawLB3el0BGg5l4sjcjwToz3JO9dChb4QE7S/Np1lV34dDz88nkFxqYwancCy
      p6djqtCTefgyU5Pj0eflY8aOzSZhqdGz5pvvZeqWQOAanTpA3v6TtNbkob9qQb8/D7BgbrNw
      9VoDqCJ45dXHyM9cweFKMw6LFauz/Xl6fFISXjeuXHWM3MZBPDfr4dviXwUCpel0CuQ7Ziq/
      TXkYFVYOHtQzalASm9dtInpCCgGeTrLzcpEGTSMpSsuQ6Ums2rqfp8clEqdr336XmJKMduAY
      knzXcbQ2ktS4MFk6JRC4ilgGdRGxDCqDXbEMKhDIS6/LC2RW6E7c2timiF375TrZbUoWG5JV
      mZFHbiVYjAACt0Y4gMCt6dQBCrOW8/vlGXzy7n+w7mD5rQcrc1ieVXjbZ/bl7OvSBgoE3cld
      nwHSFy5jZONXZJY0Ym+8xPrM3YSOnkZ6aPtxe7OBzVk7kHT9mTr7SXx0WjCWo28IIjGoAX1D
      ELrLJym9VoVDOxBNfSXeQ1NJnzC0u/smENyVu06B9mzIYPPhy8QOCfrJjMSbP/ucuFmL6Vd/
      DoP5+p4gUwX6ClPH65ncfIanL6Dk+EHS5i3geM6Wbu6WQOAaLo0Aqf7HWf65nsGqmzISN7ZP
      f+wOT7TenlgstxY9sJjN1F65CgwBvPHRafDU+eLrrcPLq1dJD4KfMZ06QFhcKke+yeCC2pcl
      ry6gv3Mcm7as4URgDPPTokiN05EwYSabN/yDyvJmnveGlORUGJjAwP2bOe0TTWJUADqvZAKg
      Iy40JbmLYmEFggfkgZXgmrN57PzuFANHT2Vm8oiuatcdSftsV7fb+ClahA7Q7SihAzywEDYg
      NoVXY7su4l8gkJNepwQH+HVJXr97xulU5rnFMUT+DYQOiw2HRYG9QG0WJLO8BfSEECZwa4QD
      CNya+1eCb9SXdRERHyzoidyTElyuvzkmOKr9BMlCzleZXDJrSEx+FF9TId8WnCdhyizivC+L
      +GBBj+aelOBbYoKvHy/L/oLKvlN5YrgnueUm7FYbEha+WLVGxAcLejx3dYD0hct46ZkkDmfr
      uSUm+Dp2mw2dTovV2h7Js2lPLs8vfo4B/iI+WNDzuScluI/x9A8xwWhJTkkkZkwkJzduZauh
      lD5p6UxNS2LzrqOkTk4lYKBWxAcLejQPrATbGipYt3kvnsFDeWbONLy7uf7r3A3KbLduaJQ3
      VvUGDgVykrqTDvDAQpgmKIolr7zWFW0RCGSn1ynBY8IDFLF7xN5w95O6gTaz/CXVJYcTh03+
      kcfDW4OHSl5pSghhArdGOIDArenUAezGMv7vf77DX//6KUVVrhVXM5brKTa0FyYT8cGCnk6n
      zwDZ69Yx9bV/ITlMDRjJP3QWU30dU2aMZUfmNjSR45kzbQxHdq+lqNrOI3Of4vCaDI5KCbzw
      wpL2+GBa2b12A9X2PsxdNJ++ymzmFAh+kk5HAJNJRXDwDR8xsXllJrFTppKzajXDZj5PaPVu
      sstasNkkHMZSVmcdZ9KkRCbPXkJidGB7fLDdjk0CY2k2WYcvytAlgcB1OnWA8RND2b37FA5r
      E3UmC+Gx4xkc+KNbeMsZ9p/1YfH8NLwkCU+VipbWtg6lt/nsfs76PMT8tHFC/RX0ODp1gOi0
      l5jap4zP12yjzTOY5NQ4AGYueYHSXV9ydeBjpI0aS2pMIzmldqYkRhE5cQ7a0p0UXmwiJTkV
      v9gpxDTqKbVHkhilzBKmQHAnel126LcPHlPE7pGLSukA8iuytjYrtjZ5FVkAye4AmZVvsQwq
      cGt6nRKs1J247rIy4TyO+ib5jUpS+5/MOJrbcLaYZbUpRgCBWyMcQODWdDoFshvL+NOHawkM
      7UfKrCWMjvCRq10CgSy4rAS3VJ8ivySM5GjIO2HCy1LBpZpq1OETeGJ8X/JOXuVKXR1j+gf9
      ZC3hec/OI0gjV7cEAtdwWQn2DenH/u07uXxkLwZtMPp8PclPLabl8FecNxr4cs3XpEydcsda
      wmIHhKAn4roS3NaXif3bWFno4NHRQeCpwUvtpM0JGg8YMiqJ/r4qOqslLBD0NO5BCVYzYVwE
      HgFD8QGwXGX95/8g+vHnGRwQRsr1NCnjHk0id90mQq/XEi66qZawQNDTcF0JNhtYm5nPE88+
      RR816PPySUhJRu6f9eNf7pXZYjtCB+h+lNABet1WCOEAMuBGDtDrlODovsosxVrtTmXs+utk
      t2m3O3Ao0d+GZjzUzbKaFEKYwK0RDiBwa7o8Jvi9Fct/+MdYzj79j7NKCwQ9B9djgo3lZGS0
      P4DOWLCM5qJtFJSbmbPgGXSmErJ2fMew1CdwtNbx1Zcr8Y9PIy0atDodDRUn2fJtAWEJU3g8
      JVaWjgkEruB6THBgNC8veISGZg0hrfl8uKEAi+E4GRsPsfLzTJ5c8jLjooIAHekLFnMsOxNM
      FeSeMWCzW0GCTV+s6sgqLRD0BFxXguuvkPHXrSz95YvoPCT6j0jhl//jHV6fM+qWz6h8fNBp
      vFCrflhG27FpD2nPLyZ2gD+9as1V8LNH9fbbb799p4NB0WPRGfLZeeAUA0L8qTRc4VzRcfqN
      ncNQzrJtXz5+A0YwfUIUWzO3Yu0ziMgQfyIjBgEQGREJ2iCS44PYs+8EMXHxDIsZ9EBrr1+f
      v/QAn75/6lrkDxEEFFmOdDolJAWKAkpmq+zJcXudEParXbmK2D13Vd716RtY2+Sv16uUDuBo
      aMZpFDqAQCAbvU4JDtQpE1QQ199fEbtnrsi/FcLD6oGHh/zZofFSIXnJ+5MUI4DArREOIHBr
      Oh1vCrOWs+FCIEHWK0yct4xfxPfvEqPGwiw2Noxn2bTBXXI9geB+calO8LSB13jn3fX8YvgS
      tq3PxBw6mmfSh/Hdjjyqrl5m+JQ59DOdoajKQKuqL8GWGtpCxjAnJYIt67fQoA5j4YLHKTp6
      CJWpnj7XMySeyTtA4JjJDPARA5FAGVz75amDcTrryV//KQU1Zo5nfUhejYncY1dZsHgqBzYf
      oEKfT+jE2ZhO55Pw+CK+z/sa7DZsEtToN/HN9yb2bV6JV+wUwrRwbNvHFBiDxY9foCgu/fou
      n9qBV2gykqQiZdZC3lnxASODwMfHD42X5vowokKn88ZT44uvTo3GW0PVsR00Dkpj1sOxSJKE
      T3gsYwcHAjB26kwun9Ujf+ZLgeAHOlWCAfJydlPjiOTlRWkMjo3jbPZX5J8xMDw+Dp1aS8Sg
      EKD9NSg8Ej81hEdGoAYSHkqi5OAeCIlhSMwwQvzUHSqxV/Bwpg52UuXoR4if60ub2RXVD9Dd
      +8eiUEDMNQUUaKfDidMhvz7qNFtxmuUV/nqdEvw/9x9RxG6jAlmaQRkdwGa1Y7fKrwPYjc3Y
      jS2y2hQTcIFb0+uU4GBfZZTgZgUqpwMMCJA/nUy9yUx9mwL9ValQ+XjLalKMAAK3RjiAwK3p
      1AEKs5bz++UZZGRkdNT+vYE+L5+7ZnAxG8jJLX7AJgoE3YdrSvBgAImjezZyssrGI78YR0ZG
      Bgmnqljy2iyObsrkiiaSZ+ZM41juXppqarD0H8eciSFotSImWNBzuesUaM+G9hGgvL6aHXvO
      k5yaRHB4PImjRrNk2dMYdq2iadhMpodW80V2Gbm5BUya/RynC3aD2UCevkLEBAt6LK6PALYm
      XvzVAo5v+5zTk95E5bDQZnXeHuPr7YOftxq1RtXx1o5Ne0h74y2uVX8gYoIFPYpOHSAsLpUj
      32RQCkyaNZfKgsMYg8YyO74fHoHT2bpqKwteWULVpkz2aSJ5cc4QjvmmAJCanALaMFISAxji
      p2Xn5l2MSp0sezJdgaAzep0S/N7RE4rYraxvU8RuvQIxwfUmM/Um+es5OFvNSG0WWW2KZVCB
      W9PrlODSWnn3itzgSpMyaVGqL8u/bCDZbGBTQAl2SqCS954sRgCBWyMcQODWuKgEb8J4B1X3
      lmzQnVGZw/KswvtqpEDQXbiuA5gNaLU6yvWHKblWS41Rx6KF6e0n2Rpuif0tzLtJDZ4SR/6u
      zZwrKYaIp7q5OwLBveGaErx6J+brqm6FPhefhHTCr53g7I2yWT+K/b1ZDa47vpmjjpEsfnJS
      N3dFILh3XB8BjDemLyr8/XTYNT/sy++I/fW7xgVJukUNdtjteGm9sVrkXd8VCFzhrkpwwPUU
      JjdU3TC06LQQkJiCTgspyakMHDMU33U7qY0cRVyYlrDkH9Tg0Aljic7cyDfNAaTGhXV3fwSC
      e6LXKcG//PqQInaFDiADTvnLs4plUIFb0+uUYLsChRsAnAoNlD7+8sbIAtgsKmwKxEBLZovs
      BTLECCBwa4QDCNwal7JDRwf2ZcGypwmUq1UCgUzcgw5QzqGyZurrmpgQqeLrg0VEj3+Ehwe0
      sa/wEobqqzy64DkCW8531AyOtJeyu6CcaXMWMDREJ0N3BIJ7w3Ul2FTByszDTJmajMNmQ8LB
      ylWrMRvOUGIdyOzRGr4+VvlDzeBICx99uAGHxcAnGRvl6ItAcM+4PgJU5hA7PolAL09W7tjP
      S2++ScWfPgLA198fjeb2jG1+/Ufw4i9/TZupscsbLhB0BXfNDu0XMoigG4G82iAGhfgR7u/g
      m0MlDB8Zx/CoSNR+IYQHaVH7hTJjwuD2msEB8UyK1bB12z6sfgOIDgvqkgZvL7nYJde5V1oV
      SBYLYFHAbnt2aAWyYdsd7X8y0uuU4Nd2HFTEbm2zMkqwqVn+PVQ2i13oAAKBO9DrlGBfmevI
      3sCkViY7tKfMMbIAKo1KkfxNDqsNh8xKvxgBBG6NcACBW9PpfMJuLOODv2zELziIgKiHWJQ+
      Qa52CQSy0KkD7PtyLakv/QvJYddPszfeUie44FAZpvo6Rgz14WTpNYwOLYM19VzxHsrC9AR2
      r91Atb0PcxfN58yRH+KExwc10BKWQjTlnDAFM3FosBx9FQhuo9MpUGOTmuBgNfs2/Zl/fifj
      tjrBm1dmEjtlKsYzuaiHp+NTcpyQtHlcPZ6DyW7HJoGxNJuswxdviRMO6efN9p0HObL3W7TB
      feXqq0BwG506wEOJwezcfpxp8xYzQMdtdYLDY8czONALAB8fHZ6eOvx8vfH28qL57H7O+jzE
      /LRxSD+KE/YakET/tlMUOvoyOshDlo4KBD9Fpw4QM+NV0oIv8feVW0l5bCbJC17GcWIbqzbn
      YCeA5NQ4oD12OCoA4lKTCQASU5IJjp1CTKOeUnskiVEB7dmioeN1XAQEDJ3avb0TCO6CIkqw
      2VBMZn4tzz419Z6FiDf35HVLm+7G5Ub5syUD1DXJrwTbbQ7sNvm3YDia2nA0y5uFWxFVSRsW
      zwsiR5agB9DrlOC8wkuK2JUs8ufpB2TfHAYgOZxITvk3w0l2B9jltSuEMIFbIxxA4NYIJVjg
      1tyTEmws11PW7EVdk4qxoS18lVNE0mPPMLKfhcyNX6GNTmL2lJGczPmKoxcdzH9uDqd2rafc
      HMqCZ9LRiSV/QQ+jUwdobFIz5LoSvOuslv+eCpklg/mP11L54xtvMWBkAh9/+jmzB9RzzjmA
      us8+ZoDfbA5cDefNRSOpPrKeDQU1DHIcZGPEKJY+PECufgkELtGpAzyUGMz27cd5Y95iCt/f
      BMD4pCS8PEEXHMXzr7zBwuZGDq/9lLS5zzP+5YWYym9ap5ckRqTM4tePRdPYKm7/gp7HXYQw
      iaID28gvrWNkygzifa5yWZdAfJgWw7kCdn5XRPioScwYGcSWzTtp8wpn7jOPUfbd9SnQs09Q
      tGsTpXUw/an5RPd98CrBScuVyTAhlkFlsKvAMmiviwkWDtD9uJMDiGVQgVvT65TgCaMHKmJX
      qawQ1xTICiE5JSQFsnDbzDZsZnlHWjECCNwa4QACt+audYJzKgGM/Pu/u1gPWCDoRdzTM4DZ
      UEwZQxhCGWUMoa2sgGu1VRh1w1mYPo78XZsprpdInDiVUEdlRwbptGiuZ5Y24qd2kjZtKoV5
      +QxLTsZXyAMCBXEtO3TGKqpawWw4wxmDueNVn5tLQvoCrp04QNnxzeTb4njx4X58U2S4JYM0
      HZmlU7GUFFBYZyTv+Dnx4xcozl0dIH3hMpYtW0KET/v/ZouZ2qu17f+ofPDTadBo1Djsdry1
      WizX6wFv3LGf+YsXExXcHjN8I7N0+tPp7Hn/T4SnPtE9PRII7oFOHeBGrC9omTYtlYARk/A8
      /TXVXsOJC9OSmJKMlvYY4MgxjzOg9iAbdhfg4+vD/JmpbNuaQ/LkKRAQ1VEjWNU3AQceTBsj
      UqEIlKfrlODWGr5cvxO730Dmz5uJ3x2eLvT7NuMYNJmJw0Luy8yvd+c+QCPvH6EDdD9K6AC9
      biuEcIDux50coNcpwcfO1Spi12lqVsSu/Zr81XWcFiuSVf69T5LdgSRzYQ4hhAncGuEAArem
      UweozMkgo10K/kmylq/gzkdvuRIrlmfdW8sEAhlw6RmgODcfp78Fi/8YvC59R0G5mTkLnuk4
      XrB7LUXVdh6ZuwjKj1FyrZYao45FC9OpzN/FwXMlNBLRbZ0QCO4Xl6ZAZ3JzKJPCGKM9y37D
      AJbOHs+FCzXtB21XuGIfwstz4sjKOkyFPhefhHTCr53gbNlxNhx18NLiJ/Hrzl4IBPeJi6tA
      OsaMGYHaeoWWwj/zmTGK2Inp7Yecdk4e3E5rQxg2aSSgwt9Ph12jAb+B6K5uZdXGS7QQ2m2d
      EAjul16nAyR/sFURu2IZtPsRy6ACgcz0OiFMsQFLofKsnr4PnknjXvHwViMpkB5dstvbA+Nl
      pNc5AAo5gIeXRhG7nn46+Y06nKBEVgibHckmbz1mMQUSuDWdOoCxXI++3HjH44biXDo5LBD0
      eDp1AFOFHn2F6abY4FsxnMmlwtRdTRMIuh8XpkBGcg+eZs+GDIoNrezdmMFfP/gja74tbT9s
      v8Yf/vghEk38ecXf6VVrqgK3xwUHCCR1cgLpC5cRH9zM2XO14OGgoqyq/bC6H9MHS+TszyY0
      aRYizFfQm3DpITgsKoY9qz7kTE0zxuZWAoKCUN10/OHZ6Xy5+hgzk0X6c0HvokuU4G83vE+1
      z2SWPjm+K9rUKUnvb+52Gz+JQsuvUpsCkWhutAzaJTrAIwvf6orLCASy0+uEsFGDgxSx66nQ
      431Ti/x7ctqsdsxWee/EAOY2G2YRE9w5SjmAWiHJsKZRfgdoaLNibJPfrrHJgl3m5ANCCRa4
      NZ06gFB6BT93OneAOyq9Rla8l/ETb5ezT1/eNS0TCGTA5WeAqu8PsutwMVVGNc9ND6PolJ7V
      O3OxFOcy5ze/ZceHH/DUU6PRVwQxwvuHc//1t6/g3Z09EAgeAJcdoPLsWZodYKisoH/ifEaP
      quaFWalU9TlPdt4xWnTRBHncfm4bCAcQ9FhcSo++emcujSYTnjo/+ui8AF+8Ws+z+uvDRCQ/
      yvd/+38MS5ve8ZlbzxUIei69Lib4A32hInbFMmj3Y2yyYBLLoAKBfPQ6ISz0TnnXu5n6VvmV
      UQAfL/nvUU0WD+wKZIeWPMBTJe9+4l7oAMrE5ja0yR8kDuDrpbr7SV2MytMDhwIOAB54quR1
      eDEFErg1968EG8vJLTZ0Q5MEAvlwWQk2FOdSbDD/kBHaVEHumftxACM5+/T38TmBoOtx+RnA
      cCaXhqHhHDxdxIWM1SyZGsGlooN8en4jAVN/hVfxt0x/eSn7Vv6D6UufZM9nmdTUXiZhwW8o
      2/IevoOGcOx0Pf/nP+dxUl9B0ghv1uw6jKHKyKv/+lvChVomUIB7ewYIjGZywmgWLnuBMC1E
      jp7MPy2awaXqW8sW2eouc662EQ+HibIqI6iDmLVoKXFBHpivn3Ol8iz1zQ7aDJVcbeui3ggE
      94jLSvANomK8WPXhaq6Ybz0vWGXk85WrKaqow2lrprlVIigo4I7XtTSasHrqCOyjQOYzgeA6
      vU4J3ld9ThG752rNdz+pG7A55P96KhvauNgg/7DcarbTapFXb/n/U/mm0NCyZ60AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income low' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income top' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income_das' width='192'>
      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
      AVfgoxyk+hyLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='income_hist' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='job_quality' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='job_relations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYxkWXrXf/feuHFj3zNyq6zMrKqs6nLPPuPx2MxgYWOBkYAHBDwgGT+B
      kCUWCVm88WJ2A5KR5Ye2DBI2NvKAsS08Zsbg9vSsPdN7ddeelXvs+3rjLoeHyM6unqnqrsg8
      XfdG1v09VCqrIv7xxVfxxTnfOd/5jiKEEAQEPKOoXhsQEOAlcxsA/X7faxMCzgFzGwCO43ht
      QsA5YG4DICBABkEABDxj2Lz5xlsnv4U8tCQg4Ckg+M63voWDyrC+S81JciFl8P23QtjdUjAC
      BJx3FNYWs2DECEWyrC5kSOdydKqHuFoEZV73ATqdDul02mszAuacYAQIeKYJAiDgmWauA2A0
      6GM77qmfb46GdPuDM9lgWxMs22Fijhib1ultGY8RQtDrdhhPTqcjhKDf62I7LoN+D/eUs1vX
      sen2+jjWhHani3vKSfJo2GdkTpiMR5gT+3QiQjAc9BibFqNBn8FwfDodwJqMcVxBv98/8c3c
      rgK51pjtgxrhaIqtSxdPpbG3t0M6v0QqET+1Ha1qCTOcZFAvYaPz/PWrp1CxeXD3Lhe3ttjZ
      22fz0hUI6zOrCMek2ajT3d1FVXViqSwbFxZn1hn0Ohw82ENPJ9GNBMlUamYNgH63w0GlQVTX
      cLUwP3Jt61Q6vW6Hcn2fsGqzuLpBPBaZXUS43H31JdTlTyCGTRLZImtL+fkdAVzXIZUuoIrT
      7ggLImGdBzt7nGUVIJfLo6kKeiRGJKydUiXEQiGLUASq63BYqp5ORlFxhMqFlQL5hSVc2zyd
      DJBZWSMXj9I4eEDfPOUo67ro4TDhaBIjdLqPmgCE46AbYfRQiN39w1PptKsHNIcW9UaDhYVF
      bHs6ys7tCBAyYjCoU1haO7VGJBJheSWFcgY7ytUKbVNhKW0wUWOnE3EnlOtN0ugYkQjFpdm/
      tQGEPaHf7xNLphi0qyyvXz6Vztgc06q3WVpaIplfJmmc7sNrTkzSmTwRxrjhwqk0QGBOTDLp
      HGLcJZHPnUols3iRH09nGBGlvL/D2sbUN8EyaMAzzdxOgWQho6hOCCFFR1aBn590ZPnGdV1c
      9/QLHu/yg7acTIH6/f5cVVgOh0MpOu8OgIpylonQVEdRlJOfZ9F43O+n1TktH6Qzy2t82GOf
      VOtJHjfra83tFKh542tEbv22FC0hQMLnxfdaIElPTJNTv77PWbR8kwSXSiUWCnkECpZlU61V
      ubCyhOVASAXbBV2Fg1KFjfWL3O1G+PrbS16bHTDn+CYAXMfh1jtvoyiC3VKLtfWLHGzf4e3d
      JpfXCliOSjjkMnGmJtecDN8wP+Gx1QHzjm8CIJ5IEE8kUB0ToSfIZdOols76BYPichENaDer
      IAwAfsx4h58o/CtvjQ6Ye+Y2B2jtvkW8/Y4ULdd1UVU5C2J+1ZKV7L+nJVAUGbYJXCFQpWjN
      7jPfjACzokTSaIvPyxFzHDTttLu486HlChcFpHxohXARAinBKRAorouqynifAhx3Jp/5LAAc
      SqU6i4U05VaflWIBnAndsUs8or/vjY12Xqb70i97aGvAecB3AbC7vYcilqi1+0x6TWKxKLXO
      iEarzbX1ZQa2xqWLK7wyucYLzX/stcEBc47PAgBWljLslLoUUip7uzuEY0kKK5sUhEvl6ICD
      lsWliyssaw3+cvS7XpsbMOf4LAkW2LaL6zqoqsJ4NEY3DDRVYzweoakKLhrxWITG979M+Luy
      pkACzlQSNw9azwqz+cxnAfDkyCyGs22bUEjOYOhXrXfraGQkrq7rIoSQkqALIXDd2RLXD9Jy
      HGcmn/luCvSkOEevMfr670vREsLFkrQM51ut41MPioQRRaYWiOPyBTkj3aw+8zwAXvvetzHS
      S1zf2gDg4GCf1dUL04KOhwrMhoMhsXgMUFBVhQct+M7rsqYHkpYtfa0lcyrlVy2Y1WeeB4Bt
      WYSxebC9C7iAy9tvvIoditAt75LIL2OjkUkkcYY1dhsOP/vTP0HJyfPV0ee9Nj9gzvE8AKKx
      GOGQgTvpM1EjFNJJ2o0KrmJQXFknEouQLqziDHsMQjZrxvQb47PGbT6Z/48eWx8w7/guCRZC
      UKscEU8vEI+GH/u41oNXidVekfKafi1f8GspBEIcl0NL0hICxSOf+S4AnpROvUQydPo2JA/j
      2DaapNUWv2rJXAUSrouQpSVxFWhaCTFb+YiHUyDB/oN7GOlFirkna7sxGo2IRqMATLZfovWN
      f/lRGhjwDOBpAKh6nGHjiIo9YjCyCTPGxCDsjuiNLGKpLJo1IJzMM2zXcEJhMskUhXyO75rX
      eaH+z7wzP+Bc4GkSPB6PcGyX0t3bKEaKpWIeQwXUKIlEBBWH0tE+lt5hZWkBMWhTsxXy+RwL
      WpsvGW94aX7AOcDDAFDIpBOEY6usb1ykM7TIpBI/tCocj0bQo3EMPQQsnxzcvxI65EdSf/jU
      rQ44X8xvEtzpkEolpWj5NXGVnQQrIGW1RRyXQqhSEtdpEixHCxxnNp95vg9wWpzyDcyXvypF
      y69Ll35dBpWqxXQZ9Jk/EVYvH1BtD9nauor+BF8Ge80xr3+39tEbFnCu8U0A9MY2169dZW9v
      F1VVaTeruKEE6qSLrSdZyyWo1Kv0nChf+PR1Duwivzf8816bHTDn+CYA0rEwN2/fZjUX42gQ
      xnUdYtEY2cU8whqxe1hleaXIpNED4FPhe/yb7K95bHXAvOO7JLhZr5PJF5iYYyKRx/eBb917
      mejRS1JeUwhXUocD/2pNa45BTvWlzBLm41IIj3zmuwB4UjrNOqmopIMnjk1IO99aruuCgpRk
      0z3uCqH5rBRCMF0FmsVnvpgC2eaA7d0jLl66TOT4IoWHyx4exjRNDMPAvvcn9L/5S0/b1IBz
      hi8CwGw3cIwEnUqJbkSn1eyhqAqLmTiNgUNSd+makIrAbrnN5z71Mb5rXuc3akEpRMDZ8EUA
      oICu60wGHcaOTS4ZptyxaDYbbO83uHx5nYim0uoNyaUTAGTUAR8P3/fY8IB5xxcBEMkssh4y
      cM04rqoSUiCWcnEnQ4xUkVwmiQLE+x3G7tTka/oeH0//rreGB8w9QRKMfxPXIAmeUYs5TYJP
      g9vcxpS4DOpIXIbzo9ZHsQxqS1wGtT3yme8CoHK0R6M75urWFiHtPQf3+30SicTJ74e1Djdf
      uuGFiQHnCN8FQEjTcFzB7oM7tDojMjG4fdTnY1sXOdi5j6lE+OTz19ixl/jNwV/y2tyAOcd3
      AQDgOjaTiSCk66ApLBUyaJpGrrhyMoB/LPyAf575z57aGTD/+DYJHo6GxKKPv3i6efubxPaC
      cugnJSiHfjS+DYAPIzgQMxvBgZhH45spkOtYVGtNFopFNPXDv1ns218JSiECzoxvAmB35wFG
      NEmv22NkjsAaEUkt0G+USS8sUS2VKOTT9EzB2nKRVybX+K3GP/La7IA5xzcB4LjgmAMOaw2W
      L1/grZdvsbLSYeeox0KlztLzn+Te26+gxrKsLReJKCaLWtNrswPmHN8EwPraKtt7R1y8tEks
      EePq1kVC8TzXjArJ3BLNyiGXt7ZoD2wAntd3+HTmv3psdcC8M79JcNAacSaejdaIAmdGLd+M
      ALPi9kpYEpvjuhKXLv2o5ffmuF75zNsAcMbceOcehaUVNEWwUMg/9qGDfp9Y4r3GWZVKle0/
      /X9Px86Ac4vnI4DrOCgC2rVDDo/2SRgRIqkc/VaFd+4c8PzzG/SHDku5DOX9e+w0bH76i5/j
      nrXKC72/7rX5AXOOtwHgCrRwiOFwSCgUQlgTjFSBRnmfhXyaK5c3iSUzpFMKtjnBEirp+PSg
      /HP6Lv809Tuemh8w/8xtEty8+SLRe/IuyfNjJwepWs/EJXmzd5iY2wAIrkmdjeCa1EfjcQ7g
      YtvTn7P+R9t3v0ZP2kXZAc8qHgfAgHLJYWI2WFpZBmDYbWJpccLuCFMxEOMOscwS9qCDnkxh
      aCrRaJTXxxt8ufx3vDU/YO7xfBVof+ce01sxFGzXQg/phEIWg4lAMGAy6HBY65JOxkhYI6q2
      xtVL6ygIVOZy9hbgIzzOASwGA4HrmAy6DSZKlHxmeuzxre99AzJrrKQNwokMqUSMbu0QN1pk
      ZSFF4+XfIRxUgwackblNgtuVPZKiI0XLcVw0Tc5qi1+1XFegKPIOxAgB6hOUrX+41nS1S9bB
      n1l95vkU6LSIcQen/Y4ULdd1QeJWvB+15J8IEwgpS7QCV8jSmt1nngVAr90mlskw6vfRNA3b
      nhCNpd7XCeJhfrAUolHa480Xg42wgLPhWQAM+wMimQydZoPd/T0WikV6/QfEUzmKmQjmcMQb
      d/e5tl6kNbRZymWol3Y56Lj8uc99nFvWRV7o/m2vzA84J3g3BXJMbt/dJhFSKWQzhIwol4oF
      DnbK3K6XSCfiKIpAi8RZiqlY5oT+cIyYHgfgin7AP0j+L8/MDzgfzG0S3LzxNSK3fluK1nQr
      XoqUr7VAkp7guBxaghbe+mxuAyAohZiNoBTi0TyVKZA4PvTwoc4XAvcJl9fs7Rfpv/qrsgw8
      H19nH6h1/FPSCCBXyzufPZ0AcGzK9SaFTBpFhYkDmgLWeICjRbCHXWyhEI2G2d+vsHH5EsNO
      g1QmC2oI4VgMhybhEAwmgqWFHDeGS/zh7s88DfMDzjFPNQmuHx6ihBxGoQT93oBh7ZBIrkhC
      D2O7gvFIEI0n2H3ndfT8Mu1br6MsXMLulBHhRXTRxbZhaSGHKXTqrpwpUMCzy1MJAEVV6TWr
      JNM5Wq02hQsJMtEo41gIOxQjl4wjUEBYVEplipvX6NbLZDeuUy0dkSssk0jluf3qTZpukuvA
      Z8N3+PH8rzwN8wPOMXObBLeP7pOwylK0/Fq+IFNLuMc7wVLKFySXQrguqkc+m9tSCFwLMe7K
      0XIchIy2HD7WEu7xBRmySiGEQMgo0zheIJGiBeC4iHkJgF6rxu5hhfXLV0lGw9O/FAJzMsEw
      jEc+p9lsksvlaB3c4d7Xg5viA86GpwHQH47Jp6LsbG8jHItsJs3YHHNUqbO5uUFE17DGI0qt
      AatZg8OWRTZpkMvleNva5IX23/XS/IBzgOdTIDWSJiu61Os9eqMEW1e3GPR7DDp1dtpDlrJJ
      hsMBLdGn3rLJJVcA2AyV+LnEH3tsfcC84/skuF45pNG3uXZ5/X1/33zzjzDe/A0pryGQs6fj
      Zy0/46XPfB8AjyMohZiNoBTi0Xg+BTotzu43GcgaAYSQ1JfGv1ryxxN5el76zBcBcO/mW9ih
      OBeXF7Acl3Klxvr6KsORRdwIMTAtVOGi6xoOIVKJGDd7Gb5675Nemx4w5/giAN7tNHa4t42p
      xsC22NvZQUxcDsMqqlCJ6TrWuMtBw+Sn/vyP0XXj3Jysf4hyQMAH44sASCZTtEcuqUyOsQjj
      jrrEknEa7SFrSwuoioJj24wGCquR6Rz288ZNvrjwbz22PGDemdskuH1wi/jggRQtv15t6t9r
      UgHkzdu99JkvRoBToeooRkqOluugqJLKF3yqJYSLgiLxgozZmtA+VgqB4gop17cCM/vsqQSA
      44yoVIfEYhqZdAYAy7IwzTGxeJKHa6qE2aPjxshE3/8mhsMBhhE9KXTq7b9J6etBNWjA2Xgq
      AeC6Jvs7B2QW4nRqZUZuiHq1xMJCnvHEpZhLU2n2KaTChNwxbX2J7coOi8vL1BsNFvN57u8f
      sFYsMFEMrmys8sbkCi+0/v7TMD/gHPN0zgMoIS5trHBQrzEaNLDjiywXC4QTGZbjYY72Dmm0
      hhQLGyymknRrQ+rNBrHMIpsba3QaHRLxOBoO5VqDKxurrIWq/I3Yi0/D/IBzzNwmwc073yK2
      9zUpWq4QqLISOp9qSU2Cj9tCyNECJG6EzeqzuQ2ATrtNKhmXouU4jpxrOn2s5bouiiInCX7i
      JgdPiJc+83wVaNjr0OqPWV5aRFXANM3HngV4GPvOH9MPukMHnBHPA6Baq2GP+1TDUQbdFkLY
      LOUzHNR6ZBMRovE4CjDut+kMJ4QjCS6uLvL9yTV+s/5PvDY/YM7xPAAQAjWs8+DWTUJRnUgs
      SbXeRnFdRgOX3qCPbVnEYjFCqoriTm+Hjyomq6Gax8YHzDueB0A2k6LU6PPpz6yzf1hlcWmR
      1tF9bu73+Atf+BTmqEfXhIVcGoX3ejI9r+/w6cxveml6wDlgfpPgepmkbkvR8mviKjsJBkVS
      Jwd5SbDM8wAwh0nwaXG7R1jVl+VoCRdX1gUNPtUSYtoVQs49wUhduhRC4EpbBp3NZ54GQK28
      T6na4dLVayQi+gc+9gcvyChXqtx/8aWP3siAc42nATAejRCOTelgl1G/SzSWpN5uYxhhlrNJ
      vvXGPT713EVaA5vlfIby/l0e1G3+4pd+lPv2Ki/0/qqX5gecAzwNgEg8zVIkxnBkAqCFImyu
      X0SLhOiWaiwv5okkMqylFOyJhS1CZFPT/kHX9V1+Mf3fvDQ/4Bwwt0lw8+afEd3+AylawhVS
      Wgb6Wsuv5wHEcUm0rHxiRp/NbQAEXSFmI+gK8Wh8sQokhKDf62LEEoRDT+YI++5X6X0nOBIZ
      cDZ8EQDjdoWj1oSlPNTHE0LOmFA8y6BZxoga3N9tsbm5hK44mCLMSjHP6+NNfrfy816bHjDn
      +CIArPGEzEIR0T/C1hfptRuIdhfLMrHagtW1DUa9DgPH5LDWY6WYR0WgY3ltesCc44sASC6t
      0rx/n3C+yFIqRmNkoMWzDNsNEtkc/WabXHGBSb9DKJYF4BPh+3wu9+seWx4w78xtEtyu7JOk
      J0XLr+ULUkshJB6KF8eH4lVJh+KFK/Fsgeug+e1Q/EeBGLdwWjekaLmuCxLbcvhR66NYBhXS
      2qIIhKTl3ll95o8AEILt7fusX7qM9pBTx+MRhhFFUX64FKJe2uf1F7/sjb0B5wZfBIBjDRn2
      +pSrVaLhCJ1qmaNml7ghyC8s0Wh1yWRyUNrhoOXyxc9/gtvWRV7o/i2vTQ+Yc3wRAM1qFUtV
      aVSrWOaYWDyDa/aIFTdQhEtxdR2716Q/mqAcZyxb+gG/kPyf3hoeMPfMbRLcfPtPiNz671K0
      /NrSXKrW9CJazkNLc5lacxsAQSnEbASlEI/G+ymQEJgTk5AeRnvEf47ruiiq+kPfW/b2n9L/
      /n96OjYGnFs8D4DJoM0btx+wfnGDbDKCo6hguzQ6XYrZBLfeuc/Gc5uMRg5RzWHkaCwWsrw1
      XOYP9n/Wa/MD5hzPAyAUTbKUS9Jtljk8dNCcCWpYp9sf0GjlyWaS3HrnbRQ1RjoVnw5vhSyW
      0Gm7Sa/ND5hzPA8A4TqMTZuF1Q2Sg+nN7+lEhJ3DKvlMknZ3zOb6Op2hw2I+e3LR+WfCd/hC
      PpgCBZyNuU2C26VtElZVipZfyxdkagnXBT+2RhRi2s/TozaLno8Ap8Y2EYO6HC3XRUi7oMGf
      Wiffc5Ia2gohpxRCphYws89OAqBe2qfWHbO1tUVoVp8Lh0arR1hTiKfTqMBgOCAee3TzWnPQ
      4d7OAUtLi5RKFTauXP3ArhBC2FiWQjj8XmS3Du9x589+bUZDAwLez0kA9Hs9BDrlcomoDr3+
      EFVRaXW7LGTTHDW6LOazPNh+wMbmBrsHVdZXsrR7E55//grtTpe4rtFs1+l0TXL5DI3yIX1L
      w1BMTAyuXVqjP5yQSiQoZFP0ux3sicnQtOhU9rCUMINui2gkRrpQwO432K8NiMcVul2dH/3s
      cye3ybxtbfBC5+c8clvAeeEkABRFAQGDTpP9dpfiyhrFuEat02bQaWPa0G02MV1Bq9lg2O5g
      ra+wnIvgKBqjbp22CLO0kGVlIUJjMIbxiPFEI7mYIyJOXohmeZ/tgyaLuQQCB3NiMxmPUXQF
      c2IhnD61ZoNsXGd5fQtn1GY8GDAY9FGARCLBZqjEzye+4o3XAs4NT5QE26MOYy1NIvw0THoy
      mm9+BePGf5GidV629T9EjOPWcBK0jv+Q1BVCmhZBKcSp8Gv5QlAKMbvW/JVCnBJ75xsM3pRz
      JFLI+wLytxZIGwEEPn6fM2j5JgDalUMeVFpcvnwFVViMRyNS6TTdbo9kOkOv3SaRiDK2IJOK
      c7Of4//c+6zXZgfMOb4JgHfngeXDHbLZLHdvvkM6ncSJ5mD3gMTKBfbefI2hEueLn/80PTfK
      HXvNa6MD5hzfBEAkkeH5wjLjwYBEzKC5sEQmkySaXsAZZyhV6iytrjGwpnPYzxu3+GLh33ls
      dcC8M7dJcPvgNvHhrhQt13VQZ+gkMI9aQkwvyJBVCjHtDSpjl1rgSuwKMavPfDMCzIyqoegR
      OVqOi6JJKl/wqZYQ0xNh0hraCjmNe4UARUzPfEhhRp+dBECjcki1PTxlKYRLu9tHVxWiySQq
      MB6PiUQe/QGdjPrc39mnkM9RqVRYWr9CIRV7vLxwsG3Q9fciu7t/g8Ov/8qMhgYEvJ+TAOh1
      Ogh0atUqER36gyGg0Gp3KBayHNXaLC8ucLh/wMqFFUrlJkv5GK2exfXrl2g02+8rhUhnUyjW
      iP5ExVBMxsLg2uWLTCYOum6QSycJRZIs5CfEIgal/QdMhM6w1yIaS5LO57AHTfYrXeJxlXYn
      9L5SiDcnl3mh9fc8clvAeeGhUggVPRSi26qy1+2TK66wEteoa9Bp1LFEiOrBAZVmC01VKO3X
      SC98nGI6jKOoDLsNuugU8hkWczr1wQjF7DOeqESLOZIChGPRHYwIWV12Sy2uX8/TNgWLYY2j
      wQA9ksC0HOx2g1qzTioMxbWrOKM2kaHJcDhAURTisRgXQxX+ZuxPvfRdwDngJAl2HQfHddE0
      dZqUaBoqYDsOwuzRV5Jkohq2bR8/BlTt+KyuoiAcB/HQLYTvJkpCvLf7+O7803Xdh+q2p89x
      XQd3WhuLqmm4joOqqifPcY5/h6le4/U/wHhVVjXocZnAudaSjV/f52xac7sKFJRCzEZQCvFo
      5jYAmje+SuSd35Ki5evyBVlaxz+l1cJJ0oKgFOKEbvUINbeCbg1xFY1GrUKhuEw4pNLr9YlE
      wrioRCMGdzoxXrwZ7AQHnA1fBYAQLgLBvZtvUh2q5OIajuNg2qAhsEYt9psWP/OTX6Dupvm2
      +TGvTQ6Yc3wVAKGwzv0790hlcqymDSLqhHQuT7s3IGGEGemCC8Z0fPuC8Q5fKvwLjy0OmHfm
      Ngdo7d0g3rklRct1XYlb8f7Uknk/AMddIaTs3srUYnaf+WoEmAXFSKLlt+SIzXiryDxqueJ4
      FUjGrS7CRcjS4ngVSMr7FDCjli8CwBz22DmssXV582Qf4V0GgwHxeBzLsgjp+snKw3Dn+7Rf
      +vdP39iAc4UvAuDwqMKlzU0qBw/o2SHUSZ9kboF6tYZQbNBi5JMxNNWhZ6pc3ljl1clVXmj+
      Q69ND5hzfBEAuio4KleY9AfEs2m+/9pdLm2ZaNE8sYiCrqqMx2N67QoHTYvLG6usaHX+SvTb
      XpseMOf4IgkWrkN/OEJFgKajuBahcJTJeIQRjaEqx7t8toWDSixi0HjlfxB++T9IMsCvu1eS
      d8JkVlX4thJiNp/5IgBOQ1AKMRtBKcSj8cUU6DQ4h68y+rPfk6LlChdLyukm/2rJvSbVn1ow
      u888CwAhXO7efAclkuLyxoWThkbvdh6G6bfV9Licclyhqp6catpuq3z7dR916gqYS7wbAWwT
      PZlm0OrxxivfpNrXWMlFMEIGLXOIIcCIJbl15y5Xr17BHI9JpTJoIZXN9XXKTo4/GX/OM/MD
      zgeeBYASiqBOhijhMAvpFRJ5nVwmSRgohjV016HW6HLl0jrZwiKJ8HS/oGNFAficcYvP5IN9
      gICzMVdJcL/XJZpIoikKrQevEa+/JkXXr+ULUrUkHooXHF+QIWknWJ7W9CKQWXw2VwHwMO3a
      EUnNlKLl11td5N8Qg5RWJkK40z5msm6IcV1UKe9T4DqzaXm8CiQo7e8SimeJGjqJ+A93hjBH
      I0LRKMpxu4t3v78mD75B86V//XTNDTh3eB4A5UqVi5fSVGpVygcj4skksVQOezSgXGuSS8YQ
      0SiMJ+i6oD9R2Vxb5mXzOi80ftFb8wPmHs/3AZZXViiXS0RCDiM3hjMYUT68QWEhz/7929ib
      V7C7Q7KGTqvR5KAxZnNtmaLW4icjcnKAgGcXjwNAwQgbbF66QkhVGPa7RBJp3NVVjLBGNJ4m
      mUqhIHBRcCZ5Vjen87vLoSOuJ//IW/MD5p65TYKDUojZCEohHo3nU6DT4pTfYvSdP5aiJaSW
      HPhTy783ZByfCPPIZ74JgNLufSrtPpev/gjJqM7B4SEXVld/6HHVapVischuY8Jr32t5YGnA
      ecI3AWBNJggF9u7fYTyZoEfjOP03eH27ybWLeQaWSiLs0jNVisUih84Cvz/8ktdmB8w5vgmA
      ZHaB1a0CzdI+pUaPdDKBaqusr+rkFhcpAq1WlVjIAOBT4bv8cvZXvTU6YO6Z2yS4df97xErf
      lKLl2/IFn3aFkKolsRQCZvfZ3AZAp1kjachxmuPYaJqcwdCvWuK4K4SsUoiHmx6fUe34Qyur
      fOT9PlNCYRQj+djH+2YK9IOMzTER470LNsajIeFI7OR+APve/2XwzV/yyLqAeSF0+aeI/rXH
      X6Ti2xFgb+8++zuHbF1/jnZ3RFS1iWUXCKuQTKX43y+9ya9/5S2vzQzwPQrKB4wuvh0BVM1g
      de0C416b7Tv7XH1ug1GvQW2i8VwqRVbt8ZnwXa/NDPA5amIBbfmTj/133wbAQmGBQbeFEjL4
      +Ccz5HNJ2vUKC4UCANf0fT6e/rLHVgb4nekU6Bce++8nU6B+v4/jOE/NsLMy6HWIhf232uJX
      Lb+uAsFH6zNFDYEefezjT0aARCIhxYCniaxaIL8eYpGpJbsWSJaW7FqgWbV8OwV6msj69vGz
      lqxva9la4K3P5L2yB0zMMY57tkUs4TqMRqOz6wiBZVkoTO9IPsvi2ntaguFwiN6uFk8AAAIw
      SURBVO24Z7EMa2JiOy62NZGiZdkO1sTENCdn0Jr+/1m2g2NbWPbZpt9Tu2xsa8J4/ORHZed2
      BHCtMbd3d4gkc2xtnv6qpG7ziP3ahK2tTbQz3HxuT0bcvrfHSiHBUbVJ4cJllrLxU2k51pib
      tx9wbS3P7aMOVy9tEjrtjfFCUCmXaPcHYDuEogme27p0Si2oVco0uiNUZ0RhZYNF4/S9mZr1
      Cke1DlFdwdUMnn/u6qm1Wo0qe+UWCQNS+RVWIsYTPW9uRwDXdcjkl1CFfSadUCiCPW7Q6p7t
      gL1uxMhmpvccr19YZjKxTm9TOEo+lwI9gjbp02j3zmCZgqYqXFxbJZ4uop9xqq2qChfXLxIx
      IpTKlTNphTSNsBEmEk8TCZ/NsKmWQdQwOCqVn/x5Z3pVDwkZMdx+jfzChTPpaLpBJJomm3qy
      b4zHYQ67NOoNVi6scVSts3n5yqm1rHGfRr2BGtIxIjHymcdv5X8owqXb62MSxlBG6NmF02sh
      6PV6DG0VwwgTzWbPoAWj0YhkKktUMXH03Nm1kikMxaQYzTzx83y7E/xhyDwRFvDsMrdToIAA
      GQQBEPBMEwRAwDNFvXLI2HpvKXhuk+CAgCfB7FbYrw2YTGz2H9wnkYmTrI/JpXSGo14wAgSc
      b8LxLN/42lcYdo94+42XqfShWT7glddvcOOtN4JVoIDzjsA0J+ghjdHYRA8bqLiYloMRDgVT
      oIDzjoJhTPd44vH3Pu4hffrz/wNyuP32t+xmMgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='139' name='over_educ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='over_inmig' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='over_map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='overqual' width='192'>
      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
      jkO5UkFO7lwH7Zomo6PbU50T+0gfj3aAiKdOkKph2zbtdptSqUQymWRpaYl6vU65XCamqkx0
      GjvWNLiNGsVCYdvrKU3DNnburBEQ7QART5WgcW0+nwfu5Se5rsvRo0fD15rNJvbiEkJ2uzvT
      p9vYeZDNSgUlvfdorWgHiHiiBEbsbgQLvjfVIUjcC/5zXRdN09gQd1ZppGSKpeXlba+X7ybQ
      7Ybv+5EARDxZDMO4b2R5MEVjJ4ERRZGCurMAyIkkf371Jv/pb/4W3/e5+NlnrK6uklUUFv7h
      15QWFgja9/m+T2Nzk9aNm+Sr9UgFiniy3C+jVBAEEokEzWYzdFEOljdC11Ok75EDpOTy3Chv
      8fX16ywuLrKyvMyZ06d5W5b5m1/9EseyGcpkOF4sMnniFCPFYjcjNkqFOBw8zlSIg0a9Xg8n
      t/RWfsE9Yfi7Ty9RGx7f4yzgGh1ekVze+d73gHsJf7VaDcdxyGQyWJbF2toaqqYxMzUV7QAR
      j58HLagJJjjuZC8EHiJLksN/76Ym1S9+zKn/9k/Dfwefn8vl2Nza4q9/8xsaIiRyeSSzw4e3
      b0UCEPH4Cbo07HckbDKZ7BtkFxCPx0kkEvz07/+eNgriLkEygNrnn/KTt95kdLS/UmxtfZ0L
      ly/T1ttoJ0/QGy0QD9uY1IiDTafTCTtLJJN7ux8HGVR9kslkWJSTHx1nydl58Xc218k2a/wv
      //JPyKTT22ZJ67pO0+jQLJfRfL+vea5v25EXKOLRsG07XPitVgtd1x94Gr0gCORyuXCQX+/i
      B5jMptn6/GJf06sArTjK/Mw0mXR3loIxEPj6ZnGRkfwQf/Yn/w3e9Zu0ymWcu1VxXiYTCUDE
      oxEM5whqdmVZfuCnP3TtgKGhIYrF4rZyzPm5OQo7BLoA7GaDQrLbueLSN9f47fsf9P3++PQ0
      544eRZYkjs3OUqp3WLy1QqtSRZSlSAAiHo2gYCVoWOW6LtVqlXK5TKvVeuDz9SbDWZZFp9NB
      kiTOT+3sAZI0DUWW8X2fX399ndMnT4S/W11f529vLfF31291VSNZJlEcJTkxxVa9w82rNyMB
      iHg0JEnqm0cWpDYELRcfBsdxurp7sxme9/yJ47jt7QLlNptsbGwCMCPBzPS90VPXVtaQc0Po
      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
      4/z/K+653tefskkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='physicians' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19WXMk2XXed3PPrKwqrN1odKPXGZIzJIeLJYqUuEhhi7RkWwpbdlh6kOwX
      h8N/wA8Oh3+Bn/0iR9hhRyhkPViLZcuSZQ5pitLMiNSQM8PZZ3q6exqNtfbcNz8UzsXNRFah
      0F1AFdD5RSC6UajKzMo8596zfOccNhgMMkVRcJ7h+z7iOEaWZad6njiOcd7vFUGSJCiKAlmW
      IcsyGGOzvqSZQFEUBbquz/o6Towsy5AkCeI4hizLSJLkTB6iJEmnfo7TBGMMWZYhTVNEUQRd
      16Fp2lOrAOf2aTLG+OpV4XiIilur1SBJEhhj/Odpxbnez+nhVUowHnSf0jSFJEkIggC2bSPL
      MqiqOuvLmynOtQIkSXLqdv9FgK7rMAwDvu+DMQZFUaAoylO98hPOtQKQCSTLMnzff6qVQZIk
      pGla+rcoivi9MQzj3Psx08S5VgBgGJkJggCWZcFxnFlfzsygKArCMOS/p2nKTZ8oihBFEQAg
      CALoug7TNCtFwIETnGXZuV09JUmCpmkIgmDWlzJTRFEETdMAAI1GA5Ik8WgPPd80TRHHMfcF
      KgCK67rwPA9ZlkHTtHO3MtDD1TQNcRzP+nJmBhJwwzCOxPWLi9t5er6nDSlJEr5KBEGAbrc7
      62s6EWRZhqIoSNP0XOYzHheMsSMRHE3TYBgGAKBer3NBJ2UwTROmaV6YZN40cOROZFkGz/Ng
      muYsruexQCvcKCfwIiLLMjDGoOs6wjCELMuIogie5/FFYWFhAa7rwvd92LYNXdef+rh/EaVL
      ged50HX9XG2VlNYnZ++ig8KYjDHYto00TTEYDLhiRFEExhhqtRps25715c4tlFHOr+u65+bG
      kSB4nsdXt/Pq1E8Kxhh3aH3fhyzL0HWdU0SAoWNMQQKiQFSrfx4SOU+qqkLXdW4fxnHMb+S8
      gxRA13U0m81zZb49LqIoyj0fIrcZhsGFPUkS9Pt9tNttxHFcCX8JFFVVUavVuEOVJAlkWeYk
      s/OALMsQRRHCMEQYhk+NkydJEnd6SejJbKXnZ5omPM+b5WXONRTLsqCqKqIoQr/fBzC8mY1G
      Y8aXNjlIAWRZRhAECIKAk70uMtI05WYfBQBqtRpXBjKBms3muVnMzhrcy3UcJ2c393o99Ho9
      DAaDuY+uSJIEy7L4Cnhaib159CvIhAWGIeEsy7gZBAxNJcdx5v4ZzgpSEASI45gnwMRVM45j
      hGE495EVYoSSYwicjrDO844iyzIMw+Ah0eXlZdTrdWiahkajMdfXPktIvu8jDEO4rjvyJlGi
      bJ5B10iK8DQlxYCh7+Y4DuI4Rrfb5Yuapmno9XqVAoyApCgKZwsWhZwxBtM0wRiD7/tzvY2K
      YUEygy4i130SBz/LMvT7fbiuC8Mw0Gw2KwUYAYmEvkwByJEivtA8h0XTNOXJoSzLeBTkou0E
      iqLAsqyxAk0LVqfTwe7u7lPNkToOUpIkXLDLlIDix6Zp8trbeQTVuBK3SZIkqKo61V1rHsxA
      MllHKTbF/lVVBYW4yTmucBQ8CkTJJJFCSyCaLdmSRJybJ2Ugqi/BMAzEcQxN02Db9lRYrvNi
      RiRJwhW8eE1RFOUiYlEUPfVU8XGQxBvIGIMkSUeiQVEUIY5j6LrOCVdhGKLb7R4Jn84Kqqrm
      rpsxxqnBrusiSRKuyOcdjDG4rgtZllGr1XiBi+u6CIKAUx7IFNQ0be4jebOCIpo9o3jjZEaI
      cXa6oZRlrNVqZ3XNpZAkCUtLSzyTTYoQxzEMw0CSJFMVAsdxwBiDZVmlf6fKKxFUsfWkikjP
      w3Vdnvk2DANLS0twXffIDk679UVZAKYJHlKgVWMUXTZN01J7el66MtB1k9K6rgtFUZBlGf93
      WiZMmqZwHAemaWJzcxOapnH/ic4vSRJc1+URNl3X4bou6vU6BoMBDMMYqTyTnJ+UmagQsizD
      sixomoZWq5VTAKJInzXEssx5hQIcrihlTMpxF09hRkVRMBgM5oo9SiYRrXqKonDzTqydPQnE
      HYTi7oZhIAgCzkWq1+v8vrTbbUiShIWFBd6RIQxDdDodLC4uPhZniYiLtVqN+zyGYfBzUkKs
      mNc5a35UlmXwfX/uiYlsa2sroxtFNjQpwHHaS6sPxd+bzSbSNJ35jiBePyEMQ0iSxKMoj4Mw
      DLlCTbKqifdy3HWeBJTko8hOmqb8+1C83/M8HrAQG4idVUaYmKjngZSoFM2eSYUfOKTkki08
      GAygaRpc14VlWTNRhCzL0O12eYkkCYyqqjx6Mq6FyEnOM433PM556cd13dx5SOjEnj/UB+is
      WkeK5zwPkADkbtZJQA6nZVlwXZc/lCiK0O124fv+9K94AsiyzJmStBqKfPh5zmgfB0VRoKoq
      Dz5QKJTi/cChP0AQO0RUyIP1+/0MQE5YT+q4EJ06d2DGUK/Xz3QloLAfhQnFhlCSJPGC8CAI
      HssMEk2gWUDXdb6z0fekThAk5OSE070gSgglB+fZIZ0F2M7OTlav13msn7bKk9yooq1rGAY3
      P8gcOov6YkrQUYmgaZo8Mwo8eTuQWStAERR6liQJjuNw846y9hWOh0Ix/Xq9jjRN0Wq1TnwQ
      Ufh1XedxZ2pZmKbpmRXYUMv0OI4RRRGazSYsy4LneReiIRRFeRRF4QlJApk4RJUQ/Tv6vUIe
      iizLR4TiSWLmxEdXVZU7aWeZhSw6uYPBALVaDaZpcqXQNO1cFPqUIUkSfl/HgegPpmmWUiYq
      DCHZto1arcaFfnFxkXcXEFf2SausyByih0R291kJG5HhgEM7uNPpIAgCXuschuFc0DceF2Ik
      aBwoQ1yZQ6OhAIdJHeomRjesSJGYxHwgM0Ok7J5lR2LqjkCt00VODPU6CsOQZykvIqhrHNVy
      VBgNBcgXwadpyh09sQim6OiK1IkiyPkFwIlYFIs/TVA+QtM0eJ7HiWHU85RsYcrKXlTouv7Y
      NIunDZwKEQQBTNPkrUXq9Tp0XedJpbLtdpSvQAknoiTTMc+qOwG1BpQkiWdNxSJxTdO4Yp9H
      P2AUKEcw7/SDeYKSJAnCMOQ8Hk3T+EpNafRR9uY4s0Y0O86aKUoFPGXXxBjjCiDSCM47RLOn
      wuRQwjDM2YqUUOl0OjzpQoUVJ1ktKbw6b3YojVS9aEmhWq02VzmK8wLFNM3S8joyYSh+3G63
      j/gBokIU/QGKVc9ayOgaabeiSNCsr2saoO9Ur9erSM9jQgGGdrHooDLG0Gw2QX8jWisVlUxS
      Cun7PleCWTVlJd684zjcCX+S6M9ph06JWn3ceagcsgpxPjkUAGNvoiRJSJKE2/FlmeJRAuX7
      Pnzfh6qqnA5xVopAlFzi6lPrRJEvc1Kc9rWTg16s4SWulRjXv2gm3KygEGVBFArqK0N/E3nk
      jUbjCKdeXOGLlVEAuLOpadqZKwH9ULXYPCfAiM5MdBIxkjUvJuVFg0IhQwJNiKFkkWge0dZb
      r9exv79/xO4fFS1KkoQ7n2JE6LQfZhiG3OGl70lcoXldQdM0zWXPq5m+p4vSEUlFrolY3yrL
      MpaWlo70mjmujFJssiV2Mj4tG5bCsMRDIuWkZllhGM6dUFHYmYS+wunjyF0uI64Rt1+sKqrV
      auj3+0eKaY4zMch0kmUZjuPAsqxTediU3xD751BNLgn/PDFDacBdJfhniyN3WyyoIFCJm/hw
      SKiKlf8UKj1udaVIkud5p1I+SddBNQIiNbj4+qSgHjungUr4Z4Mjd7woiEQlKIK262JY8aTF
      NCJhbZomCSmYKPCiUpNfMA9mEA34q3D2KN0BFhYWeCRnlLP4JOFEEYwNG7lSqHVafWSKClXc
      0aZ1nmlgnq7laUPpnnvcVpxlGQaDATchKFz3OLwaitGbpplrp/GkAlHW6p3+nadQKGOMt5ep
      cPY4sdFJQkqzqUgBTNPMFaGP+uwowaZKJ2pr/qQRIirqIacXOFRsKhafVYZaBFXPVZgNTmTD
      UGsNKjKn18ghbjabsG37yA4iMkpHEepoFBOFL5+0pYpYCEO/FztIz3onoAL2CrPDiRQgTVOe
      DxBBDieFHMWHSj6EWJQ9TvBo1Z8GhZp4NcUmv/MCmtB5WqDcy0nb2Kdpina7fWGo4uMwsQlE
      DWFpZRbj6MU63GKLbiqPVFUVg8Fg5DmowdM0zBMy1cTrLO5AZ2H+UGWWWF2naVpuKPlpgkxL
      KnedBHTvHMfhv1+0STuEiZ8A0RmAfBSFBNVxnFyxubjaO46DRqMBTdOwsLCATqeTs8cJ1FB1
      Wk12iw+cQrdnCaKW0PVQvfRpJ+Fo7jMFF3q9HqdNU9sYTdPQ7/f5s5BlmbePoZ9ut4t6vT4X
      /tJpYOKnoCjKSLOEIjnA0ZCeZVl8FaTVeGlpCYyxnPATphURYYzBtu1c/H8WNj8pHA2xsG37
      1IWfTJ80TTEYDDiNXdx9acGigSdEgBT7vYodPmbtL50WJn4SVHBOKwqQb8pK7ynG2MXuDPQe
      8TP0WrF290lB0SkCmT9krp3mA6Xvr2kaX2npO54F/YK+J31/egZUD1E0cQBwJSh+D+BwF7uI
      SlBKhhuV+KKtXLwxxwks9eGkFt30eephT6Dp5tMUEDI3yP4WFfc0TCHadagIqIxWctogHyxJ
      Ej5HgIqa6HV6juJKXzRpxXwJKUsQBFhcXLxQptARBfA8D67r8goqxhg3cYorPbUcAcZ3f6Mt
      WRQ6avBKoc/ToCeTopEfQiAbeNT5RiXLjlMaMZEnKvJZCgzt1GR20s5HP6MiQmV0luI9uPA7
      ADEogeHKPWq6YLHYpdFocJtyFGhmlmgKWZaFOI75oL3TEBQyPci5A/LTYqYBKloRe3LOC8gH
      Kt4DQtFkHXfttIvO0/d7UuRmhHW7XQB5Rug4racVlsKX4zLBFI6jHAEJoKZpR1bMaYLMKtrJ
      aNea5mqmqirPhs8DyAxK05QXIhVB9/skPCQaO3VRkKZpXgFEFIVfvFHF1yl8WVbPKiIIAsRx
      zIVFHCh32iBFINoxDQifxmpGdcc0omgeQIsK+Vqiv0XBhuMSg3TPqDLtonWbkyTpUAHK7D5x
      +gtxa4pdC3q9Hj/YJLRmEjyqfT0rpGkKy7K4KXAaSjcv5kExAmYYBi8PnSQbLx6H/DPbti8c
      ZykIgrwCNBoNTh6jARNUQggMhVfXdTiOwwllhDLb8jicpcDQ9xDnBU8jEkRktnmtMQaG10gh
      WXLUgeNHY5HvoKrqhWuxniQJBoNB3gkmchYlo4pfmASmXq+j2+2O5ZgcJ9xnOW2FwpNU6D+N
      IXkEIthRrH/eMI6EWMzJiA6xoihnkrSbBYjOnyRJPhEmevnjHqYkSbx4hX4Xf+gk4xJONFf3
      LEJrYs0C+SjTjADRmNh5RJqm6PV6vOt32a5XrJij53sRhR8AHwcGFMKgsizz1eA480BVVTSb
      Td7poVghpigKb1M+CvS5sygIKYtzT+u4VBo6j5BlmXf5I8fXcZzS52Lb9txEsqYNMVBDs/BU
      VR0qAP2RsrWu68K27bFCQg+esqrFUBs/wUF1l1hDQJ+nv58VKEo1zd6gYlRrXiF+V1rdSRDI
      H6LmWxcR1AsqDEOeC7Es6zAMSjeo1+theXkZ9Xp9ogMzxnhUBzgaHqWpM+RQi6vOLKYZ0vQY
      ygdMSwnOW49OStxdVIpzEdTgTYxgEjOAL79iJ+iTgHrti2QpOgZVj1mWxcckkQYSKe0sBYcI
      apQketLIDfkVVTuT+QRRcGh0rvg6cGAK+76fPelKQBNmiIIrliHST7PZ5L05iYtzVuxIEXRT
      ut3uiRUgiqJclCTLMtTr9QsXH78oCMMQ3W6X+6di0RZZADnpG0d9GFfPS6sgFbyQQonRhX6/
      z23vWQoMnf+kcW2xmxyZdM1msxL+OQQlbD3P47tzkZLPWQjih3zfR6vVQqvV4nFSUYhF4loR
      1K8eGNbzkmAUKbX0O2UnZxE9ISWYtC6AEoMiiY7moFU4HpR8O4tnnWXDTiBE/xZ3bRJ8MVTP
      TaBRU+LFtDqtgtQhepIZYRRzJbOIPjtrEFGsWONQBPUXLdr5jDEsLCzMZfJr3kCrcVnHkGmC
      mjYU/dEy+gctfjkqxKiDUsKKbOY4jjEYDMZmCkVTg04uOiLkhM4KtBooilLKlgTAe/SPSx5V
      CnA8iCpy2gEPovGUCT+hmOjNqeMoYRAfNB08DEP0+/2Juw0wxng5JTmis6QPiBGhYvQKGH6/
      cT07q8jP5KCF87SftRiSB4CdnR3OWBCrAEkZu93uoQ/AGOPV/5PSEygLfBLQTSD7bJagegYg
      HwAolnCO+mzlA8wXKDJHUFUVnU4HrVYLSZKg3W7DcRw8evQI7XZ7OHZKPIBY0DJKCYo7weNo
      tahsswTtAkT5BvJmz7jvWEV/Toaz2OmLiVjbtnkNQxRFWF1dRZIknOXQ7/fzBTHjvHRR8MXt
      jEwIYnaqqnqEFzTqePNgP5NpRqSxYrmkmNMgiBTxCvMB2sHJ3yCTh0wiqmcRn+PCwsIhF2iS
      qenFUkn6PQxDzrI0DIMPwzsvoJ1AHOsqDgcvJszmlfh2kVCUsUlAUcci8XEcJZxzgaiFSJkS
      iL01i1VjxYuOoog30KKTngeeDLFbRRqHeNPE1WNeBmtcVFAiqzi9dJLPif+KGJnEpf+McurK
      wkjjTi6+X2ynWPb+7e3tEzduPS0Qu5XMH0VRUK/X0Wg0jrx3Go17K4wG5Y1OsnCKDIMytsEo
      Rcq9elyveuotQ8Iu9psp22aoz38ZaIL7PK+kYgZRjBLNi9JeVIiDDU8CGsiuqirP1IvPsPRc
      xRdGlSmKKz8JetlP0f4adSyaLjOuW/Q8QFEUNJtN3uH6tKZaVjgEBRlOqgBU8FNsuDzS/leU
      o42xim1NJr0IUhCxNfooUMpaUZRcne48gqggRICb5x2rAnLWCO3co+z/NE3zZDixVlJ8nVB8
      +EWSETBZfJwc4zAMS5VuHjEvYdsK4zGK1lIE9UziCkDksCKKpk/xbyJFWFEUvrqPApk/1HKD
      BmbPOilWYXYg4uSTygAlWMlcLQvgiIX/uq4PFSDLhp2fKRNcpEOU9YQssuzo/RQiHNUmkUhx
      ZP9T492TUioqXBxQReGTghZiCuWLcimaRbVabZgEE30AYtGNS/8X/1b2fl3XebcHTdPQaDS4
      LRYEAVzX5c7yysoKHMeBLMvwff/c1dZWeHwUF0fqMfukEBufFRWAhF9s+MAVwLZtdDqdiTg+
      o1Z2ALmoThiGcBwHpmkiCIJSU4e6RtCuUSnAxYTIAM6y4cgmKriiIenT4FfR/DWR5UvCb1lW
      rp8VcBAGJSoAbQuPg1E7huu66HQ66Pf7uQoz8XNUWH8enOEKJwc1RxAHc1CvUmqfM622MowN
      W3zW6/VcCaRlWaXU/Zy0Ex1A3AnoAMBkDVXL6NQUhiqevBiiojlWRS2tcP5BvXiKDi/J3DTD
      4ERzp6AMUdvLZEopfpCG4YmmzDjBL/oDx9Goi68xNuwfRBlj6tx80VpxP60gE4dW5DiOeUdx
      YGiyiK3qsyzjZvGToIwOIV7T1vY2oig6mglmjJ2I6lukQ0wKUhYx40e7wbhBGxXOFxhjnDpC
      UyhFuK6L/f193oyh2+2eOtv2pTfexH945Q04QVg+J5h2guOSCiepHivLDoucomK4SpxyWOF8
      Q1VV3qK96OcVGcanNYUmTVN8vLmJzf02Xny4B2ZaRyvCCI+b9aTPjUs9i+8liPZZlmW8vqBS
      gIsBEmgKdYqU+yK9/rTmEHzvR6/je6/+GHqthp7joamreP4XvjT5pPgiRq3+J90RgiDIFcsD
      hytGhYsBEmga0SpWaolhdypKmjbSNMXf/OCv0XVDyK6HdPkSQm+A3b09KK7rchpDEXRxVCYo
      2m9lkaGT2O0izTiKotz5q4qriwvaDcqm1JzWQA7P87BrLSG9tIDUGEaiupaHf/+dH0CiGl4R
      FJ4U2XRl2jkNgpiiKPA8j/sbdD5qY17h4oAijGULnGVZp8YIjqIYKWOAYQEYWh6LwQC/srEE
      RWxeBRyOjxFrK2me0jTNEjJ5xFitWHBCmbxGozG3VOkKJ4Pv+9z0LQZZfN/nwxinvRPUahbq
      /X3s+AEySYKk6fjEoglVlo42x6ULKYNYJ0s/TwpSAiBPr6ZdYN4LZipMDvLtqNxUFHIyiVzX
      PbY5w0kRBAEcawHK+g2oV66j1tqCpOvDUb30JsrQiUmKon1fzA6ftGB5lGKJ/dvF+gJSBJGl
      WuF8gWj2ZFJTlpYWUjGBSoVR06bE2LaNf/7lF6B0dpFlGRYbdfyVA/zpO/eGUSCioxbJasUQ
      VZZlPEtLwy4mqY8lkhsxQmlcKZlUhmHwSFARYRgiiiLeZ5S43hXmG2RK0y7eaDR4RtgwDHQ6
      Ha4UNGONFIGoEtN8zpqmIQ18IAzQkIE1OHhvexOs0+lk1P9GTEYBRxWAQI2Hin+TZZk7yiS4
      dDyaQUaDqlVV5SFQ3/dRq9XG0ihodaAmVmQnVsown6AhJPv7+9B1nVNbNE1Ds9nkQQ7qwjEY
      DHIm9cLCwlRzAmma4rU33sBHe22ooYfbN2/h0fY22NbWVlbW9Glc/x/aysTp8fTlLMviBS9U
      F+C6Lp8HJh6T2o8EQcCVSjzHOEXUdR2NRqPKF8wpkiTBzs4O2u02lpaWOOuTMcaFmzAYDI6Y
      x7RYTpMYGQQBH9bYaDSGQxqLQ6NFG3yco0vd38QieOqrQ7W+AHgIlU/kOPhX0zRomsY7sRFV
      mjAuv0AD3qrVf75AbfNpoSO7fnt7G4qiYGlpic+Ko/crisL5+6I5nSQJKEc1Laq0OKSj2+0O
      HXLDMPjEPBJ+Gvs5GAz4Kg8MzRrLsiDLMgaDwREhJUeW+BzkvBbbY6uqilqthiiKeDFEcYxq
      EVTDGQQB/yGHqlKE+QAJPEVxFEXB6uoqt+uDIMDq6irftSn6R1Ppu90uPxYpSRRFU3vGtAOJ
      pr5SrPMl2mqSJHyVpi+laRo3b4qrMh2HPH6xyRbZ/IQoijgzsMgELYNt29A0jZdTEmjyCJlC
      lSLMFqM6CxLNgRbPUe8pkysq1X3cZ0umlSzLuQhnEARDE4jMFjJ3aAuj7clxnFyH5DK/oFgg
      T06rGOXp9/uwbZv/nRzkSXIJYRgeEX7gUNmiKMoN56swGxQHVBRRfH40hwEAH6BYJl++709U
      H7K3v4933nkHj7pdPGi5eGbjKr783B1en05yST9hGA59AApD0Zeg8JTIyx/nFBOKJlGappzq
      IHaOO2llGZlW4goj/v2ktQgVTgeapmFpaYnP6SqCnpm46/d6Pb6IiVQb8X2TDFJptdp4tLWF
      u34Ip7mMu+89xI/aEZoqw3PP3OYTjYhZQL6IBODItiQ6wsXfj9uKRMGkmk+qzvE8jw/aEzO+
      o7K9JynMr8yf+cGoRFaROyZ2fy6bLy1+rtPpjC2WebC9g7987z7UKETrow+xfucmbq8aWFtZ
      4rK7uLiYk5skSYYKUEZBFcNPx5U7Hvc38vTJFhRB7VCKX0xUEnHFEM9FMWSx6qjCbEF8nzIU
      F1BiGYvPuWyRpQL6KIpGdht/1OnjQd+HbWiIXQep08PV2MNCswkg3y5FhEIXUvSO6aSEScyf
      SVblIAh4KpzOTaZSGcqy0WXHrRRgtqB8kDiiVISiKDk7nkxksVMIPetxu3mZox2GIX7wkzfR
      eriJV8IriJuXUFcYfMvikUbDMHjLdbGNp0J8/LKQ5qT2evFGEETfAgCnQHS7XZ7JFc2lUdEl
      8ebQOch8olWkmtk1exCjQIRhGKjVarmVnWgS4m5BlsE44VdVtbR7+f966Qfw128iartouTEa
      VxroDHr4qaXhwBcaik7D2ekcYRiCOY6TUVxdhBiWKnOER7U6IZDXTVuWeAxysEmARR+keL7i
      DRFXiziOYRgG6vU6zz1UvsBsQFYD+Xm04pclLEkBJEmC7/u8l3+ZnNFnFUUppca//Mor+P3v
      vwTjygY0VQaTJCh72/iVr38Vy8vLuHfvHq9BIIsmTVM0Gg3s7e1B6ff7I6vBRq3+xOUubl10
      wZIk5VLforLQe8WRlpPQLwjkUNN0e13X4fs+fN/nbRgrnD3Iv6Ms8LjxRpRvyrKMr8oAeLSQ
      UCZT4py6N999D3/1+utQ3AEyp4dIUWBfXsNumABsyEgg3hHltDRNQxzHCMMQtVoNCoWgJgFd
      sCRJpdMT6YKTJOECKtJgi8cqO/44SJKEer3OV5Usy9DpdBBFUa4TWIXZgFgEJwGR4ChbLB4L
      OFyIKXGVZRneu3sXr99/iEeQ0K8vQ1YtGLUaIs9FHPhY0FQ0G3XIspwbcUWsYspvGYaRH5Mq
      nrgMpNVEcitzWOg4Ze0vjkMx9FX8W6PRyA22pu2WSHWVApwfUPib5ETM5JOcEb+M7HdJkvDb
      f/YiBo0luDv7kJEiDgI4fQe7O/tQZQnLaYos8HmEMEkSOI4DTdO4n0hJ3jRNjyoACXWZMJUV
      K4jvL67g4jGLKDv+OAGu1Wq5TG+appzDVI0tOl+gxUscrWvbNoDD4SllchgEAXwmgUkSajfv
      IOy0YCcRGleu4uMPP4JmmgjqK5BWruH9e/dx7fIl6AeVXyITmUKqlmUNo0DiSj5OCEW7f9x7
      ixlbei9diMgMpXCYSJ2g89DvZPOL2yLZi8W/VZhv0LMDwGnS4mByMflaRH8wQNxtw+u0AcOC
      eWkNUa8Lb/MBDF0F0w00Ewetd9+BeuVr3Aclp5zMLEmSUKvVhmO6yjzucRc/LkpTDHuKoGiN
      +AUp3KooCo8GTSLIReZpr9eDpmm5vu8V5hO0ENL/J6nniKIIr779Dl7b2oHcaODy6mWEzgD+
      7iY0JiHMEiADmNNG8/YL8BPAOZgzDAwjklEUcVOZuG+GYQx3AOD48CNhVFKKbKyiJ0/Hq9Vq
      pV+WqNXkoNTr9WPteXGWGSVeLMvKNVkV7cgK84Vxz6TX6+H3vvt9vHD9Kr70uajKbXQAABcn
      SURBVBeQZRl+78X/h1atDmVxBcnH98EkCXq9Ab0+dHAzAMbaOrofvof9ux8iDiJ8tLuPT9+5
      ncsZkelDlYuMsfLOcKN2hFGRG4rJUzJL/JxhGLwgpjgfgCjTjUYDjuMgCAK0223Ytj2S/Sdu
      oeI1dbtd7uSQOdVsNquKsXMG27ZhNhv4y+0W3vjz7+CyXcODzUcwNlQouoGg34O7twtreQVg
      DL3Nh8gOLAem6TDWr0H1A+y6A9x/8GA4K8C2uWzQFCKi6OdMoOMwylwiO16EJEloNps8HErj
      kcQ6YSprpB7xoo1WhjKKhnhNYjhXtCsrzDcozEmRno2ahR2NoQugCyC7dAVpksBvt9BTanBi
      Bdk770OKQ9Q0GY3bzw4PxBgYk6CYJjLDwP94632E3TbWr17DN569icsrKzkZ4ztAWchRRDGr
      Sxddq9Vy5Y/i52nogeM4fABf8fhBEHDTh14fR2mgMrlJOErUf7JShPlEmqZ49c23sdVq4X63
      j57j4lsvPA93MMDDR48QN1agmBbSOIaxuARv6yFUxqDKEqAbwOVryJIEcPYPGQtxjCxNwQ6E
      21q7gojJSCQFi41GzmSnriSlCiBOfBftcTEDDIzu409M0m63W5pko8/oun5qHB6xs1yF+UKW
      Zfj44UP84YvfgfmJT0NdXoO8DPzpdgeMScjsFQzuvg9rcQlZEiPyfMiGgfrNW2A729h9eBfy
      2gbS7YeQG0NTmTGGxsYNdO/fQ+36DQAMie9Dbizgtq3kwuSi833EByjG7sm2pw8WTY6iAtDs
      306nwz8rMj5pTA61OJk0fp9lGfcTxkG8PmqhUvkB8wXGGNavXMGdK2vY0g5zO7J+SMtX603U
      1tYhHTy7oNMGkyTU166gtrKK/Y/uQrI0gElwNh8iiSNYly7DWl5G/6O70BoNhAMHMGt49spV
      fl4CWQXHSp8o4Mc5xWTC9Ho9EMtUVdUcCcl1Xdi2feLWikmSII5jzgYUU+fkYFOyg8KqVMdc
      ZYnnD4qi4Ftf/yoebD7CWw8e4kGYQFlaQRqGiPtd6KbBhT/2PWTR4cInKQoW1tfh9vowVy4h
      iSJIioLOB++CMcC8dAUZgLjdhqIPgzBkjSwuLvKxTIqigG1ubmZlwlEkw4nRnTLBpeRCGIbY
      29uDLMuIooiPvyweS5IkrK6uTmyfjyLnidQLCnURQY7ari8uLlYKMMeI4xjf+4vv48HuLh6k
      Eho3boEJctH98D0s3n4mt5MHvS7CMIa+sHhIyEwSdD++B/v6reFxH3yE6806Pn/jGlRV5Qvv
      f/zfL+KabeCvHrTyXSHGRYOKrE8RxASMogi9Xo+3RDFNE71eDysrK0eOX8brHnfe43ITRNMg
      UhzlByoHeP6hKAq++nM/iyRJ8F9//w/gJQmYJMFvtxA5DpI4RhL4yLTDjD8zTASth1Dqgo+X
      ZZDU4RziJPDxwvplfOHZO7lzhWEIN2P47mYPwcI6pGInXjHbWxS6YgMtKqgngfd9n098bDab
      nB5bBIW9yCQq21Eo3t/v9ycK0zI2HLBA5g614KhoEucDxNK8snYFjOz+Xhe1qxswr1yD02pD
      Yoybwn67BW9/H0FrbyjwSYI0SZAe+KXXQveI8APDPMC/+IUv45c2FrDibg0HZJBjOamgibW4
      BDGWW4Yyopzv+5xdSuQoUkiaSTDJdTHGchElaqJFncgqnA8oioJvfe3ncClwELsuD2tqNRuq
      Xcf+u29j8PBj9O7dRQwJS5/5PFJJRthpQZFl9D++jzSOEO9uo6Eq2Nnb58d+/8MPkWUZfvyT
      t9But/F2qwvLUIdF8aqqwvd93sVBxCiTp8jXBoZ2+KgMrmjG0GcpMUZOCXWnzrJhP1GaKVXW
      YuM4kKJWq//5gqoo+MXPPg/t/gcwlld5TD9KEkgbd4DL18AubyAJAoAxpEmC/vY29u9+CHnl
      Mlh9Af3dHbwaAK/de4A0TbG1vYM/vruNH7z+Bn7YdfG79/fhNFcg1ezDKJDYOCiKIt4SsWgG
      iVVdIijqIyoGkK/pLUOv14NlWTlKbBRFCMMQpmlyJl+FpweLi4tQAChWjb+WeB6YMewgnqUJ
      N5OSMIB561lIBzIiGSaU5iIA4CcfbuLd7/01Bt0ulCs38O0PPoSyfh2SYSKLY/jv/Hi4A4it
      KYifQ5QDsrmCA3adWJImKsH29jaWlpb43wi1Wg17e3tHvqRpmpwnRK20aVhyp9OBoigwDAPL
      y8tVx7enDIwxPHPnDvydRwAAd28XXhDB3x7+nobh0DzKMhjLl+De+wBZcrRCkZkW+oMBWK0B
      SVUBVYNkmENZVxRolp3PA4jOL+0IjA0L2KMo4qYIxeDpva1Wi4caizuDLMuQZRmu62JpaQm6
      rnNutu/7XAFER5hoq6c1NLnC/KOTAp1WG67jATUb2qU1BJsPkIYB4Lmw1q8CWQZZ09DYuAFn
      +xHM9Y2hDCcJ3Pt3kUgytMvXIGk6EncwNJkCD9H+HuR6A+zytUMFEE0V0Yyhjr2qqvJkE2OM
      R1viOMbly5d5E106loilpSXexJYxxvu0i/4GRZRM04Su65X9/hQjyzIM+j1YzzyXN6klhnB/
      D/BdtN/pIklTSLoJWWLQ167Sh+FuP4KvGEg9F+aBaSRbNrI4hvv+2/BvPIfM6UEJu8PeoHSC
      3PbBhu3oqBd/kQVKv9PkFlH4RQeUTJnV1VVendPpdPh5TNPk1fqV0FcgpGDI0hSgWQKDHlTL
      htpcROz0Iesm3N1tyKuXke5vA1mKqN+Dt7ONePUaZEVF9ug+wCRkaQr3wV2gs49AUsG2PwZb
      WEZs1Q/JcKLQqqqK/f19bqOLZg111wKQc5aJc0MCTDF52ilohxG5PLIsw7btiqtTIYcsy7Cf
      gGeDU99D0mlBv3ZzKJ/2MPnFkghpFAGmje7dDxDHw8WYHRyD1erwH95H4g7w7OVV/Mvf+sd4
      8GgLv/Ptv8CD9j4UXYeiadpwXORBbJ9IZ/V6nbeuEyEKs1i8TJNgdF2HYRi8HrO4q4jDEaoR
      RxcbQRDgtZ+8iWdu3+I9OoHjS2/7/QEcNpQL78FH0G0b1tUbXCHIzk/CCLIkQa43EfV7kBsr
      gHLILpbsJlTfwa3r1/DrP/+zUFUVt69v4N/81j/Ff/vuS/h2J4HieR4fYEcXR7Z4WddmsvsV
      Rcnx7aks8biJ31QYTzNjK1w8ZFmGXq+H3/mzF/FDtoDGa/8Xy5YGSdXQj2KsN2p4ZrGOJU1B
      ywvhhRFuLjcQQcInr1/FS2+8CVjD+m7ZNCGbNR72DDstRIM+Ys+FceMOtDjCndTDe0mMvtND
      Zi8AsgykCT4lR/iNX/tlmGZ+wowkSXh+fRUvth6CffDBBxnF32mIcdlsXtEHEOnRotm0uLhY
      RW0q4I//8q/xxx/uIDZtgDEgiaG2twC7jiyOwZIYcB34boB4eR1GfwdJCsSrG1A724g9H5ea
      OuzbzyJs7cJcXoWkDrlj7sf3Ia9cgqTpWI89/KMvfgZLiwu829v3XnsTP7z/CEuajH/2rV84
      kpil6ZSyLOPf/sG3h04wtSgXJ3yIIdEiqMhFpDpXs7oqEKQkQsLYUPgBQJKQhgFkdQXMtMEO
      CGtWHCF6/02ozzyH8O3Xke1tIs6AcGUDm76D2qs/gmbXkIQRUteBWq9DUlWEnRb01TV8ZqWJ
      5aVh0ovmSP/dr/w0vvkzaWnH8TAM8Ud/+mf41s9/A+++/z6+tmJCaTQaCMNwJDe/uAOIUx9F
      57lSgAqEn/rUs3jxjf+Jtjm0LJAkYKoGGIerMWMMUDWoz31++HtjEczzAVkFSxNo/R141z4B
      L8vQBdBo1LBgKgg+eg9ZrY40CHAvaOIrJecvK4MNwxD/+Tt/gW5tEQPXxfOf+hQ+/RyDIk6H
      H7XiE5+fkmJk/zN2OEwvDMOKeVkBALC4sACFAdnmR2BrG0CaIgs8ZGkCSS5vxMw0HSwa+pZs
      +y7ShZVhsOXgPSwKIa8uQf7M3+Kfc2Jn4mtKswxunIAph0P7DsL0+QsqRm7EjC2AXGiTzCSa
      vuF5Xm4ObIWnE4wxxNYCkjAD23yATJYRW8vQPr4L6cazpZ+R165CYQxw+/CSGHFzmR9L8h3Y
      DS3HNJDcAT5zZ33ia9JUFQtpjH7oY2Vp6bDOfRIKNE2NpGwvZW2BoUJQ1VfVgaECMJSXVdvE
      TqgNozIAkKZIQwdZmiIp5IxYEiNr7yGrNxHtbCFevgpIhxFCKQ6g2UOeGeIYN1iIf/jVL2Bp
      cXHia5IkCd/8qS/grbv3ctFHXhE2ThGoD38cxzBNk1MaiLNToYIIxhhuNi385EEPkj9AliRQ
      Yg/azWeRAdxqYIwhdQeQtx/g2mc/C29/D4EGdNwOelqdkyDVLIHOgM+bGT558wpu37xxooU2
      yzJ88MEHcDOG//76XVy/tIpn79wGgHwmuAxiL89arcbtfzKFKlQoQ7/bgeIPgMZwlZbcLpgs
      IzuYBSDLMqJBH1lnH7AXkUQhzNVLsNeuQProLnrpwTyK9iZ0RLitZvh7X/nSY11Lmqb4T995
      BY/MZaTNy/g/b93lClCqRmLVF3A4RpV6d1qWNXFNb4WnD0mS4INQQrZyBZlmINN0SL02lgY7
      sDvb0JwupMCD9vCDIY9/eQ3Ozi6PLnpRBl2WwOIIhqnj0sYN/PIXX3js65FlGd/8wqeRSsMF
      u2keVgnmFKCsikpMiFURngqTwHVddAQGDcuAtWtrWH/mDm4//wlcSh1cMRlufvkruHX9Cppb
      78OqHxa/rN+6joXNt1B3dmFdXsOvPncTzWa+wVmn28Vb77yLXr+P3/2DP0Sxtr2IpmkA2cEw
      eCHkr1DZIfF6qHU1jZKv1Q4vrJrEeHbY2d3F8tLSuaSL/OSjjxFAQhZHMAf7sBIfTaFAvblx
      HYOBCzAGtd7ApRc+n/t8GkfQbz4DaWEFt+HjM8/czv290+3iv7z4PURmDb/ebOCf/IO/f6xP
      EKeHGrloHlovCgDU63V4nncYGjooRgHAY/ujRlRWOB2ohemZIoiLNY/wfB+/+9KPcL2uIUoy
      NO5cR7i/C1WgJOiNJtzdHcQDHWo9v7IzxiBrOqRgqCAN7XDRpRGnC80mfuNrX8GDnV2sX748
      kWWyubsPMIb1ZID1hcv8dYk4+qZpct6E67q8cisMQ05yq3B2WBwR4ovjGN1uF57nYWtn94yv
      6ni02h0MHjyA325j8eYtqKYFtbmI4KCwCqD68RiKXS89hqSqUCUgHXTx1iDCe/ceAABeee11
      dHo9AMDq8jK++NynJjbLv/DMTXxrRcW/+7Vv4ouffo6/rhC1gS6MmKD0fxpBWpk/s0e708H3
      X3oZCoBvfOPrSNPk2M+cNdYureIbn30WP3q4CxLNuNtG4+awWxuyDN2HD5FoBrxHH0PSdKRx
      PCTJyTKsK1fh7Wxhv92H3byEJhLUraFZ/rlPfRLqY+58Gxsb+I2NjSOvl7ZGVBSFN5bt9/tY
      XV2tFGCOMO8BiTRN8dt//l24ByFQb3cbwc4WGutXEXoeAijQVi4hS2KkUTRsissY/M0H6HsB
      XK0GpBnWtQz/+ld+kfulp4FSz4GopYqiYGFhYW7tzacVReFPkgR/8uf/Fz/4m1dndEWjkWUZ
      vP4A2p3n4SkmYnsR2solAACTFciGyVmjxvoGNAnIzDqy+gI2VJyq8ANjukNTYUzVWXn+Icsy
      funv/O1ZX0YObruNvb02ojiGZgxXeEk/vktf/dp11LY28auffw7X1p6f6jUVSZ+MjZgRBhz2
      aqy4PecHDzc3sX7lyswXLM/3cfPSKm6pGtwoxmcuLaDlhXip7SDVR6/oWZYCaYrf/PrP4NbG
      tYnORfXoIpshSRJuwYgt9Wm6UJqmME0TpmmC3b9/Pyt2fAAO+2tSZ+cKFZ4EWZbhj77/Mt5I
      hhZF4nu4Kme41bQRZxk0SYKhqbANHc8/c+eIEpOg079JksD3/WFT3IPXxbkQRW7b7u4unw0A
      HNYMKFS8XgQ5whUqTAOMMXz5k3fw9ss/RpoBv/nCJ3Dt6vpE/iXNhvN9f+SMCGrWRiS74rD2
      LMtyeaw0TYedS8r6/YiUiHmPOFQ4P7i8uop/9Y2fwd2P7uH6xrWx5jUJbRRFvInyuGlFxRqW
      oqJQN0L6OzBUgpFs0LKWKBUqPDGyDFevrCGOY4jWB9WZDN8y7B81GAyOCHOZEoj/lk02os8V
      laLX643uDWrbNi8bq1BhGiDnNE1TdLtdPkMaGIbebdvGYDCAYRjc3BklzGVyWRR28T2jat6V
      Mq2hAvdK+CtMEzRnmuTK9/1cS81utwvf99Fut3PjbceZO0WIfaqAwx1DDOfTa6qqQqEid4r7
      U+KrEv4K0wTVlgOFFuYF213X9dxYrOOEXzR/xEVbFPbt7W0sLy/nfA4amqfQiCTbtmHbdkV5
      qDB1ULvN4qosmiqi4JY1Si5aKmXCXrZo93o9rK6uolar5WZem6Z5mAhbX1/PDb+oUGFaiOMY
      juOUdhosCrPoBJfJ4qhVfhxo/Ba13CcFIF9DoY4OFSoQaEabWAx1UiRJgn6/zwWuTPjLzBcS
      fjEqRO8p+/9xME0T29vbfFCL+B09z4NUFblUEPHy37yK1996+4mSoGmaYjAY8ClCozqOiEIP
      HJpGhmHAcZwj73vcwMzq6mpuJkXuGnzfz6oZXBUIJLBPYg73+33u8BbDmJRbKpoy4u9ZlmFv
      b487rtMIyHS7XTDGctElYAwbtMLTiScNf6dpylf+sr+Jxxdb7jiOA8dxeBvOaU8MajabcF0X
      /X4f9fqwEm1vb69SgArThed53O4XUQxris2Vd3Z2oCgKVldXTzUQY1kWWq0WgKHw1+v1SgEq
      TBeU3CpGeIpOLP0Qc5NG7J42eG/RA7ZzpQAVpo4y7o5ozhQV4ix9UFmWOYUaGFESWaHC4+K4
      qCIJf5qm2NnZged5aArzw04buq5ja2uLdzmpdoAKU0NZyJMoNuKq77ouPM/jo3PPEnEcY3Fx
      sVKACtMFcfd9389ldhlj6PV6iKKIx/yTJMHly5ePP6gAyiSX7TAnaRRWr9ext7dXKUCFk6PT
      7eLDj+7hi5872qg2TVM4jpMTfM/z4DgOGo3GE5k5RGgzDAO6rnNlYowhCALUajWeOaaBj+Mg
      RpoqH6ACAODh1jbeeOdd/nsQBEec2Zdf/RGeuX37yGejKEK/38+Nze31ekjTFKurq0/s5Pb7
      fQRBgCAI4DgOXNfF/v4+HMeBaZoIggD7+/voHXSNOw5iQq7aASoAAC4tL6Fm6Oj1eviTl3+I
      FUvH17/000PGpKLg44cP0XE9NOr5FTYMQ165Jdr5cRxPzbltNBpoNBpI0xRBEMDzPFy9ejVX
      sruwsHCiHAKfi11RISoAQKfTgWVZ+HjzEYIkwa1rV/FH338FG4sNfOULn8OHd+/i5o3hZJYk
      SRAEwdjpovv7+1heXj7jbzEZBoMBNE0bVjxWClABALZ2drC6vJxjTIZhWMqi3NnZ4ckukcwG
      HPL2O50O1tbWzvQ7TIpWq8V3jMoEqgAAWLt06chroyIuk9Dn0zTF3t4elpaW5rLOhK5JAg5D
      WJNMjKzw9II49JNA13UsLS2h1WrlqM3zAMaG866BAwVgjPEWFeP42xWeXoRhiE6nU0p0GwVJ
      knhnwb29vZH+wlmi3+9DlmW+ix0xgapi+ApFFGt6CTs7OyPNIdF8qtVqME0TrVYLpmk+UaXZ
      k8KyLLTbbf575QRXOBYU6iyi3W6PnGQzCo7jwPO8mfoGg8EAkiTBsqzDRFgURQiCYCYXVGG+
      Ma0OgdT3BwDu378/M9/AMAwu61wBqGtXhQoiKEAyDcRxjOXlZaysrODmzZvIsgz7+/tn7nMS
      b6jdbh/6ADQNsmqGW4EgFrdPA0WTx7ZtGIaBvb09NBqNM60LINPt/wMkWZfIhpNqoAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='poverty' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='poverty_age' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='poverty_reg' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='povery_time' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='satisfaction' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='satisfaction_levels' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z38c6XmveVV1Vefc6EY3MkCAIMGcMzmBnCjJI8uyZR/J9trr3a/hNxu+
      wP7OOhxrZR2dc2xLlo7SaDjD4ZDDDAIEQBA5NkKj0eicu7qq9gVAzoyG5IgzHA1N9PWCP6Kr
      6qm7wr+edD/3Lei6rlOjxiZF/KoNqFHjq6QmgBqbmpoAamxqagKosampCaDGpqYmgBqbmpoA
      amxqagKosampCaDGpqYmgBqbmpoAamxqagKosampCaDGpqYmgBqbmpoAamxqagKosampCaDG
      pqYmgBqbmpoAniOq1Sqapn3VZjwUTdNQFOWrNuNT1ATwHKHrOs/qEm9d159JcUpftQE1ni7p
      f/8p6uLSV23GQ9DRNB1RfLa+uTUBPGeUR0ZRRke/ajP+w/BsyfEpoMVGGFt7+LZiZITZ1Jdv
      g67luPnrH/Oj3/RSqT571X6Nj3juBKBnlljOPXxbJbVErPA5y9U1JnsvEylt/BAf5+2++Yfv
      vNjHvOswb57chWwQPrPsxeFLTCfvlzvB27fnPp+RNZ6Y57cJpJUZvXmZsZU8wa2HONDTiFYt
      M9V3kZVbORp7DrGrM4hRBNBYuHuFO1NrWP1dHD66i/LcLW4OL6LKbvafOgbTt/jgRh/GmRgd
      u09yqsFMg98Feonp/psMzSewNfRwZIuJvqt9LBbXuKB08uJWCwN3RsioFrr2HmJbs4fy2hy3
      bg+REevo8JTp7RtAda4xv3U/J7eaafA7AcivTnLt5jBF2cehE8cJOTIMXJshm1shqTvYd/go
      TR4Tny2xGo/iORWARnz4MhNaA4cOO1gY62PI4qADEUewg/1BjZF7fcw7ztAVsgNrjNxN0bh3
      Bx6rDQMgGKw0tHagVhKM9c9yeN9OdkaT2LYfpcnnhlQ/Y8sG9jhWuLOss71nByaTE5PLxZ5t
      7aS1YxxrtyKrcXyhNtxKlvnpceodPUwMDOPs2EuXTcZoMrCnkEYJHaMz6ETKDTG2DHuCJa5d
      nSS07zCOygp3rtzCcjbE+MgKe17aizc1y+J8lAZPC4av+nb/B+a5E4CiKGCosDSjsP31bppM
      EkZ9jYn5NXSvTH1jK42hKqVknHKpANgBH+3tRkanJ0k4PJh9LmKzi4SzJdRygTIyOLfhcTpw
      BIJ4LcD9voSzka2uMNOTE5gsAXwth/G67DiEIEEvLN7tY3Y+g17NE6066cmlUfHRtbUVx8an
      u+C2U64L4nMB95tvqRUSvi7OtTWiKXXElt4mXQjhbe1hW0cTiZUK1ZjKszno+R+H56YPUMgk
      SKwtcOtunqDXSKhFZHxwjrXEKuGpRYwBL6Kuk88kSMSWmVmKYrLaN44uYgns4PCBPbiIE03E
      iWatHD5xmgM7WzFtvKilUorYaoJsofLRictVnO07ObivB3suQqz0SbvyqQzNe49zdF8PHouI
      bLRiEFKEF1aJx9bIFiuUSyXisRUyuRIPuswuP861aSZX4sSWx1kteHFYv+SbuAkx/O3f/u3f
      ftVGPA1iE9e4cGMK164THGxyYqtvojJ9ixsD45ibD3Gopx6hXGRk6AZjszHa9pxia6MTUQDQ
      WRq+wa27E2jeHvZv78QrLHDp+hBFS5D2oI+6ei9mLc9Qby9JU4g2r5GS5KTBLTIzdIu+4Rmk
      1r3sa/ciqhUqJj9+KxiNGveu3yBSNNHc1kJDMETIbWC49zqjSzl8oQZ8doHJvptEKm5aQnYU
      g5MGfz0hT5X+K1eZjMHBMyept+pUKib8fiuaVkUwmHA6rQ/6AJqmUfjwCtraI4bBanwKoRYd
      +vlBURTW/s//uzYP8AQ8d32AzY5pRw+y2/1Vm/Ep1t00NETx2eqy12qA5whFURBFEYPh2XrJ
      AFRVpVqtYjKZvmpTPsFz0wmuUePzUBNAjU1NTQA1NjU1AdTY1Dy/AsiM8f3/8t8ZWSpszJaq
      jL333/nhr66R+QILk5RCmnzlKXh46hqJ+UH+7f/7O35+ZZoygJLi6o1+MvkK1VKOXGnd0Pxi
      P//8D/8vP70+Q23I4uny/ApAK2H2NJCJLlLVgVKE8agLvzWP+gVeotzKBEtp9Yvbp6tEE2l2
      vvgdvn5iCyYAXSNXKKBqOsX4AuFYHoDIaJj93/kb3jrWgVDzfHuqPNfzAB6Xm0IpQ7miUgjP
      Y2htxa4sr39954a4+OFt0lI9J154gTZbkRsX32Y0UsbXeYDXTu0mGx5janqS6fAqqncn3/2j
      k5TTBVSPDqvD/GpojeziBAXRz4tvfYNWS4mBy2/TNxkDTysvnDpJV4MT0Ekvj/D+hevEFBv7
      T5+lpTzIL8/fRDAOMXnodV49uSGCDSr5Eoq1THjoIu9cG6Q0uczkvlc5VZ/igyv95IxBTrz4
      ElsCto3Z7Bqfh+daAAZXHfXFGVbzKTJrBrY1OVmZXUat5Bi82Ycc7KSluML1gTFaTm2lvnUr
      Bk+R8PQsC+l2LNk0+HfwZ2ffZOwXF4gAYiZBTtGhkiUr+nn9OyepzF9mbCmPT+xjyXaQ7/2v
      LUwPXCCfr25YkmPo+gTb3/gubxhTXL7aR/DQKd76mgO5bg9t9eZP2a7kM2TFIHt2v8ir0Sry
      uXO0kuU3338PU8s2nPkYdwaGaHj5GLbn+il+uTznt85ER5PEpYlV3LJEg8XMCqCqRcqKlUC9
      D5vgo9EZJJcKsxxVqAt58MopSpqKRXbQ5Pdjkkw47PKnSvc1tuIyS2TsdowZKGYqtHS3YjKA
      aDB8zE8/R6EaoMFrwqg6cDgtVMufpyOSIleuo9XvxRzw0u4OYqx9/b8Qz28fYANLazfqZB8V
      ox+bef1yJaMTrx8SsQzlcoFMtoimaei6SrlUolCu8Hm6uc6GOsbef5dbff1MhNeoPtjipzW4
      yocf3OTGjV4SBRmn+/O4doZoaMixGstSLhfI5ktotU7xF+K58Qb9FKIJq9WOw2bH47XgCzbj
      tBixOhy4nG4Cfj96uYCCCX8oSNDnQ9QKlAUrbV1dNAQ8OG02bDYbRllCtlqxORzYLHYcLhdW
      swWrzY7DZECUzFhtduxWM4JWQtGgXMjgCnURdJsAEVegHooZVMlB986d1NllZKNlo/z73yER
      m82By2nDaLHicLqwmeQH5zYi4qsPoJfy63YHg7jtpgd9AE3TEAThmYu8AB+FRZGkZ6vRUfMF
      eopUYmP85JeXSRV12va/yKkDXdjl318bpeYL9OTUBPAcURPAk/Ps1ZU1avweqQmgxqbm2eqR
      1PjCqMkkWrX62Tv+ntE0DVVVUeRPDyd/ldQE8JwR/3/+c21J5BPwpTWBNK1KqZAnl89TVqpP
      L2qxrlGpKOvDatUKivrRiL2uVqkov+2no6OUi+TyRaq/p0FzXdcoF/LkiuVnNlpzjXW+JAHo
      hAc/4H/+9Cf8+09+ys/fuU6s+JRiw1fivHvpFvlilZU7H9IbTjzYVFwa5N07s0CZyPgcaVUD
      Jc7Fn/2Yn/zqCqv58uc+ra7rpKLLPPBuyK8yupB4+M7ZaX78P/6Nf784iPI7eN7l4kuk74dT
      eVy5NZ46X04TSIsyOq5x4ht/QoNFZ773fYbm07y8rQ4AQRA+8WW8/39BEBBgw31ZR2fj749t
      /90QkMxGDAJohRWU0An+7EQbkiig69q6S/HGudbL1DcWba8fu/6b9sD1WBAE0DWWp0Zw2oNY
      DAKiKGE2SrARk3/DQgQB9LU5XEf/mNe3WRAFHsTF/7j9D64JWAvfo9wcwmEUEEQJs9HwYJ9P
      3BsBdE1/EAxLEIQH11Hj8/HlCGBlmvKWAzQ51sd823e003crymJhkhVvF4favcT6LzAXOkVr
      boQPrvWT0Sz0HDvH0aYkb19LYMpNk288xjFfnIuXB0mrEo37zvDGLufvYECe4dvjbLPr3Ljw
      Pn3TGguznbzy6l5W+28wspTCEurmhdOHCTlNQIErP/5XRhJlnPXbOfv6GfJDv+bCnUVUg5Vd
      J8/hW+3lV5cHkAam6DzyNb4eXODWYjPtzjzv/PIC8/E8tsZ9vHrAyYfnrzOcn2ZxfBd/sEvi
      g0uDZFWJ5t3HObO/g5W7l/jwzgwVU5Dt9RVu3RlFs8zQvvMMb3anuRVuoN1vYvLGRa7cm6dq
      sLHj8FkO7yjx4/98DdFRIl4W2X/6Gxzu9tUE8AX4kjrB+kNC9hkIdfi4OxhDbYJ7cTdHtiV5
      5ze3SGpGZD1B3+VBev6shWK2yPYT36Ct3kF2RcHltJFPJBgYnubVHXt/ZyskZ5Czr76MPuHj
      3KEgiYn3+OnwEi6fjZXRu4x1biHkbABU8rkqgS272bNjG24ZcPmwW+Nk81km74bZ9a2v8XWD
      Dce+l2m0AIsL6yfRSmSLAq09B9i2tRNf0M03XzmGUzjH2XbIro7jdtopJlNMTk2xq9VJOCbw
      yp/+FQEjaKJIc+B9ys3n2OoDlm6sl5uZ527Kx7f/4hVMlTjXPrxNrH079tA2XnhjD6XYBOF4
      Bg1fbSz7C/DlCKC+A/OVQZZ7ThI06SyOzeMK7Udye+gU3qd3pIKlpQGrpqD7u3nr1BFcJgGl
      XMXCMu6mrXQEXVAtMDcbpuHwG5wwrfCz6zGELxINUxfoOv4mL+5rRKgqYL7vhmzh+DfeIpmI
      cO/a26SPnCY2XOL0176FnA/TeyuOCqhqhWpVQ9c/1uwwNXDua68RX56i/+13UP/sT+j42CmX
      xkbwH3qdE5YkHw7OoGogGSQkSUQQdUQEVFWjqlbR9Y/N4GoquiRjENebRQZxvUlmdnhwmCUU
      2Yz07E34/ofjyxGAIcTWjmGu/uInqIgYrEFOvewGQaZhq5sPfxPmpTe7wCayxzfMO7/8BWaj
      jL9pB0d2AeJGe1eUsBl1+q69w7xNJlX0fCGzrMFOpP5L/HzBhNlSx87jB+kOGIESYzevMpst
      Y7DW4bbYqVqSfPDO21gdFnTNBYCgprj4s3+l/cCLnLnfEiunGOq9SSRZwOD2Y/+t9ojFZqL/
      2nkWLCbyogWjxUnAXeHiz/4NTHUcOHEEEYXet/8Hyz0nON2wcaC7lW3GD/j5T8YBkVDXEeqs
      tWQbT5svzRdIq1Yo5PNUVAGT1YbVJCEIAppWIZ+vYLHakAwCerVMOptH0wWMFhs2k0BJEbCY
      1juYVaVELl9EkIyIooTdIlMqVzGZjGhKGdUgY9r4FGrVMmVVxGIyUCpUkC0mDLpCUTFgMRk2
      hidzFMpVBIMRm82KURIBjWI2S1FRMRgt2G1mtFKObFFBMpqRRRGTxYRaLpArlJEsDhyyRl41
      YJMFCvkcJUVFMllx2MxQLVLCgkUCVSmSzRZBkpFlGbPJBGqZXL6AiozNbsOglcnniwhGG3YT
      FFUDNpOEqpTI5QqogoTd4cBoUCkWwWKRUFUFVRWQjdKD2qgWGvHJqTnDPUfUBPDk1ATwHKEo
      ClpsDUGpfPbOv2fuu0LIz5grRE0AzxE1d+gnpzaCVmNTUxNAjU1NTQA1NjWPngfQdcq5BOGF
      JQqqjDfURJPP/gT+OJ8qkGohxdz8MoIjREuTl2erO7SBppDKFLDaHRtDpDWeZx75hDWlyNjA
      TWajabKpFfqHZx+xZ5p795buH0V0eoTRudhD5murhEeHmVpYpVz5XRZslJi9N00RAJ3U4iRD
      k0tPNQzI6vD7jMQA1rh3b3X9R7XA1MwsueJTCH9Y45nnkTWAWlXIFCq07d3HFr8VTdVAV8nE
      V1lN5MBopzHko5CYYXAwhiyXcNU3YKurxyjY0JQiaysRMiUdR109LiHB2Eoan78Vl81IKbnC
      /FoGXTQRam7GbhQpplZYjmUQTXZspgL3BodJySp+XyN1zjoaHTICKvlkjJW1LAarm1DQh1Qp
      kMjnyKezVAUrTW2NmEXQ1TKpXAWnw45aSBArGAgF3Gj5OHmDF1ugC9lWJLIwyeBgCVnO4Q+6
      QC2zthxmTQBnoIGg2wKAVi0Rj66QzCsYHT6a6j1IKKxFlkkUqth9IUIuicTqCvGcgt0XJGA3
      EI+ukCnruP1BfA4ThUySTDpLXgGX10k5naCEnZbWesilSeQz5HMVTC4fpkqaTBn8ja24zLUa
      6WnzSAFIJgvNjXXcufxL7tkaOHD0IM1OndWlMPOxHHoxR1w7SaCwRiq1SjhsosnuJbs2Tlbq
      oNm+Sn//HJLdjk+3YLImia3FUaoyRqeTihplLpIB8iznrJzZpnPj0g2KZhs2qxOvVyeeikM4
      DJIXsRBmHjd7GmRu3uyjIlqp5nNE973ADm2GC3cX8dntlKILpB3/Cwf8gJrj7sA0uw7tIjk1
      Qv94kZf/+GWy/TdI7XoD2+A1MrteQ15dI5XKEw5LmL0OlNQKYyspLIYcq3MF/tMruwDQSnmW
      FuZYy1Up5sJI545hWRnl+r0IZqsZR9WKMR3l5tASRpsZl2pFjUzRN5XFahLITy9z6uguwoPX
      WEgbMapZYqqJZq+VVCSB4v4DXOO3uJKqUicqLESqNDd7UUsx5rIOzu6t+z29FpuHRwpAMMi0
      9hwl0JJlLTLFzeuD1J/bgZJPMT8zSzEbx2zfw1+/uIuuSANnz+4AVKY2MnQaZSOlfArZ4cVu
      M+EIbWXPHp3Gxq34fQZmB6dYmp0mX8lgiDex05Kg2HqSV3f7ENBAKFJahq1nj+JCZ3k4DEAy
      GcXk3cmpQx2QGOanA1F2tEs0bj/I8a5G1KnzXMkDfhBkNx3mIvOJOBpOdreVmVtYJlEMccIl
      sARgcrHzwG4iCYWzZztBSRN1N3CkcxcBV4rzFzaaRuhomkIutcrM7BqZeAHX7m1Iy3l2HzlD
      S8CGVq1wr+8ebfvP0NNkQ9Nh6PyH9Jz+Fp2uKiMf3GAln0d21bNv+26axDDnZwROHewiO3SJ
      KQVcOOg53MNOt8iNd4bYevo4juoUV2/mgZoAnjaPrFNVRSG6HAGLi4amRixKmWwyxoLq44//
      /K/4zisHMW/IR8tnyasa2sca6CZvIy+/9iY7QxJ3h0bIlT/myFVa4e6yjW/95V/x599+EZeu
      IzmcKKkEZU1HrVSoaqCVchSUT5YrGyQKxQyKqpFLpjGYjICAbDRiEAUMho9dkmAg1G5nYiiC
      KMp42lvJ3hlAbwxg/q2+fDWXo6Stn0swyMiSAUEUET/mbZ+IrkDdbv7ir/6CV/a3YhAl7KJG
      Ol9C01UqioZRMlDIF9B1FaVSRZIFMpkCWqVEpqJgFAwIogHZICKKIpLRiGEjmpuw8Uhkef3c
      BklGlkQQxdpw3ZfEY0aBVFane3n7179CkZ10HTiJx+3AW+znRz+8R2u9FXNQBtw0WBf4wT+M
      s/ulV2mSTRglkUo6wqV3P2QpL9K+/xQW2YAsy4iiACY/nY4B/us//oBAdxCHtQVjYCtd0+/y
      3/7xfcz+rbz6tTPU+4v87L/8PW2H32S/TcYkSHiDbdSHL/Oj/9KL0dvKmbMNiNk5TPfDAUpm
      zB+bCDXUdeEt/gLF+jouG5QqeQIe28auVtajEvqxK+/xT/8wzJmvv4LRKCMKAiBiNn80VuX2
      ecnducA/Dw9QbzUQMlro3rmFy+++zdXzZZoPnuPslk6uXXqXv/ugSOvBsxzbvpsrl35CX1an
      efdx9ngcLKbWxYogYZbXH4FgNGE0CBhMJmRBAARMZuPGqjUJk0kCcvRfHKDl+EkqczdZNW9j
      b6vrKb4Om4+aK8RzRM0V4smp1aw1NjU1AdTY1NQEUGNTUxNAjU1NTQA1NjU1AdTY1DwmKoRO
      NR/jTm8f4YSCr20HJ/Z1bIxRfz7UXJRbN/ooOto5cmD7M5rdUCW2EEH2+XFbn60huxpPn0fX
      AGqZ0aEhFHcXJ4/uw5tL8PCIlXmGrg6Q2/grFxnn+t3ph3htVlkan0YNdLBve8snJqsexezV
      q0Tul7syyfWhqS+U5Pq3yUxd4drMuuVjV69uXJ9GMrpKpvQsrKtVmJwcYXU1/1Ub8tzy2PUA
      VaVCRQZnoJH6hmZAJbM4Re/IDBXBRs++PQjRIXr7RphKLdHcfYSdXjchvwFBLTA7OsT4YgpH
      Yzfb/WVuDIyiOL2ImsT2BpGBgXEKqkzX/mN01dvIrUzQNzSNZvEQ9JoZ6utDT6VoaNnN4SYX
      Ib+AgEY+Ns/tgXEqRh+7D+yhXkgyspgktTxPRrGx79QJ6i0CqEXml5IEQ/UYcsv0z5XZva8T
      Q2aBpZKfepuXkEVifuAG1/v6sKdSbOk5jB2F5fF+xlMFzI09HN/dyka0Toprs9zoH6ci+Tl0
      fCfEZhgYDSM4m9i7pxu7kmZ6MUwkHEX1NNNhLzCzkKRu22H2ttkI3xsjkoqRLIi0tTeTWJhB
      dbSyd0835cgImq+HgLHIfCSGVUty9eptzOYJmjq3s3dvN/Znstb8j8ujawCDie6de7EkBvnh
      D37ExYF5qjoouoDPHyLoqTAwuIQ71ERDsJHuHTto8dsoJqLMRlYprEWZjKQINbfgc5ox2300
      NzfT0bWV9kY/kgp2f5DGehezfXdIV6LcvDaBs6Wb9iYfbm8TzcEgW3bsoLPBTSmxymwkSjW3
      yo2+cVxNW2hx5Lh2Y5xKboU7Iws4Grtos8cYnM2uX4MAmelploolVhZipJaGWMiqrI7dJaHL
      FJbuMpOU8DS20RwM0rVjB00+C1TSJEom2re2Uxwd5b47nJpd4VrvJJ62Ljob6yhnVui/O0td
      aydeZZHr9xZRMlGG5+I0dW3BMD/EZMFCx9YAS8PTFCgTHh1H87TSXlfm1u0w3pZO5PwMS/ES
      sdm7rOaBapG5+TlKpjpaWprp7OymoyWAqdZje+o8+nsiiFi9DRw594fsLyboO3+Fmc469JUl
      ZmajlNUcyYIB4eVD1Hn8NLe14QQSsfXDzS43XqPKzPQsdr9GU6gTfyCA1NhIyG8jMjjE7PQy
      qqJRKMD2sIFkw37Obmt4YELO48HS1kYjkEyt/1ZM5zB46ti2tQuzoZ7Yv1wnQZBA1x52bQ2g
      +pIshzcc70QLna0Grs5G8Wgi3VubiExPsZys48BhA+WF9Vvg9AcJeDyE2trwo5Ay1rFzWxct
      Xgf6zAL3A7vnE2kMgQZ2dnYiiRCPDGGyd7G9uxO5UWTswyQE7TRs2UrXllaMixGUPd10GEvE
      psfQAKOrhW09nZjKsJKR2ballXllhXJV47eX4EhWN/X1ATyeJhoCji/8sGt8mkd/U6plwtOj
      LCZyVDUNvaKiKjkWM0ZOnHuDV07swrERxlvLx1nLFShXPnqEVd1Ic89+Th7uQUtGSX+iTV1h
      aSHP/nNv8sbLR/GZBPCGsCyPs5wuks8mKJRB01PEYwVKH8uqbrKaKMSTrKWzpBamWLF4eFy8
      aEtTE8V7U1QMEg5/O+JiH2l/EPtv7VeuJEklP3kNnyrLaaEQi7OWzZNPpqmKFvK5BdZSOZbn
      FpDtnyf59ScpFnLEVxdYiqYBEAo5Ytkc5XIFVdepKlU0HTS1ilrLkv2FeWyi7EpqmZsfXuL2
      8AKuPcc50BzAWY3w7oWrrIoOGt31NLU2YBNX+eCdy6SMIVo8RlTZgt8mMHH7Clf6p7G39tDT
      GkBXFEx2JzaTFY+9wHu/eo+ZjI3OVid1TbtodSb54PwFxhfz1Ldvwe+scu03F5hXXHTV26hK
      FupDDQQtJS6/d4GRVQPHXzxMnaxRFGwEXGbQyhR1JwG3ceMKXVCYRvd201ZnJRHL4G1rI2Bf
      D3+oOpoI2EBUYly5cJWMvZkGh4zF5cRqlFGKRcyBAFbAYHHRYMnx3tvvcnc+y5adPQSlJJcv
      fsiC4uf00R1YRZWKwYzPYaVaLCLV1WEXoVRUcQfcVItV3AEvEhXKZTN+v5VqpYhk8eJ1iQxc
      vMBMWiDU3EJTMIjHXGHo1odMxUUam51M3LiDMdRMdq6f+aKDetdHI1W1RNlPTs0b9Dmi5g36
      5Dx7n4oaNX6P1ARQY1NTE0CNTc2z1SOp8YXJvf8+2mrsqzbjU9zvBBeesf5JTQDPGYVrN2r5
      AZ6Az2gCaWSXx3j//Ducf/8K4UT5i2ToAnRSC/e48M5lptayX6ikL5ccs7Nrj9wanxvkwjsX
      mU1+/rzDNZ4NHisALTXPB3eWaejsoiNoZXlumYe5iBWL89y9e99hoMLM1Q+Yyj4sn1WSod5F
      /FvaqLN99nBYpRRnZGjmwTlX755nIPK7hFX83dA1lbvX3yGSg1RsganZyMZsbJapqdVHHJVn
      7M4snvYOXHqG3r7bpApPMYxiYYFLl0c2QkLW+LJ5bBOoWs5TFSScniD1rnY6RQEoMTN4l6V0
      EYunmR3tDgbu9DM2JZJKN7L90F4cwXZMdgE1v8rg0AQ5VaJtWw96bJDRWJJtSyu4PB7y4SFm
      o3mMrhDd2zpxSlVW5saZXk7h8NdRWVtgdCLBSmqJ7n2ncHo7afCIoCssjt9ldjWPq6GL7VuC
      VKJzzCezpOIpbIEtbOtswCSCno8SLjhp9VuIzd0ja2mhzW8htRZFdoUINHRiF9fovXmLSE5k
      JdbKtp0h1GKSkb7rxEsi7Tv20uQ2QbXA7NgdJlezNHqXCdTtoK21DbOsE4/OsxZNsJrO42re
      xu42N4nwNGPzUVTZxfbdPdTJBWbCcXLxFdJVia5dBwg6RCKTd5iO5HHUb2F7u53GNhsWqqzN
      jjO2sIZgctOzdzceUy0j8NPmsTWAsW4L+1uMXPrZj/jnH79HrKiho1BRDNgdDiqJcSajGk63
      A4fDjc/rxigqLPQPE9MVFgbvEhfMuOxGNFXA6nBgszmpq/NgkQ1UFBWrw0k5vcz8whqp1UkG
      RyJYXS6MBgM2hxOHw4m3zodZgvj4HcI5jdxcH7fmcjjcDuKTN7i7kCc108edhRw2p4PoZB/R
      +/7ZYo7ROzNU9AyjQ7OEZ2bJlwtMj0xS0nVmhvtJqUacLhdOlxuvx4XRAJVkhKRmwSbnGBkK
      r9dCggGr04nd5sBb58WiFwgvLlAoV5gfHWQyWsJt0xgYmgZUSmUVi92BrbrMwEaJIhcAACAA
      SURBVFQCSqv03RwmL9mxscKd0Rhq7C4fDiexedyYdA21tELfSATQKZWrWB0uTEKUu/ceFnC4
      xhfl8Z1gg4XWnUdp7TlENnqP99/v4+yLTYQXJlhK5MiVi2yx7+F0dzOZnI2eniZ4UHlLBFq8
      3Lg8QdFbx5Y6lbamJurrLezY0YWmppmamWNiLUcuXaZZCuKwLeLcfpz9neuOX6XCCvmcne09
      PZiA9V5DhfBYhm0nTtLjtJIKidy5u0TA4WTPkWPsdKjMaAmUjVaJYGmnzfgbZmaq6M09uPUY
      iegkefNWvMb7pjpp6WhFThvp7mrFQARLQw8nDvVQKUUZ6F1FAzCYqG9pobG+wrYd3dgKa8xt
      FCF7GzjQtJuQN8tKfAGUConYAsPji5SKKfLBIGfb7bi37OHY/lbKZSvZG2WWhsdpP/1H7PNt
      fN0zGx3YaolYJMzw7CrFag5zoJ7D+wPcz2xc4+nw2BqgklxhciGCoguYLVYolVFik+Qaz/Cf
      /vxPObOzad1PXlMpZDKUVRX1QdNfpWpt5bU3X+HwFiPDI5FPlK1WV0nRzZ9893u8dKADiwGM
      NgeFlSVK1SrFQgG1qlHIbpT7oJkt4fVpzM2uUalWiM2Fwevm0YNrIs4GK6P9cUJNLmwGIytj
      s7i2BD558dUKmVweVVPRnkI6Xj0fZ6Hi5Q/+9Lv84cv7HjgO/ja+kJvFySXKmkopm3/geUpp
      hXClmW9/73u89dIeLF/cpBoP4bECMJhlMpM3+f7f/z0/+OUIB145iqtpL/6Fd/j+D3/OmlxH
      vdOE2diIsXiLH/zgZyyXRJz1fqyI6Nkwb//7v/Gzy8vs2NUEmPD51v0wJamVkOkeP/j+j5hX
      PdR7bQRadhNikh/+0z9xvm8aVfLgMMzzL//0AyaSYPHV45QN1B84RWj1Jt//x+8zUmjnyC4/
      ZpdvfbGIIGBxeLF+rG5z1bVjcYkEbE6aAiYiWgNddRIg4PYHMYvg9PqpRm7z3/7lFyxkP7JT
      FE24PPaP3SgJt8+5LjiDjNPhQDYYcDhcmGQBkPH5HOAMsc2W4F9/+CNuLqk0+Z0gWfG5LBvl
      WvF6LVi7X6SreJ1//vt/5J3bcyiSjWCdHWxtbLfP88//9CN6YyKtAQciOfovXmGtDMvjNxmY
      Tz+9N2GTUnOGe46o5Ql+cmoTYc8ZcmPDM5knWNfX/xHEZ2skq1YDPEfU3KGfnJozXI1NTU0A
      NTY1NQHU2NTUBFBjU/OIUSCdcnaZD351nrmMRtvuE5w40I1d/q0evK6j6TqCICAIArquo2s6
      guHjmbXWqeRjXP3NrwiL3Xz7m8d4fPwEfT1X1+9Q7udjvTwdAVEATQdBAEEQSEfHWFNb2dLw
      yaknXdeYGbqKpeMUIbuGroMgiHwyUuTHyn3GRjtqPJxH1ABVxi9dwffCd/ibv/ou3X4ol5SH
      7JZjcGiAeGbdQ1NVIty+NErhISVmYpMIra/w3bc+6+UHKHP37hCx2HpJmrpC7wcjDy3386ET
      nxtlaGYFyitcvjVKdSPmYqWYIvsI785MIkJegVxsnsHhGZRPjZ/pJMJjDE5HHnZ4jWeQR9QA
      ArKsMze/wFZPB21btgEQHbvKxVsTlI0+jpx+EevyRS58MI7VPkjnnpMcP+TA5LQjozD43s/o
      D+cIdB7lWGeVt89fYyU/xHJkP2cPuuj98CbRoszWIy9wojtIYWWE31zoJSc1cHArvPv+EBZL
      L809hzh9LITJ4UAG4nN3uHRlgLKtmRMvniJoVJi8e5255TVWiw6Ov3yG7vp1X6LIxB1o2Iu7
      usTNoQX2HzqElFpgUXThE8zYbRLDV37Ftb4Ek8MDbD9+hk5ThfDdDxm9toq1ZQ8vHduN41Mh
      2WRsNplccpbVhI2urgCV6CzzqpOAYMZhN6KkY4zNjDMzMUtScXPma+dodwlM917iw+FFzB4P
      B099k86NzKdKOsx75y8RrTg5/uo5ttoz3B5aYC08wUrJyLHX3qK7TqbG0+URApDoeuFNqrc+
      4Cc/vELjrhMc29eFyeGne7eNSnqN6clxTh84yRk9SGPbDvweM7o6Q2ShQHdPmfG4m6MvHMZr
      dWELOHj1bIaZ4jb2dzmp5GJ0bNtNQyXF4OAYewNVrtxZ5tAb38InaGhWeEHzEAp14g84EJhj
      eSFH934TN24uc+CNb2NJTtLXfwfLrk4i0QzdJ1/nQHSC8bX4AwFU9TLxpTUMlkXSK0VWc2nU
      pRhCo4tCMk7cIXPw6MusmBMc278Nk0kmPjWB4Gjm9ZePcG/4HulUEUe97RN3p5JPE4tDyOcj
      GZ8l1+xgaTmGOeihkIyzZjHQJCjMrhQ4cO6bWJeucjtSwr58j3ElxLf+9DTx2z8hnGddANUk
      N6/exda8nd1iitsX+ml4s57wQpaDL36Do5URro5E6D7d8iW/DpuPx2SKd7Dr1NfpOZKl73Yv
      sVgjhcl7rKpuDKUMaYzogowkSxiNRmTJ8MADE2sru1qWWJi4x5zk4uDJE8iyhFQ1YpRgeXmO
      xZUCklymHFdYy5Ww+OuodzkwGQBKyLKMLBsxyhLV+62vQpSCu4tmrx3B2IBxaZJKRaAu1ELI
      70YoOpFLH00CuRx+lqKrrMXybN/jIbyUxI1Ko82+schGwCBJSJKM0SgjGUREk4XmtjbcznU/
      H+kx84QmuwOTqhFfS5AvVqn32ClGP7q19S3t1LvtyAUXQl4nmbXQ092Kw2KmYJI+cm8u5IgW
      CjiNGVSDgfaOegTA0bSFFp+DSsWHfaI2X/ll8Ig+QImJ3psMT0wTDi+TzpXBKFIqavhbWgj6
      HBjWE9hSzSaZnZ0hGs/yYK1WMYvubKC9owOnniRd+ljRukahouCsa6Sp3odRErC6HeipNcYm
      p5gZnyNRriIXUkyGZ1leTaLc9860t+LLDnNndIp7I+Oooh2L6dGzng63nWJqkrlyEx2dLaiz
      k+RVG077x44RJJTEElOzC6xlCk/mcy9Z6W6UuTdxD92+Bc9jo9ca8DkqDN8dZWZumtnl1Eeb
      rE4aLRKSp5H2tjZ8NgMPd0itkl5LUNGglEuSLjykX1bjiXhEaEQRAwVmp6eJxPO09BymI+jA
      YqoyOz6P7migtbUBv8eDy6QSng1TllwE/E5kgxWv38bq9Chzy2s42vazrdGBKAgYTQ4cNiM2
      o8jy3DRp7LQ2t9DQ0kSzR2J6fILVnE6wqYGAQyYSniOjWgkEPJgkCz5/HX6vxMLUFBnBw559
      u3CbDYiyjN3hwABIZhvOjcQWgmzEVC5hbdpCwOXETBIp0EXQaUJAxOxw4HQ4cRuKjE0tITp8
      1LlsmMxO7BYDgiBis9kxbrgyC4KIw+3HIgsYzTZcThsmm4VKvEiouwunaT3BtdnhxGk1YzBZ
      cNgsiAKIZhd+r51yLMx8JEEulcDZdZAmByCaCYacrExPsriaxORtpKHOgSRZ8TjXVwCIohW3
      W2RpKozJF6AcD5NUbXhsxgdPrRYa8cmp+QL9Hskt3+OdC9eI5qGudRevnTuK8ym+DzVfoCen
      JoDniJoAnpxnr66sUeP3SE0ANTY1z1aPpMYXR9fRn8ai5qeMrmnPpG01ATxnrP4f/1dtSeQT
      UGsC1djUPCZNqkYuOsWlyzdYSBSxeNp4461X8D8kOlk5k6Bq9WKTQC3niOVU6r1OhN9Kqq1m
      Fzj/6/eJSA28ce4Fgs7H+7aohQRZ0YvbDChFlpMlgn434hdI1v2JS1QyRJMC/oCDcjqBaPdi
      NsDKnTuk2trY5vE8lfPUeHZ5dA2gK0zNLtK0/3X+9//tr3nrdA/iIwZME+N9zBfuH1YilX24
      32ZpNYpp58v85bfOfebLD1Be7OPe/UjfaoVEJsfTDI+mV4uk0iV0YGmkj+jGjLWuqmi10eFN
      wWPSpErUOYzcvNeHRA/19X58JkjP9vKL9/vJViW6jpxlu7zAL9+/Rur6JFe3HOF7B6wsJyS2
      NhUYvXmJq3fDCJ5Ozp1up/837zJStDA3toNX9wW5+ME1smVo2/sSLxzpJDffx8UP+kkKTrZ1
      hAgPXGNemWS4oYfvvtFOOJZlW1s9sek7vHd5kCxWdh8/y5HtEpd+fptCYYXFVJ4tx77NS3sC
      GKgS7r1NuWsPndIKv/pFP1teeYsO0yID96rs3ZpnetWOKd7Lz9/vhduTtO5/lROmMhM3z3Nj
      Polm38I3//QVfAaAMqOXL3MvskgsUaFlz0u8fKSN+FgvH9y4S8kY4NSrr9FpmuK9OypC/C6G
      7pdozN3lysAcuqudN948jbO4yJVL15hNVQl2HeKNM20MXL5NcnWZ+XgKX8+rvHWmldkr57k4
      HEaweDnx6jfpCT5bY+jPA48RgIGmniOY7eP03xtgbMjKyTdfxmnz0NDcTK6QZq53lP1/8xrf
      KBRJdp+jxwnFpSGKZR2UAsvxEh27D9Pe3Eww4OPcq68Tkho52uZHzS7S1NhCtlwmNnGTyI4A
      C3dWOPjWn9PqEFE0gUPBCncs5zjRDCSnKZYqqLkoAzMFXvr2X1BnSHLpnX6iWw5QqZo4+Pp3
      eNUY48NLS1T2BLAgUR+ES/NZ6owpXD31ZBZWyZmmUeqOImkjFEoC7S+/wTd0GePuc7TaIHI7
      gqflAK+/0k7kym9YzoHPBaBTKYvsf+1PabVWGHjvArMRA3eujmMMBDGXE9y6OkLjGYgspznx
      wjfo8Kp8+H6R5h0H2dLWgtekMjI0S/2BNznXYmL4/K+5l2yhXILuU9/gXF2Jy+dnKNKBrc5P
      SzMUClGGBufZGtxaG7V4yjymCaSjVDVcTT2ce+01TjcXGFvNMTK8gLdlG3v37qJeqlJmfbWU
      qmp8YlLZ6ObQsaPUm0oMX7nMeDz/8cJZGhqEpm727NlDg1unUilTxYXbYUQ0SBglA7q+PoOo
      6/qDlo+mKAgWKzajjMHsxm0sUayCweEn6DJjMFqxfOQeg6mhA9PCMMM5gXZfO1JpitE5gY7W
      Ty7L0XUNTdM3rsGMP+TDZJCwWH/rqyvbcFgkRNGMwyGgZHJo9Vs4sG8/h4+f5eUTWzAKENyy
      i46QC9HoZN/hozTaqoxeu8JIJEVVMGC3WRENFvweyBUBq5cGrxWDbMZqFKG4zN2ZCp07d7N7
      dyemYpGnFxi+xn0e0wlWWJrsZ3whi0GCfEpnzzYDebPOwvw0SbNObsP/WTKrDF58j/iWLo5s
      LPCgWmQ5PMtKsoBstSAJn9SabDaRXJhmymQiW1KBOlqbbnPlnfewWi20bt9Hg9nK3PVfU13p
      5Hj3+lstu/wExWkuv/8uslBCsXaz0wozj7oOQ4CQaYnbWS97d7pJzEYY03dxXPpkd0JXM/Re
      fI/Y9t00P+6OlaPcuHQRS7VIUWrhTFcL+akx7gyXcZtl3MEOPA1gkCVEAVBKRBZmiSTyGCxm
      ZKOVeo+Ngd6LzJoE0pk6XjoM9377AgQZmSyzE5MY5AwKbqDE3Mg8vq5uqmtTZOQGWuu+eHLu
      zcyjfYF0nXIhzepqnGIVrJ4AjT47aiHJfCSBwWLHJso4Qz6kUpqFpVVUi482n5FUWcBrN5FJ
      rBJL5DBY3TSG6jBUCuQFI06zEa2SITwfRTXacdtELK56jFqO6PIKBV3GH2zEIZeJLCxTMrho
      a3CQzFepc9nRylmWllcp60YCDSFcFp1kUsHjsaHrCtlUGZvH/iBgbikdI1U14/faKCZXyQsu
      6j0WdCXLWk7G7zFTysZYjqaQ3SECJp2q2YxNlqlkk1QsnvW4o5QYvHAVtbERh2zG39CE2yJR
      ya2xGEmgCjKeQAivRSFdMuNxyKBVySZjrCayCGYXDSE/RiqsrayQKmk4ffXUu02k0yWcThui
      qJJJFrB67BRjy6ykylg9DsxY8dSZSK0ksfkDqPk1SqITr/2j6q4WGvHJqTnDPREKC2Nh3J1t
      OKRnz+GsJoAnpyaA5whFUVAmpyCf/+ydf89omoamqUjSs7WuuSaA54iaO/STU3OFqLGpqQmg
      xqamJoAam5rPnFjUlAKxWBJFF7C7fDhtJr5I1D+tWiQei6OaPQQ9ts8+4CuilM1i2AjGVeP5
      5fE1gF5k6uZVrt3u505/L739o2QeEolDUypElxcobExVliIjDC8/3CEuNXOTdy/fZjQc/0zj
      tKrC6tIC+ftToKlZeqcTn3nc74yuE1uYJBzNUi1kWI7GqG6s15i7cYNHpcr+slHLRVYiEUob
      cZZyS8OMRUuPP6jG5+LxNUAlyVhM4tQrr+K1iJQKJWQJyoUMhVIVRBmbw4qSjjM9PkZAtBF0
      OzFaXPhEI+hVcpksFVVHttgxCwprSwlaDp5iZ9CBUsqRK1TQRWk9/IgkUK0UyeVLIBmRylmm
      J0bxG9bLtRvtBFxmQEcp5ckVKgiSCbvdikiVYr5MVVXQBAmb3YZsEBF0lVJJxWgxolcKFKsG
      rBYjqlJBECVMdheSJJGNzjEeyYBBxuN0oOsaxWyahKJhtNqxmeWNwLxVikUVQStTEcw4TAL5
      fJ6KChabHYvRgFopkckV0UUZh92CpmnoSgkFI1azRCmfpayCxebEbDRQzqcplFVEgxGb3UIx
      HmVyap4Wg5k6lwPJ6sbzjA0fPi88Ii7QBpIJY2aW64PjLK9m8TQ04zSJzPa9y9X+UabnF1FN
      LvLTt7k+NMHK6hqavRFn9DID6g6alRF+cf4GU7OzJHQn7soiV6/3MR+Nk9PtWNNjXL41xNRU
      mILsJGDTGLx2gb6hCWYTOcpLk/SPTrISXUO1N9JcGuKdZS87fUU+fPcCg6OTTM2GUS31OM1h
      fvlfL7MYnWVwZBrJ1Ui924KgZ7n5Xh/29lbSt9/m7YkMLU0BZkd6KYp+EosDpBUbK4OX6Z8M
      E42nMXkaUBb6GJxfYnZkjHCsSmPreuZ5WOBXP75NdGmMBcWOsxzh9q1eRiZnWM5ItNXL3L1+
      mRuDo8zNZfDWGRm9c4N7I5OsKRbslQjXb91mbHKGeEHHF6hnvvfX3BycYGp+GdHuJj5yjd6R
      GVbWEhicjZgWLzIm7qLN/fiHWYsL9OR8hjVG2g6ewb6yRGw1Qt/lGxw5exxJkihk06SzK+i2
      Nr5+5iVOW/2Edh+jzgTJ/vWjRUElX1AIdW5nW0sddb42XjgcJ9F9jh6HRmQ0gpJLE0+lyVhC
      tNrsFAxb+Ma3dyKjgVLGVjdAcPcJ/Ca4n5W6sDhEJnCUb70Rohibo290lIK/Dn/HXk6+uJXY
      7D1SShHwgOikqb7I0lqSSsFNW0Aml8xSzlUJes0UVwDM7D19DjGSZldPD2YDjNzzcuDEOTqk
      KsN9vZSqPIjho1VFuo69SpOjyqVfvMfdhSJmWWNmtsrW5h1E5Ua+9cd7kNQqpcwKI2WBnuPn
      aPcb6fu3v2NoWcAh6Swly7R1bkUyGMhnUqTSUeS6Lbx27Cx6YJaOnQdwybC69qU8+xp8lgCq
      BWLJCu5gK75gkHLyXZL5RcZmnXzze39NaWGIobkqGjoVpUxV1T6ZZNq5lT/8o2biS+Nc+/U1
      zn7vlQeb9GqV2dk1Tv3JX+JYvcvlOQ1RkBDEIpquo6MBOkqlTLWqockfdVhEg4SmVFABtaqg
      Y0AQBUxWOyZZxCDJH1u8I2ALNrJ45yqlpv3sMqwyHR+matyCxyh8rJ2vUS6VUTUdXVzPD2yz
      mxArOpL8yYklR7Cdljo7lFNInlbeOH6M7pCNcjZHMbPIhFb9/9s7s6e2sjuPf+69EhKSWLSx
      iVVsXjB2O5643emO3Um62kk6Sc3yNlWTvM+flKpMV5ypzDxMuqY607aT2MPYHmxsMAZs9kUC
      AUIgoQVJV8u9dx4kbNxxHLu7qmHQ+VTxgDjn3N8V93vP9vudH8Z+rgBDwdXcRovbgSzlMFlb
      +Pgff8hZj5VcNoNiCnFjvYl/+PmPic+NMp/UMNDJ5/Jomo5+9Pa0jhWvF4CeZ23qDp8vbKDJ
      FjoH36PP4SIs/ze//XSGeq+X2lofskmBvXV+9+t/4dSVn3G2XF1LhfjTjXtsZzSaet7FBuwn
      8JRkCbs5wxfXPqXeWY/h7qLG2ULd0m3+7VePkBr6+MmV80iZTT679itOXv4ZH5ZzVlh9gzQ8
      u8m1X95EdjRw8fIPsCnhv3gbNTYn2+FRWt+x47bY+J/Pxun+8fsvZZc3VVvIhya59myOix/+
      8M0ys1c56G91cOOL3zKkK7iaT3P16gCdq3e49ssRDEs7H189c6CChY7BVn7/u18zgoLHP8iH
      l/qxF2/zr58+w+ly42x2oFSZ0aOL/PtvFjh35RO6n9ffY3xogrZL36EQeEjE2s/Zjro3sVTw
      F3i9K4RhlN5k5RKSJIFU/twAJOlAxhajnDVF+lITxoG6UjlhrETJGXm/bemlTCtGuUzpsxfX
      ksu1Ss28uu7zS/DCPsMwKBv34ndJRuJFnEHJoi/dw8uNvWTPfpmSHQfKlI186b4P1H+p/P73
      tx/v8NrvU0KSDAy9bBdfbl+4QnwVhC/QMUII4O05essFAsE3iBCAoKIRAhBUNEIAgopGCEBQ
      0bzFvrTBTvAZs4EdZLuHnv5evDWWr5y42jB0tgNPmVtN0/ftizRWH00tasUMO5Es7ha3OJPn
      GPLmT11mmXujmzjcDVTnU4Q2I684p8ZgZz3Iajj2fH19buQ6wfifFUQvpph5soTF5caq/HUZ
      pTY2WNzcfJ48bn7kOoFXtPtVKSTDDI9NkMnnCc0vECkf76gVUwSXNl55Jk86scXi4nr5bypz
      d4cIHL1wXMFrePOX2l6UtMWDr8OPx2FBkiQKapz5uSXieXC1dNHmLDI5NkZCdhDt7KC7tx9v
      6ymqHKAmNplfXCMv2+jwt5NcnSKUKNKRyaBm94gtLbKd0nA0tNHb1oBJzxBcWiSS0vC0NxEd
      G2MF2G3vxt/Th6f1FGYHaPk9ggsLRLPQ2NGHz2MjvR1kazdLIpmhrqULf4sTRZLIZ6LEVRve
      ejPh1QCyy0ejzWBzN4/XYcff3oqWWmfy8WNo2KC1tYvOFgtqapv5yTHyhp2uHj8uexVSIcHs
      xBOWwjmiyW26Twzgae/FaodcbJ3lnQSZeBp7gw+rukNUlWnv7sdjl4htLBPcTGLzttHV1oBF
      kYA8kWCU2o5mTLkssUSSOqeTaHCO9ZhKTUM7/vZG9FSYpZUQeVMtnX4/9TbTV+6FBW/TA3hO
      M2Df5OZ//IbPbj0mnjfQtCyZjIZsFAguzxHb01EU5fmPBKxMPCCSg7WJ+2yoMug51JyGJCul
      TRuTjF7Mk1FzyHKR1blFYuk0oZlxpoNxJApks0Xkg+1KEJx4QESF8PQ9JkJ76IUUE2MjbCVy
      rD0dZnwlhq7uMjG9gFoo9Ue5dJSFmQDZgsr8g2GmNnfIxTaZCayTS0V4Or9MTpOR5fK1ZBkM
      jfh2iOhekeR6gPnVrf09WGTlRVlJyrH0YIIokF4Z5eFSHJ0s47dvsbKbI5NcZ34hTCYTZn4+
      gi7DZmCeUCRVbi/LzIMpkkAhnWRudoZ4aoOnE2voskRezVLUdQLTUySLEvn4FnNLQfJHK9/E
      /zvevAeQ7QxeucqAVmBtapTH47OcbYfA8jPCiTQxo5a27tP09PeSVFyc6Gp66c1U73URebSI
      3taBV7bQ3tdLZLuas98aRI+u8HRpgeXtJImIhOdUG7mUxuC338VXXzr4Ka4VUCSJQb8fGQgC
      kGZtUefC375Pq1xgZuwhsZ0ENmcT5zveo9u+Q2EiDHrpEbPZG7CYnrETzmLqPEshkmRLLuKt
      96LIpYCT6voW/H4/Vn8v7a4a8uoWjV3nOHvpDGogwEqxdJo05lr8/X1gKzBwtgczaZbK9yph
      Y+DiJc47wZLI0fTuBayxVZaCKumVWW49WsZVY8YwarC29+On9tX/HHM9FmmH5VWdnhNuDH2d
      +394xJ63HgUDd7+DwROIpYyvwZsLIBZkNu+it8GOvcYOW3n2wuvUX/h7rvqy3BoaKXlgFlSS
      ORVD1zAOuJtZGk7xyU/PEA1OMTMdovGS60XT8Qg1nd/lFz9y8PDzO5jMZhSjSHQ3RXNtDbm8
      DORIJEopdvTn0qrC4ciwsZGiyasTjSdpaLLCXslHRgIouy8BKFYLVZJEaGod1+WP0Efus5KU
      aW07gcT6i3vNpUmqhVIgi3HAjwleHm5oRdLpPYq6xpedDyTphY/SQX8dpc7JycHLfPz9Qcxq
      irSyH+gigZGnWCiSiASJpkAyKwy8/wmn9SRPnkwR9r5LY3cvl3/0EzprdHZTBarEw/+1eH1A
      zEF0lfGh69y+M8xaxs75v3kHV42JZ7c/Z3QhiqOhkdamFlwOnZkHtxhZ2KGxvQcjEcbe4qcY
      esh/Xb/Dyo7Cue9cwFOtk4wX8DS7sUk6s2O3+N+nG1TZXDT1dNLX5GDm/p/4490nZGta6Wup
      Jjg+zNCTIE6fHyWzja2lF1+TndmhLxh6NIu7/xIDXW4Ke3FMdS3UmgrE00U8bicmRQLJRFVu
      h8ldK5dOdeI2RRhdtjA42EZVMUtc1Wn0NuIwpRi+9QemtzR8Pi+FjIa7yYWuquQUBXdtLRKg
      SBCavsPQwznqO06ixOM4/G1YUjFydT48FtiLxbD7fJgLKmpeprGti+L6Q27eustsKI23ta00
      p8CMvjfPjRt32FIdeJrqaXY7mLr9e+4+nqe67R3OdLfhsiW4d/OPPJhcwqhtxtdQx/4aggiI
      eXuEM9wxQjjDvT1H71UhEHyDCAEIKhoxBDpGFAoFNE37s6Cko8B+INBRm58crRmJ4GtjNpuP
      7BxA13XM5qN1vMvRkqNA8A0jBCCoaMQQ6BhRcsk4euN/AFmWj6RtYhIsqGjEEEhQ0QgBCCoa
      MQc4dhjkEpuMjY4Tl72c/9Y5GmurDjFmIEfwyRgTK1togPfke7x/ovHQrAEwdI1EJMDc3JYQ
      wHHD0IrMjo+iuU/SlQ/xeHKW7186Uw66OQTyeyzs5Dl97gI2q4kqx185ml6vjAAAAWpJREFU
      4vobIJdZY2pqB4exI4ZAxw1dS5PKOhgY6OXE4GmUgkqxoB2ePaqK4qijscVHc3Mz7prDd4az
      Ojr54KOLtLqqRQ9w3DCkHJicWE0gKRZsap6MrnNYyag0TWN3fphPH4/gcHbwwUffpdtzdFJj
      CQEcN4wq0JLkNLBqBVRrFbZD9L8xO9v5u3/6ZwxdI7U5zvXhOdp/ev7I5F4TQ6BjhqzYqJKj
      rIR22Q4skTFkFNPh+QaloqtMTy+TLRYp5nIYVeZDD+I3DB2tWETTDbERdvwwyEYDDN2+S9Tk
      48r3PsBXd3irQEYxw8LjewxPrmJy9/CDj96jyVF1SNaUSIcn+ew/75NG7AQLKhwxBBJUNEIA
      gopGCEBQ0QgBCCoaIQBBRSMEIKhohAAEFY0QgKCiEQIQVDRCAIKKRghAUNEIAQgqGiEAQUUj
      BCCoaIQABBWNEICgohECEFQ0QgCCikYIQFDRCAEIKpr/A9vyeunA5W2qAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='satisfaction_rating' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='self_health' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='test' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='time_health' width='192'>
      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
      zjX/H3NyiA1CoICFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='time_health_age_sex' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAa40lEQVR4nO2dWWwcW3rff6eqet/ZbFKiJIqipEtJd19870wmuZ6xPbCTsWHYYweZh8BA
      nLwFCRDEDhzAjwGCPOchQPwSIEE2JLCRBDNwlpnJzMC59r3Xd+YuJCVRJEWK4s7eu7prOXlo
      stml7VY1d9b5AYTU7PPxO1V1/rWcOv9zhJRSolCEFG3QQCklSjuKs87AArBtG9M0D7MuCsWx
      M7AAFAfj0w8/oGE/+wq6tPTwuXGL9+/RdmF54R6fTt87quqFBuOkKxBKpGR7Y4HqR1FatQ2E
      azDzYInf/d1v82c/+hgMwcbSPdZagog00OwKt995n4vFLNu1Blc1qJbLdEScP/73/4bC+G2s
      dpO/9v77xAx1TguC2lsngN1YoxW5BOYWnVadStPlzbffQAeEgGw2R9vVyCfjtOwOxUKOR2ub
      WGaFSCIHQDqTpVqtUBobZ3ysiIbAVY9kgRGD9gJZloVt2yQSicOu0wvZq64Q4tjzHnpO1+Kz
      z2e59fLLGNqX/+3a1hoiUyIdPfrz1pFsr4+ccLzH9swJoFarkU6nj/3g1Go1MpnMseY8SU5i
      ezudDq7rEo/Hjy3ngU8lC3OzbJVrz/lW8ujhPO1Oh5npaRqmRbvd3v/atZi7N8t2pcHS4jy2
      6z/v3elPqTXbz/xOujb3Z2fY2lzn8+m7dBw8ee12k5mZWRqmxcLCgu+cttmNa9vOM7/vmA1m
      pmfY2Fjn3oNFXOnNC5KFhXmkdFhYWPSdd2N1mYePVp/7vWt3WFx6xNLCHOtbZax2m/5d+Xhp
      gcfrW1Q3H7NV899z9+jhA1Y3tl/w/TyrG9vM3Z2mXGt6t1V2j/12pcH68jwNy3da5u/PsF2p
      P+dbyfLiHDvlHaanp2m2bU9exzK5d3ea1Y0KDxfncb6kTR34IbherxNLlJlZ30DaLaKJOLWt
      Clo0ys07r5BNxTHNNmbHwnUdvvj8ZxRKIzSaJi9NTVEo5GnXy2yVK5QuSbY21jDrFT6fmWfq
      1jVWtlqMZgws2yFdvMRQJtbLu7WxRhmbnapJLGrQMltEYgnuTN2kUMjTadawXInrdPjZX35C
      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
    </thumbnail>
    <thumbnail height='192' name='time_health_educ_sex' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daXAc533n8W93T899AjO4QRwECIAACd6HKMm6fDt2HDupZCtVqa3sVnYr
      W5vKi32zebHWu32RStWus5XdOJetRLbiKLZkO9Z98BAvAARJ3Pd9DGYAzGAwZ0/3vgBFgRIp
      QNIMQGGeT5WqwNHgefqZ7h+mj6f/LRmGYSAIBUiSJEne7YUQhN0kAiAUtF0LQCKR2K2uBeGu
      XQtAJBLZra4F4S6xCyTsMoNkIo6u7865GOV73/ve93aj41gshtNp4uWX36SpqWHT/8mytLSM
      w2H/hC2mWQqu4XCYWV4KIlvsmGRpy9968+03qampw8isc/7VX/BeZw/O0lpYj2ByOFC2+P2F
      oS5GYxbKvLb7v8HIcvWN83j212IxsvRcfoPXzl9HcboZ7OqntL4K0xZ9hJYWUK02Lr/6U8aj
      ChbJwO5yfPSvVzbJ0nICh83EUjCE2e5A2fojACARHuenL71JSW0j8cnr/NPPXmdgcJii6kbc
      VoXV8U5uL5upLNp6vQSXlnA4HETCS+gmC6ry4L+zmbUFfvVWF159lu5lO/rcTf7tjQssp1Qq
      i0y88vMX6R5ZwGNa54UXX6ZvYAi718+bL/8znTf7iJs8VAU86Ol1Lrz+S85fuYGrop7QwCV+
      +dYVzN4KbJkVXn35RcxVR/FZP+j72WeffXaXA6Dw0ktvcay1hv6hESbnV1Azi/zvv/wR/poG
      rJkVum4N4SwuITQ7xfLyEutrcaanxphYjFHis9HbdZ3Z1TTEh/n+91+mvKGOyPw4juIypvq6
      mAwn8XusjIwMMTo8hq2ohNBEDz3Dc3iK/Vw4/xZHjhxjPTjEuz2r/O53vogpHeMHf/F9kr4S
      im1ws+sG69hwGLG7yxkIFDHRd4Pr166R9tUiLY3RPzaPv9TP/Mw0wVAIqypxs7ODK5d6OPj4
      KZjv4V87VviD3/sWXnOKyxduU99czq3OLlbSJorscLOrk+Wkgt2Icv1GL4rDx9x4P6QjPP+z
      dzh76ihz82EqSt30dN/G4rTT29nJckoms9jB93/4LtW1FQSnZiku89F/o5OluITXpjMyNMTI
      2CzekhLMisTqwgRdt0dwFvm4+rMfMGk+wImWOqLjVzHqvshvPnMKtwWmhnvpvPIOy7b9uJU4
      DrPM4mocU3qVjq7bmOweZodvMTIfwWVK8uf/6y/xBmpJRudRnAGWJ3oYmF4m4HczPTLCyOgw
      2Itx21SGOi+iVLThWb1F91oxs9cucva7v0etz0rfWy+SbvoaXzlzgNTCACHnQX73G09RrCa5
      3L/E7/7OV/nVP71A89nTqLqGvbiaWnWOtyeyjPX28NvffJRX3+jmwIEqwqMdGFVnqHDdG4CH
      YhcoPNLJ9Yl1RrsusqipeNxeAnadH//wR1x85xc894ur/Ns//5DJqMHMjfcYjRj0vvIKC5l1
      +m7e4PkfPkdIV/G4i/F7rIwP9DLefYHOuQxrwxd5p7OXVy7dxBYf59WuSaZHenn31z/hteuj
      d5fBVdrIkSqZf/i7f2I+Dj6Ph9KyAKnIIt03Ovn+3z1PaLiDjsk4I50X6et8jTcGYgS8TtAz
      jA/28O4vfsRrnRP8y49/TDit8M6vfobmCGC3bHzMa6F5/PtqMZsUbBYLAKlYmJs3OvnRXz1H
      7+A1zneOomWzXPzlz5hcTZDVdUaHesDmwucNEHDI9I9O8d7rLxHWTGRiy9y80clzzz1HSnHi
      9vopcioM9Yxw6/LrTCctjF36Odf7B7jQNUZi6jJdEzGyySi/fPU8bkeKn798CYfbRWlFFRbT
      xlfGldde5PkXfsrwyABvXx/DX+QBQ+fCpUto0Xku3+rlpZ++hMtfgqKnGO7r5pfP/T09YQOX
      x015iZfJsQHC4138umsReXWQNy508tor7+G0rvOLV7sBWAgvURoo3lgJspknv/IoF198jre6
      xpieTnCgqQSz2YpJkbl58df84/M/YWols/F2q5s6OwRTYLLY0YID/PJ2gi8fL0FW3bi8PsyJ
      GBZvKV67et9t76EIAJKMv7yKEo8D1enDYbfic1nQbQG++wd/zHefaMHiqeBEexNmk0pZ1T78
      DgvBkZukyo5xpD6A2V2E3WbF49zYFckkk1g9fnxOlURKw+HzU1ddSjKxzM3xNb7yxHHIaHcX
      IZVco3T/ab5yvIyrA0sEvA5cHi+3Ojo59PhXKHUCkoK/vIqAx05yPYKtqAy3w0o6NMlA3M3X
      HmsjnszgKa2jvaWO9WSG8vIAFtPGx1y0r5H5ni5W12IsR9YA6HvvCvXnvky9z4Kn+iCPtFfy
      61depeWxZyjNzPPGezcBsLk9eLw+Al4HAIlECm9xMTM9l/G3P01DmQ27twi71Y7HsfE9n0qk
      cBcFcFkMUhkDr7+M6jIvWtYAPUvGUCgtKSaTTOPzeQmUlmNVN5b1xJO/wXd+85t4lDiq3UeR
      y4YEpFNJVlfCJNIayYxBSWkpmcgYYa2Kx9rrwOSkyG7H7XUDoGeSyDYPfp+DZCKF1eGjtr4K
      6c5nb1JUNC27sRL0LOs4+c3vfJ3p3k4am4u5dLGf1dUwiXSW1jPP8Nvf+TaVHhN6VmM9PEN/
      UqXaCvGlEV66MMJ3vvMtip3FkAoxPTVF2l2EamRIa1kymTTZbBYtq6NlNkK0y7tALmw2B5XV
      1Ti9RZQUuSkqrqDEss7gipnHD5dzvaMbu38f1eXFlJSUYDGb8RQV4/O6qGg4wNrEEEU1TdTX
      NOGV55lat1BfXU7d4ZOkxjoImet5+tQBnA43JQE/Tk8Z5bYEYd1Hy4F6KkqKKAmUIJOlr+sy
      E4kifuOp41RWOLnZPUr70RbGhiZpamulbl81Ls/Gcla2nCAzdp1VxU9b+yHciUUStnIO7K+n
      MuClJFDM/qoA7126TlnDQWr3lWOx+mgqN/P2hQ58lfsp8/tobK1npGeQ/a2HKS0yM9A3ysHj
      j+A2VhkLpjjzyGnKij34/aU47U5KSkuw2p2cPHWMoa4b1B45RXB0iOoDLdTWHcSWHGMx46Ku
      uoxDJ48y1f0eyr4znGkux+70EAj4cXn9eN1OKj0yl7omeearT+N1OXD5AritCopqYfjWNfpH
      xqlqPo0lNs5MwkZL8wHK1TjDYWhuauLM4Rreefc9imoPY4rPYvLX0rC/hga/StfwMgcaaymr
      a8cbH2Fwxc6XnjyBy+kkUOLHbndT4ndhSkUYXsrSWFuBu6gEdW2aS9cHefTL36Cl/RjMd3N7
      Mkr9/v3MD3XTOziCo6QeS3KenpElvv5b38ZnU0mn44TnFxgeGSJjLeXcoUqu3p7lmS9+geDg
      VQZDEFuaxmqRCK5mCQ738Vd/+7fPSrs1FWJhYYGysrLd6Fp4iBhanAvvdXHi7CPY1Z3dIZEk
      SRIByLFkMonVat36jZ8ze3FcYi5QHqyuru72IuTFXh2XCIBQ0EQAhIImAiAUtIckAGlGRqY/
      0W9kYhHiGmSiYaaWVj5T74uLi5/p97djZvQ2K0kgMc/IbDzv/d13GUZGSOWgnfjqPO/86uf8
      +MWX6Rq4/3pLJdZIpLKgxVkMrX3qvpLxVWbmwtt4p0YkEgMgFlpkXdvi7Xfs8nUA551/aczO
      hiktLQZ0hm5eYzyUosRr5WbHVRbWwacmuHy1CxxFeB0yna+9TOfMKj67nampEcYnFikpL2Wi
      9zr9k2ECgQDBqQFu3x5EcRXjtplZCc3Re+MGq1krLguEFqaYW9UwMnGsisat7tssrMSYGx8g
      bfahR6a51tmD6vZjrEcJLkwRjCSwWp3oa2HiJjuWD022uXdcH1iaHUP1VuMwwsxGLGirk/T0
      9CO7iklHFujpvklcduKzwc2OayxnLLgtGgszMwTjUOS2MdHXSe94kEBpgJmBbkJrSdxWiY4r
      10iZ3SSDI3QPzlJSHiA4NUZfbw9ZWzFOOcG1K1eZDq5TGrDSca2DuOTArmYJzUwxH1pGN7sx
      kyK6nsJmNX/s+lKtLmpLrMTs+zjVVEFoZpiu/gmKAiWsrQYZ6x1ieKST2wMh/OVu1hMSxOa5
      1tWD6ipGS8ZYnhtjKZrEZHWRXVshpZhQZYmpwZsMTq9QUuInON7D9VuDmJxeSGnYXSqL8yuY
      jDWuXr2B4vIy29fN4MwyDiXGv716kZRkxSllUbxugiO36RldJFDiZ2G8l9u9o1g8fpzWjavC
      zz777LNbzcPacfHpW1wemMcuT2DhMMFohoYqG8GJIdIWF3azAphobGrGX9qGXwsyEw3Q7l5j
      ZCkLiQTBsQmGyyqIzyxx+HAbY/NzVBY1sjgfpP7QceZ6u5lRypibjXL6ZB3dHaO4VA+2kkYS
      i73sO3iCmbFhbB4TifgKnZ39NPmSJIrqaHQajM0uYKwFaTns/0RjMzAwDAMDnWBonSPHD3Pr
      1gBmk8HB4ycY6b7JrcUMI7MrJAeDuJ9pZHhe4dwpL5BhdHSa0uZ2EvNjXOsdRSk5QHxpjv1H
      T2KLz3EjaudIk5Vbt/uQEilaj7QyNDTPWjZM49HTLI0MkMmkSCUSdFztxH2uhvG5LCdP1XHz
      5iBVPgPD34zvE4wpm4lz6eJlJLOFLkcAafYGDWe/RMmajaSphmJzmJHJDHZPgsR6mI6uQRr8
      KQxHDfXFMqOTM5jSK9Q0HyIZneHy9X5MiozLmWF5zcXp420EVxNMTaxSXG5jcmyKKTnJoRMn
      sCg6i4kEoYUxZkqeorW1nbaDtUxeu07CZ2EhauZQFdweWSQbWuZwSxOTS0FKvTV3l/8h2QWC
      dDzK/Pw8cU2hpqGZs488RlVlGY01pdy+1YuvuoFyW4qewSlAwqTC0sLSxiX+Ih9Ouw0tEyOW
      sdHSWI2RzeL0FmG3WlHvTEVAMoitLLOugVkxs39/PRbTxnxPSTHhcjpxeX04bVZUk87sQpTm
      tlYcio5s8XKgvhKHvxxpaYC4UoyCRjy+vZ0Km9XK9MQYfbfGsXnNGIbGSiiErqhIkkF0OUzS
      kLFa7TQ0H+LJJ05hNlmo31+H2SQDEs1trSzPjrCwmqGy7gCnm6qxmE1ElsPENTBSMcIrEUxm
      MzaXF5fDfmduj050JUx0Pc3c3CL7Gg9S5jSjmWzs31+LWXVQYonRuwSlnvvPmXkgScJXVsPx
      s4/SUlVMUWU9ZR4bsgTLoSApTQcMZhZWaGk7iFMB3eqlub4cuyeAtDxERCrCpspIkkJ5TSNn
      Hz9HhcdJNhMnHF4mo8vo6Rizk+NE0gYWk8zycphEeJaopYzmxmoMTUeLRwhH1jEMkGWFbHqd
      cGQdVTXh+vC2cMdD8g2gUlnmZSkUoqLuAA36OGvxFEU+D7oBR48cxmTSMUxuDtfXAuCoPIB3
      dArDVk2l2QSyjQaXnTXdRxIblWU+pIwdWbVQXVG+0Y2RZXVlldq2I/jsMvqd4Tc1NeOwm7FJ
      KrqtBrMiUVPTAOkYs8txDh06gMOiYAEyyThxzUx9bSmxhTGm0gHaai1bjrC8/iDpsXEylQdp
      8JnpzKRYjWVoa2thoreDldU1GtoOUWyXGRsdYz1rpcZTgYv3N0gZSTIorWqivr6S0PQ4KS1N
      Y2sboyMTZMtraK01sRDRONRcS3I9CZipqSnHavIzMjFPRX09frfC+OQiLUfbKfLYkDEDGTJZ
      nbKyqi2nf9/lKKG5SkYxWWhvbWBmaY0Kd4B9NRt/Xb2BfaxEZ8mYymmuU1E1EzOhddoONWC3
      yciyhJZOkjKs1FT6kQCLq5zmuiThWBJvfS3N5ROspBWqysvJOhUWY1mOtlfjseqMjs/h2lfL
      ft8UmqWOiiI/mlNjZT1BWXMTZqcHa02C0LpBa52f1LoV2WqjqvTedVVQV4KTyQRmsxV5G/cJ
      PIiWjrMay1Dk85BNJZAttnvm3G9vXAaJRAqbbePKaiKRwGZ7wP0EO0JjcX4Ff1nggfcP5GN9
      aZkEK5EUxcVePsMq+dQkSZIekm+AnWG1fvaNzGS24y/a+Fn+1O1Jdzd+YJc3fgATpeWBne9V
      tRHw7+7YH5pjgJ1k6DrZrA5AJpNhp78Es5rGbhZj0rRtniP8rIwsC/PzaJkMmr6d9xtkMh9d
      NkPPsh5bYy22jn5nXRl6lngsRiKVIRUNElrLfKpFfCgDoGXWmJ1dzlv78ViYyZklALpu3Njx
      +1En+gdIfoL3L0xPk8tNtn+gP4etPdh6aJbVtEJ8qoPBbZ3KT9Bxq/cjL0cXp7j03mV6+sfI
      3FlVC+M9XO3q5vxb75G2OpkZG2Y7GfuwXd8FunXtHYKraSqajuAzQozPhNjX0kwyKTF68zLj
      oSgm1YWWXufg8XPEJm8zuRSj9cRZorP9ROI6LpeX+sYGZiZG2N/QSHxljo7OXkz+Go7VWrjc
      MU5aNvHo2eOM3LjG7EqMfc0n7i5DNhOn89JVorqNY4drCcds2JJTJJzV2NPLWOx2+nv7sQXq
      qQvA6Mg8/oZD1Je67jMig9nhW/RNLlLbchI5Ms7cYhjJXc3hGgddN/sJRwwqDrVBPMS7HX0k
      k2naT58jMnGLqWCM/YdOkF3sZWI5S9P+Kq6+c4Gi5mM8dbIVSU/T3XGNUNLCoQOVDPQP4Kk8
      QJUjQXf/JPtajpKe72M+otNy9ATLI9dZimqU7j9EmRqhe2CKGFYaq+a41NGLM1BDW5mV3tkg
      qtmJ11NEpTPLfNZFjf+j1zM+icVwGH9lGwQBQ2Os7xbjC1Fa2ttYCyeoq3SxsBonFZ5jKrTO
      ofYjAESCE3TcHKJ0fztt9aUk0uvY7cVUVldivnOsICsqLpebjJJBVW34TElWUlC89fmIe+z6
      N4Bh9vDUk4+wFlpiLRpl38GT+O0Z1tZS6IaVM0+cw2X3cuZ0M/GlVaLxJEYqxOB4iEgsRduR
      o5TasszOjxJNbdy1lFxfI60bDAwMomtpyhuO0VwXILM4SrasnScePYl90+mO9PIESuVxzhzw
      M70Ka0uTrMbTJMKThKIG4wPdRJMZQnPzRNbX8FQ1U1fygI3D0FmLrYOeYGhwilgaTj36GEWm
      LHPBJdrPPkl7w52zUloSd1ULTz3WymTfKFHdylNPnmRpfBJN11EVBdVVSvvRozx2qo3+zvPc
      Gp1D1w1UyaBrNEwio7E0N8v4zCpnn3yammKNuFHOk2ebmZ5eRDe5eOyxRyC9TDCU4txTT1Nf
      5iERWyOrw9TYALG1KHhrNu5iC88zNLuE1/EJt6T7yKRTKKaNs1haIsatvn60VIyFZY1EdJHg
      4gxGNsnN4Sm01Brz4Y0rxoZhIMkmsloagOLSWupqSlgcuM3I5BDvXLhOJKnhdLmxGCniGtht
      Cqn0J1/GXQ/A6sIor791AZPDjWp14HFubMQAsmJCURQsFguSLCPpGrH1BGabDcnQsbt9OMwm
      iqr3MXy9l5o7G1YqESOty1gsKkgSFrOKrChI9mKCvRe5eLWbxJ278CTA5C4l3H+R893jFHnc
      WI1lMrYKlMgyhsdNZWmArC7hdDlRVAtFHieSJIGuMTE9S3otzPzy+5f7dWKxGLJqxiRJSIqK
      RVVQZAmbCpfffYO+ieDd8U/0XueNtzspqa9Gjy7yxusXMBX5USSJWGSF6HqCxOosF6720HL8
      cQ7XlyNJBpFwEJ9ZI61LOF1ufG6J82++wdiiTmp1kDfe7cLlc6OaLSiSjCyrmIxV3nnzbaaW
      1kitx0gjY7WYMAwFv9+LrFgoLZJZXAWn1cTk5ASJtTDB8KebymC22tHSKZDAZLbi93hAteK0
      quwvM9MxnqGqLECRw4JksuGyKSBtrJNsJkkwvDHFJRKcoW+gn4X1LOVVjTzx2EkccpaJkUFm
      l2MossHaWhb7p7hdYddPgw4M9NPc3PKZ2loc72Fk1cwjRw4g7cLptM0+0enC2Dz9qzZaqrz5
      Xaht0jMJOq5eo7L1BJU+xz3/79OcBk1HFhhcytK2v2LjD0aeaIkIvWNB2lsbP9HvfeSOME3T
      SKVyMV1qa+FwmOLi4h3payeJcd0rsrqCy+PL63n+TCJCSnbjtHyyTpxO573XAXRdJ5vN5nTh
      HsQwjB3rayeJcd3L6XJj6Fny+YnIZic2dD7Nx35PAMxmM2bzR2cC5kM8Hsftdu9IXztJjOvz
      ZdcPggVhN4kACAVNBEAoaCIAQkETARAKmgiAUNBEAISCJgIgFDQRAKGgiQAIBS03ATAMtEwa
      7c5thlktQzKZwjAMdD1LMpkku0tPARSEj5OTO8IysRCd/bewONs50uSg49JlYskk5a2PoC71
      MRlexx6o58zh/bty978gPEhOAqC6Apw41srQEGjRVWxVTZyuD9Bx9SbY3Dz9zBl6um6Q1g3U
      O3du6rp+9+bsjKYzOp/b+vN1ZR4s6rar3OTM5nHtpFgiw8xnqMF5P83VRXd/3jyuZFpjYjGa
      074aKryY7vM41UxWZ3Quf9tG7u8JlrhT8eDOLs+m+202//GXJOnuTRLLawn+7Adv5XQx/uKP
      v0ht2UdvNElnsvz3H7yZ077+4zeO0bRvo0zi5nEB/NkP3iJ1n0oHn9bvPt3GiaaKj7zeP7nE
      /3z+vZz1A/Avz373bg2lzeOaDkZzvr7+5r99gyL3R0ukrK4lc97Xn//nZ6iv2CgAmZMAJFbm
      uNx1jYVFFUfRSVIzvbwymKTuyGMowV5eeeVVfJXNmGUJSbpTilCSUJSNnxU593+pZVm+2/5m
      UtZgbD6S076SGf1uX5vHBTC+ECGZzl0A1pPafccly7k/n6Eoyj0BeL/ffPQlK/dfX/d77TP3
      tWnbyEkArN4yHv/CN+40rrCv5Cl0w9j4oMrPUHdo4+fdvl1RED4sJwGQJBnTPUVHpU01JiXy
      EGJByAlxHUAoaCIAQkETARAKmgiAUNBEAISCJgIgFDQRAKGgiQAIBU0EQChoIgBCQRMBEAqa
      CIBQ0EQAhIImAiAUNBEAoaCJAAgFTQRAKGgiAEJB2/UnxQPI6Pgz6zlt02ToOW1P2JseigD4
      tAT/Yzq3pUpK088Ae+9xpUJuiV0goaCJAAgFTQRAKGh5CIDBenSFYGgF3TDIZpIEg0skM3vv
      6enC51/OD4Iza8vc6hvEaoJQ7ABSeIhoViY7s8yZo02iOrTwUMl5AAxDJ51KY1IdrEwM4Sly
      c+p4K703OknrBiZj45tA13UymQwA2TxUU9ayGtKd9u95PQ99ZbPZu2PZPK582NzXh1/PtYyW
      Qb5Tz/Ke9ZWHvjRNu++48rG+tE2fYc4DYHb5OXXiOKnkMrf7V9CzOqBj6BKSBLK0sde1udiq
      kYfaiYqs3L/Yah4e1LG52OqHi+Pms68Pv55riqLcDUC+i+M+aH3J9ymZ/tn7ynFx3Htkk/Tf
      usFsaI2TT3yR9FQ3v/rVK5Ttb8e8qcS2JEl3P0gpD1VzN7d/7+u5/0A/PJZ8bCD36+vDr+ea
      LMn3VIfO6/qS7z8uOc/rK/cBMNk4dvZxjr3/79ZT7GvNeS+CkBPiNKhQ0EQAhIImAiAUNBEA
      oaA9FLNB97LKdJRkKnfXBex6/q4xFCIRgDz707mLGMlkztorWm8BDuSsvUIndoGEgiYCIBQ0
      EQChoIkACAWt4A6CZcOgbX0hp2269HRO2xN2zkMRANmcwX14IKdtKrbUfV83GVn+aPFaTvsK
      pJ7KaXvCznkoAiBJBootx39FZVEWRdjaQxEA4fPFhE5xjus4yUbu79PYDhEA4ROrSkX5Xo7r
      OLmy3wYcOW1zO8RZIKGgiQAIBU0EQChoIgBCQRMBEAqaCIBQ0EQAhIImAiAUNHEhbI+oSkf4
      d0s3ctqmxO8Ae7uYax4CYBAJzbO4mqKmtgZZW2dqJkhp1T6cVjX33QnAxlN2zq5N7/ZifO7k
      fBdIj4e5PTKHiTi3ekcZuH2btJbg5u1hsrsz3UMQHijn3wCS2Y5NjzM6sUJt42HWomnamg/S
      291JJmugGxvVfrPZLOn0xgxQIw/VlDMZjWz6ozNM89GXpmXujmXzuPLhQe3no4pyOp1GulND
      c3O/GS0f6yuDfp9xpTO5/ywzmnZ3LLl/PkB8Dd1VxuPtxXTcGsdsNpHNZshmZWQZTNJGl4qi
      oKobu0SGqpLrYaqqCVn96C6Xoed+mrTJZLo7ls3jyocHta+Zcr83azab4U4h3HvWVx76UlUV
      5T7jysdnqW5aXznfBTJZnRiRWc5f6sRTWk2lG15/7S1kXwWqvFEdenOF6HxUGn7f++1v/i9P
      Pd13XPnqb+fGxQPW186NS8pjX5CHbwDZ7ODUo09ueqWUisZc9yIIuSGuAwgFTQRAKGgiAEJB
      EwEQCpoIgFDQRACEgiYCIBS0wpsNKoFszu11Z0kU4frcKrgASLKB52huyzCaXLktEiXsnIIL
      gPD54som+ZO5izltsyRzDigCRACEh5xq6DQkl3PapsX4YOasOAgWCpoIgFDQRACEgiaOAfLM
      1TKGkYrnrD3Vu5aztgQRgLxTHHEw5y4Aspr7Wx8LmdgFEgqaCIBQ0EQAhIImAiAUNBEAoaBt
      6yyQoWdJpVLoSJjNFhRF3uMVI4VCsUUADJamBnn30hUShh27ohFNy7SfPMeR5uqcfX1kJYWg
      uSRHrW2oklSUnLYo7EVbBCDJ3GKKL3/793FZN96azSTo7eojTjXOHC1EVPXw1/v/NEetbfgT
      s5+KnLYo7EVbBMBG+8l2sukoP/m/f8PCukzloUf5rS+deOBfVy2xRm9fH0kNfOV11BSZ6Bua
      orbpID6HOecDEITPYlt7MelUiFjSQcvhw6jrcT6uyLNstlHf2ExDhZ3IukZfzwCBMh99twdE
      dWjhobOtg2CztZxHnjnNyO0OLDXnPjY1smLC5XZzezhN6yEfg0OrVFbsI7L04OrQmbxUh87c
      t4qykYdqw5r2QWXjfFeH1jQNY7erQ+dpfd2vOnQ2nZ++2H51aI3FmT4GhuKc+8LjXLm6QJaW
      jw1BOjqP7ijFpihoyQTpTJJUWkGWJVT5gyrKZvPGLpGah3LbqqrebX8zQ8rmvBUjD/YAAAaL
      SURBVBK1yaRiutPX5nEBpHLelwn1PuPKV3Xo9wOweVxGPio2qx98hptp5vz09f5YtvGpJem8
      eIUbQwlSqUrqDp/b8pfCq0lqa6qRFBO1ATvvvn2RmoPHUMVVB+Ehs40AOPn67/0hVdeuspzQ
      UNEx+PgC2eX76u/+HKhp4Us1LZ95QQUhH7Z3EJxc4MLbV1gJRZlbXMn3MgnCjtnWjqMsO6hp
      qCEYGkPKutERcyiEvWHrABhZJodGMFQz5Q0neOTRs+IuGmHP2PIP+fytt3l3OEpb+xFKLBHe
      uHALUQdN2Cu2DMD00BKtx5qxWS1UNjSQng8ibsoT9oot92aqDx3gQudVZiQJMChtbBGTzB5W
      kvhu/qS2DECgtg5HzxCap4Zzh8rp7FlEBxGCh4zqi+I71ZPjVvf+3JUtd4H633wN+6EnqLPM
      8ld//woH2g+Rv6fgCsLO2jIAyWSGoY536OidBjTGRyfJ7sCCCcJO2HIX6PBXvkVV9IPy32ab
      S1wDEPaMLQNgcbgpd7jv/CvGxTcHOP30CbEbVMBkcwZr5UJO25SU3TmA39Y1LV1PMz0+QVIz
      KKv1k05pqBZxOaxQyeYMtqpgTtvcrQBsa28mEw/y2q8vMD/Vz7++8DwvvZ3rsw2CsDu2FQBZ
      UVFkHUmS8FdWkl0TjwQS9oZt7ceYrCV881tPMzq7zNePPo7DZs/3cgnCjtjedOj4LM/93QsM
      DfZzs38Gm92S7+UShB2xvenQkpnAvlqOHW/H7gmIoljCnrG9AJhtNO+vZnl5GU1x5XuZBGHH
      bCMAq3RcGWR+fJw1oBQPrU3VeV8wQdgJ2wiAi4NtNWRReLQxwPBk7p52Igi7bRsHwQpmU5qJ
      yRAmKcX4+Jy4IUbYM7Z1Fshsr+RgDfzq9RucfPyEuCVS2DO2tS1r6VVudg+RtTsZHpqgvrz9
      c3s/gCaZeL763+e0za9ZKxFHRZ9P23w+gEZR7WG++MwZZMX0uZ4NaiAx5jyQ0zYTJnFh8PNq
      W9uypCjEF0Z44YUXePtK/xbHAAax8AzvvPUWs8tJEpFFzr9zgWA0WQD3FwmfN9sKgGJys6/G
      j6qqKKaP/xUjE+NG3wynH3ucgBN6+8ZoP9HKSG+/qA4tPHS2tQuUjs/Q1TVBbetBUrHEx75X
      i62xnoxw6Z13qW1uRXF58DiL8NjHyGQNjF2uDp3O5v5+tkxGu9vXblWHzuahOnQmkwZp42hv
      87j0vKyvNNLDWR0aTOZiDh1vYXJ8ALXi9Me+V7FaKPLv42hrDZev3sBmMRNPxoinFEyKhCrt
      bnVo8rChqKrpbl+7VR06YzLlvFyNqpqR5I0AbB5XVlXJ9RpTVTPyLlSH3uZ0aCtKNo5k9VHs
      +/gHI8lWH9Ueg/Pnr1DTfJjG6mIuX7pOoKYek5hEJDxktvwGMAyDdGKB+YiHb/zGk5jM1o9P
      jSRTXn+Q8vqDd15w8XR5/cf9hiDsmi0DMNt3hV9fuMHMYojl1REqGk/y1SePfm6vAwjCZlsG
      oKr1LP+h5QQj/T1EEllcRWViOrSwZ2zzhpgFLl7sQ5ZlJFls/sLesb0LYZJMaGGM/v5+puZC
      4oKWsGds6zSoai/jj/7rf8GQZRTV8rmeCiEIm21rW86mIvzj//kLLlzv5pVXr4vSiMKesb0A
      ZBPIFhfh6SnimrgbQNg7tvegbHs5X/3mlxieWuHg8ZPifgBhz9jWtixJMjVNR6hpyvfiCMLO
      2lYAspk4r7z4E2ajGuUNJ/naU+JCmLA3bD0VQtdJxYNkbE384W+fAUkSZ4GEHSOZNOx1Mzlt
      UzZ/MJVvywDMDVzn1Us3Ca1G+Id/GKBs/3G+8sQR8Q0g7AhJ1rGULOe2TdMH82a3DEDlwdP8
      fl0tvYNJjh4upvPapLgQJuwZ2zgGiPDC//trro8lubi/mEDT4xzJ/3IJwo7YMgCxcJy2R7+A
      py5DTa0fZ1G5mAwn7BlbHs+m4lHCq2nsDoOlpSVWIuLZAMLesWUAiqubePILZ0kujjM6NMrc
      UkQcAwh7xvYekZRcZHYhzb76BojFRQCEPWNbAVCtZZx58gSxxSEkj1tcBxD2jO09H0A2kVpZ
      5sCpp0C2iYNgYc/YXl2gZJAbN/pwLUTIqqW0Nu0TE+K2aclShi7nrqR8iWITz2jOoe3NBrWV
      8+QXz9AzEqb93DFxFfgT+Pva/5TTYly/42zheM5aE7a1O6+lwpx/+zrRtWWGhibF8wGEPeP/
      Ayo6xfyRvqnuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='time_vs_health' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='underemployment' width='192'>
      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
      IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='unempl_educ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unempl_high' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unempl_hist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unempl_reg' width='192'>
      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
      F+tNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='unemployment' width='192'>
      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
      5OnIe24LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='work_health' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVKUlEQVR4nO2de1gU1/2H37YrMZLSVGOImsTEWok2qSgjWWiWi0aIQQWzRKL7JDzVpHgp
      GhE1aVI3eL+ChnohFdJNq9bGbUOJWkBQdpMVZaiXGhIoJSEmQYiSX0kAJZPm98cusNyJilzm
      vM/D8zCzM2fOOXM+c87MnM98v/ftt99+i0CgUr7f3RkQCLoTIQCBqhECEKgaIQCBqhECEKga
      IQCBqhECEKgaIQCBqhECEKgaIQCBqhECEKgaIQCBqhECEKgaIQBBH6Oaw0slJElivvlyh1sL
      AQj6FtU5ZOX4Ex09gTzbSao72FwIQNCnUPJPYpvgy9QALR62k+Qr7W8vBCDoQyj802bl3gnj
      GDT8QTxvzSDL5qSAqnOYYsPQSRKSLog5C+YKAQj6EmfJyQBp7AhgLA/rwHryrOO3atLXRLHv
      +3PZZ5ORrW8zy+2sEICgD1GQi6VWx8NjATR4PexLlSWXAgDysWXfS8S8adzjAuDCLbeAphuz
      KxDcUAqO/YOyr8uI0R5yWlvEsYKFjBkDoOEHP2i6j+gBBH2EUvJsZfivykGWZcffIZZ5lmHL
      KwU8GONZSMZbp6lUQKn5kNLPhAAEfYXyXKyF/kzyd3Va6U7AZE8KrbmU447+Ny8y5NgigrQ+
      TI76M8XA98RnUQRqoeJCMf0G3cePB2ioq7CSMM8o7gEE6uGLo+uITjlHZS1w690EPLtN9AAC
      dSPuAQSqRghAoGqEAASqRghAoGqEAASqRghAoGqEAASqRghAoGqEAASqRghAoGqEAASqRghA
      oGrEbFBBL8aCUYrB2f+FRzTmvZEM72QKQgCCXo4H0ea9RHa2xTdDDIEEqkYIQNAnKTUZkIwW
      qk4lMEsnYbQAVHEqYQ5BOglJ0hEWaxJDIEFvp5BEvURi/WJIPHKcn/3/4mRW7nuclem5jB4A
      5eYVLJbHsjP1Nca5VZG9epYQgKC30949gD+LtkQwQgNQTb4tD1/DFsYN1AADmThnthgCCfow
      I0c6Gn/bCAEIVIIrXr4TsO3dw+lKBZRKslP2iSGQQD246zey/ePnWRGqpbL2Vu4OeFZ8FUKg
      bsQQSKBqhAAEqkYIQKBqhAAEqkYIQKBqhAAEqka8BxCohwoLCa+8yt9Pf8SXX/fjh/f9QvQA
      gt6HxShhMJV+9x3LvmDArA2k5sjIuVnsfPxz0QMIVMTYUKIaFgYwOsBfvAkW9CZKMRn0JBY6
      rXJMf1ZKzLyw/He8+9GX8MPRTP/tJpZNHNLGFb6OquIctr+4SghA0PuwGCWSRpjZWz8HWsln
      c8gyLs4zsX7GPVCUwnORb+Nr+itRo5ruW2oyoE8sBNyZsGiVuAcQ9AGKcrG46Jk74x5cAJdR
      c5gb9DGWEy3vE4ZH7kWWc7FkbueJ0g1CAAI1omHAj0cy+bfRQgCC3ofrbW6UFRXZ4/0qCozS
      4ldnJvlvF6gD6opSSM64Fz+fpjaxs6lJWIu/oEYBqKMiM0vcAwh6IaWpxC7ewvFParlVvwPr
      iw936ia4wpLAKzuP8K/iSmqxvwcQAhCoGjEEEqgaIQCBqhECEKgaIQCBqulwLpAsyzcjHwJB
      tyCeAgl6NG9/9H6Xpi+GQAJVIwQgUDVCAAJVIwQgUDXXIYBSTIb6wAPdhMWIZDBxDeY4gQDo
      TT1Ab2jsFiOSZKQ7rwk3jL5UlnYQnuAbiV8cfea1SV8qSzt0SQ9QdSqBpwN9kCQJXVgs5hKl
      /gcSng7ER5KQfAIJjzvK5fbWOyg1GZBiDkFhInpJanplqvo3b693xH3ymcpqS5V9/eWjxD0V
      hE6yx4MKWphMQbVTeou3Y4oNJ9BHQtLNIjG/ulkp7EO854zrHWXREbbyMGWOoti/TFBCifl5
      pvoYMJXSrJeyYJSmsXR1LOGBPkg+gcxLSuPAyqdbHrPwdeaEOJV/ZToVtHGc9w6z1Gcim/Mb
      c5q/eSJP7ChAafOM9NCy9IDu/MYLoNzMii11LDBbkeVcUhe58lpsMkVA0f4NZI+LJ0eWkXNS
      2TB9KLSzvp7hkXuR40PsMWBlGVmOw8/p9588uY23rblkLP8JqclpfArAUKavOUiWLCPnpjJf
      s4uNb33auFPNALyWvkHmCRu/n/EVpr/n0yojnyIp8wS5Ga8S+J/VrDvUKM2q7LVsKNGTktN2
      mM6BuqW8kXkC26qHkd8+yY9+mUTmCRuvBpez7/BZAGr7exGz5xBWWUbOicf39Csk2Wj9OD8L
      IiIUjmSecjT4fLKPDCF06piOu/OeVpZrDG16I7nhQ6DqfBt5JTnkBb3ptDaEi4DXfSO5tCaO
      5ysfI2DKIwRMeJBBQP821ncKt58yeqQbLsDAQbeDotgbRj+Fc7vnEPPuR3z5tX1Tj/FO18ih
      Hjw4ZAAAAwe5wX9bT37o8PsZoAEGjiMsaAT6f74HoXb5Vd9tYMsyHW5tZ4677x9i3/+WW8Bt
      BKPvH4AGGHbPEL529Iz9XC6R9lIs889VUltfY05ZbXocDd6zIhny1EGyor0J/iCbIyOms78T
      jannlaX76ZqbYM9lHJJl5IY/+xXbNXgdWW+8zJSf1nJqdzT6JxLIV9pefz3kJz2P6Za5HMix
      5yE+5PqL9c03Cv00jdeMIaN+cgNO5GVSVy3nvHY76bkysmwm2qPpFi2OMzycZ3QnyHqnilOZ
      R5GenIr7dzxqjylLN3PDBeDq5Y3nmRS2ptn9mdRVUWzNoxQotByhpP8YpkQuYcP2RYy/eIYP
      ytte3zTh23ArK6LIbgRtZ7xr5+qVWlwH3cXtLgo1H1o5UXxt5bl6tQ6Augtp7D7wOUH+Y68t
      oTa5wpUauGOwOy6aOirO2zhX1tE+rkwKD0F+08j+k4GET3Lt1JF6Zlm6l+sWwKEYCUmy/xlM
      peCuZ/WmAC4lzsZXkpAmhbMusxKA/rV5xEcGo5UktKG7+NKwkGnD2l7fBK+ZLB7/HquCtEiB
      m2ljxN6At+HXDEtbgK/PZKJe/4z+d1xb+d7dPBWdJOE7O5n/zdnNS36da2ydZxjT5uopjQ9C
      q5vJK5m1DBzc8V4a7yeIqLRy9uGJjG+4kJdz4FmJiZtbr52eWJZSk8HpoYb9Zl26iS+XxGzQ
      NrF/hawkSibOr+OtbzZKZTarZ/2OoYlOH38qP8CzzxTwzJtx+DUZZ/TssrSHmA0qaIHFKKEN
      iee/v9rC3IYvnykUHMxguHF5s8YvaA/RAwh6NKIHEAi6ECEAgaoRc4EEPZr/q/2mS9MXPYBA
      1QgBCFSNEIBA1QgBCFSNEIBA1dxgT3AP8An3MEpNhps6t+Wa6Q2W0y5A9ACCm0upCUMP8hoL
      AQhUTZcKwGKUmLZ0NbFhOiTJh8B5SZxzWHZLTQak54ysd3iBdWErOVxvUqWKUwkOv6mkIyzW
      jN1wVD/EquJUwix0La4kzvv5EBgex1GH669NnzIKZdnrnX5z7KOUYK73DPsE8vT67AYPbbue
      YqWM7PVPN+y3+E2nCfEd+ZSNFqpOJTBLJ2E8VsCOJyTmmxtti5fN8/FZepiqJmUu5PU5IU5l
      Xkl6RSfySRXnTLGE6Rx1HJ/7nc9he3WklJgd+0hIuiDmvF5oH2bpEynkEDGShCR1vy+4y98E
      u/38GbZs/a19wWJEmm/CvDfSvjx0Ei/GxfEi2LvGaau5TV7OV0snsjKnPoVaPjm+npmrByPH
      2X1/xcWXGL9kP9YlzQ5WfYKDf/mIH417jIiAKTwSMIEHB0H14aVMbEyQ2k+Os37magbLcdyx
      YwYr2EjasRedEipgx7QVsDGNY1tozHvkhca83z6OyLjFROKIPfv3fKK9hmOKtE87rk+u1GRA
      X+JIo9+d3He3G5rSSvi6lsqTu1h78NHGeLfFxVwav4T99QXzjsc47TmSHvorUYPMvLxjONsz
      Hm/qqFLcGP5Td/r9uxy+/povPzrMSzseJbh+3nOr+fTDYpxI0ggzb1m3NJYv6bucwwm8PaPt
      OrqauZd3/3sfAYZH8df5McnzftDEIZtHYNCXENXM191dXIcANGg08NVX1UC9seJTPi4Zwp1t
      mE8URQGNBg20dHR98w1KP01DhjyXHWJPRHOjn/1yMXLkiNYz7hrMuqxRnMmyYM3ZTXTieqZv
      e4tf2RPk0J6IFtbBgk6U9EZht2ku40DOFO50cQR8dt5g5EhGOBfM1Q9DxDZeOFZE2O1HKI9Y
      jnezgl9OXcXy81r+mP4aowdomgquC3A+h+0xKurPpP4ij+PvHOHImj1suieWg4mh39m62dVc
      xxBoGI9M9CBn7x5OVyqg1PB+ShKH3fzQOkXnVq5eRQGUytMkmbLxmPgIDWavq1cdtskLpO0+
      wOdB/ozFFS9vT86kbCXtgsPCV1WMNa8TfWWhhSMl/RkzJZIlG7azaPxFznxQ3q5Nc5TWj7o/
      bSTl/RoUFGrKPqSsehRavzrMyX/jgj3uJinJGdzr50P73vNhjH7IDWv6ESrqQKkp48NPGgcs
      12LTHBUWwcADu9iQCRFho1r8fsXuQcTdRUNdxXlsnfQgeozxpDAjnfdrFHt9lH7W5ratn8P2
      6ugy+YdPUnXvBGbOW8M24wxul8/xH4DbbsONYj4oqgMUlOv0fl8v13UPMNyQyKvSWVaEapG0
      k1hw7AHW/mEJXk6Xh4/3/5rJPhLakBhyPbeSaHBqQu9uZqpOQvKdTfL/5rD7JT9cAXf9ajYF
      XCJxti+SJDEpfB0OV2X79K8lLz6SYK2EpA1l15cGFk4b1q5NU+O1hD+sfYBjCyahlbQEz3+D
      965o8Fqyi4Xf28sz/hKSfxTHHljLjrktG2BTNHgv2MC0jzcR6isROHsrVqd8X5NN030qT0q5
      WJlMQCuXz2HT5qIvjSdIq2PmK5nUdsZPCbjrf8OLQw7zKz8tPsELebMdMbZ+Dturo/7w6X5e
      CPVHkiT8Y2x4xBrwBhj0GM9Gfp/9kb5IPlGYy3E8GWp8fG4xSjftkWyXGmIsRomkEebGMa4T
      9q46Crm3efRuNnVFpDw3lw9m/4NNwTfaw9sx7Z3Dm8Gf3j/fpemLx6A9mFKTAcl3LpmeW3m5
      Gxq/GhCWSEGPRvQAAkEXIgQgUDXCEino0Qxx69el6YseQKBqhAAEqkYIQKBqhAAEqkYIQFVU
      YTHOwmip6nhTlXDNArAYGz+L7vxn6O4J3l1C37B6Vh2OY63yHEv93LDH/eq6+fj2eGA9vy1c
      swD84hzRX8zReBBCvCMazLXNGWntZFgwSr2/0XWG1hqLxXiDv5Ov5JO0/UOeiJzYoyK0dDc9
      +D2AH3FqiNPZBn5xMjey9Mo/MzlyTwT7O5rQqjK66B5AocRcb7fzIfDpBE45WyGdrX8HTRik
      GA5RSKLePoyyX/ia9gqXj8bxVFCjxW5hcgF2c19Lm+Sxgh08Ic2n0U14GfN8H5Yebjb2VUow
      x4bZLYo+gTydcKrBbqiUZTfYNX0CF+PsbLQYm/ZMTZarzmFyTvP1QgAKX59DiMN26RMYzsr0
      ioa82yPA6u1lcyTUtFeo4lSCIxSspCMs1tRoS7QYkSLWkuIUKvb51JZDj7M5GbiOe6htQ4pz
      qFpdGLHmEpT687X0MA1BZEtNGHyMWJT266/NtFsJg9uddIkAlPwEFh31IjFLRpZzSAo8w9I1
      6Y2VWJzMyn1DWZmeS1x4JHvleELwINpsH0a1OkN66HTWHMxClmVyU+ej2bUR56inxckr2Td0
      Jem5cQSOCSfCM48jRx2Bxi4f5+iZIEKDnDt/hfyERRz1SrSHUs1JIvDMUtakVwNFJC98iQ8C
      d5KVK3MifT2Pd2qafTnmFVHsc12I2WYP+Wp89MdALf29YthzyIosy+TE+3L6lSRsDCdyrz2A
      n0e02T6kbKXw5eYVLJbHsjE1Fzk3lUWu+4hyrs+aWoY6hYp95y/Hm82lr6b8YhU/H93W5b8c
      84ot1C0wY5VlclMX4fpaLMlFMDwgCA/bcd6p9y4fz6AsNARfTXv115SOwuB2J10yBCrKtXAx
      r4wZvlsbV3pc5FLDgj+LtkQ0tf91QD/lHLvnxPDuR19ij3rqgXPUU/wXsSWi3irpztRnQkja
      9hZFEVEMOn6UwtBf4tvkeEXkWi6SVzaDptm8BKUnsHwcRNSc0dgDqQ7AtTN5rc7HlufL4pzJ
      3OkC4MbIe9wABZdLabwUO59zlQ3BQzsM9OdIlHxbHr6GLYwbqAEGMnHObEbobeQTbPfVNg8V
      24JLfH4RNJo2ClGdjy2vhJy8IJoEt70I+D3G9J/tJuudaoKDL3E8o4ygxePRtFd/NJ26Pex6
      wuB2MV12D+AWvpOMF7xbHKAUWnpfOySfpOdN3LLsADlT7sQFC8ZmDu7mPmFXPwMR217gWFEY
      tx8pJ2J5y7yAG+E7M3ihudH2Rj+8uJzKquXn0f4xnddGD0BTasLQlcbdFtzB4LugSFFo+5R7
      suzQHlrYsHEnYPLP2Jb1DtUPXCSjbAoxDfXVRv01wzV4HVmjzpBlsZKzO5rE9dPZ9lZT52B3
      0SVDoFETfgGpO0g6XWn3ktaUcf5EQTvjPlducyujqKgSpVWf6FWu1Loy6K7bcVFq+NB6go7t
      tKMIixjIgV0byCSClnbaUdizmWT3NKNQU3aeEwWXYdhoHnKzkn6kgjqHT/iTZoPbTy98ikId
      FefTyDpXXwwvfCfY2L4pk4o67F7bCxVw5Qo13MFgdxc0dRWct53D2bnrepsbZUVF2CPANi+8
      K16+E7A1eK8ryU7ZR8lEX7w6rIPGNNzvcuPc+0Vt/OyFt+cZUram2f291FFVbKXehu3+6BQ8
      rTYOZmVQpQ9xHLed+mtGp8LgdhNdIgCN9wK2zRvMsZgQtJKELiSanedr6d/mHl7MXDye91YF
      oZUCaRnl0xvDr4eRtsAXn8lRvP5Zfzpnp30SKdcKkwNaufnT4L1gG/MGHyMmRIsk6QiJ3sn5
      2v6g8WbBhml8vCkUXymQ2VutOFuSPSfpubQ7FK1uKi+k9WdkQzBod/Qbk5hdvQO9r4TkH0rc
      0S9g2DTm6kuJD9Kim/kKmbUDcb6l8Jq5mPHvrSJIKxHYSohTd/1Gtjd4r0N5tXo2SS8H8108
      YmP9g6g+/S9ab3fu6FdvIuBSIrN9JSRpEuHrMhvLPOgxpvkeInFnLVMnj+m4/prRmTC4TX3A
      9kfgN+M9Qp92hNUVpfDc3A+Y/Y9NqN5RqOSzOWQtbs5hVXsBWZ8Wdmn6fXQqhP3xou/cTDy3
      viwaP4DGi6jF9/NXU3brjypVyv8DgXLJGhTTu8MAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
