<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='region_data' inline='true' name='federated.0m1qf021ngu4lq199qvkn02knoxn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1pdfkm21soii8n16rlhqy1sggv47'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/region' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[NUTS2_name (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[NUTS2_name]' />
          <map key='[NUTS2_name]' value='[geo_dates.RData].[NUTS2_name]' />
          <map key='[TIME_PERIOD (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (physicians.RData)]' value='[physicians.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (road_accidents.RData)]' value='[road_accidents.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[country_code (geo_dates.RData)]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_code]' value='[nama_10r_2hhinc.RData].[country_code]' />
          <map key='[country_name (geo_dates.RData)]' value='[geo_dates.RData].[country_name]' />
          <map key='[country_name]' value='[nama_10r_2hhinc.RData].[country_name]' />
          <map key='[freq (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[freq]' />
          <map key='[freq (road_accidents.RData)]' value='[road_accidents.RData].[freq]' />
          <map key='[freq]' value='[physicians.RData].[freq]' />
          <map key='[geo (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[geo]' />
          <map key='[geo (physicians.RData)]' value='[physicians.RData].[geo]' />
          <map key='[geo (road_accidents.RData)]' value='[road_accidents.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[rownames (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[rownames]' />
          <map key='[rownames (physicians.RData)]' value='[physicians.RData].[rownames]' />
          <map key='[rownames (road_accidents.RData)]' value='[road_accidents.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[unit (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[unit]' />
          <map key='[unit (road_accidents.RData)]' value='[road_accidents.RData].[unit]' />
          <map key='[unit]' value='[physicians.RData].[unit]' />
          <map key='[values (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[values]' />
          <map key='[values (road_accidents.RData)]' value='[road_accidents.RData].[values]' />
          <map key='[values]' value='[physicians.RData].[values]' />
          <map key='[victim]' value='[road_accidents.RData].[victim]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>victim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[victim]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>victim</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' type='nominal' />
      <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (physicians.RData)' datatype='date' name='[TIME_PERIOD (physicians.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (road accidents.RData)' datatype='date' name='[TIME_PERIOD (road_accidents.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='income' datatype='table' name='[__tableau_internal_object_id__].[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='physicians.RData' datatype='table' name='[__tableau_internal_object_id__].[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='road_accidents.RData' datatype='table' name='[__tableau_internal_object_id__].[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]' role='measure' type='quantitative' />
      <column datatype='string' name='[country_code (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='freq (road accidents.RData)' datatype='string' name='[freq (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='geo (nama 10r 2hhinc.RData)' datatype='string' name='[geo (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='geo (road accidents.RData)' datatype='string' name='[geo (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column caption='rownames (nama 10r 2hhinc.RData)' datatype='integer' name='[rownames (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (road accidents.RData)' datatype='integer' name='[rownames (road_accidents.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='unit (road accidents.RData)' datatype='string' name='[unit (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
      </column>
      <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='values (road accidents.RData)' datatype='real' name='[values (road_accidents.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column caption='Victim' datatype='string' name='[victim]' role='dimension' type='nominal' />
      <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name (geo_dates.RData):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='income' id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
            </properties>
          </object>
          <object caption='physicians.RData' id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
            </properties>
          </object>
          <object caption='road_accidents.RData' id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (nama_10r_2hhinc.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (nama_10r_2hhinc.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (physicians.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (physicians.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (road_accidents.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (road_accidents.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='city data' inline='true' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/city' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[TIME_PERIOD (living_cond.RData)]' value='[living_cond.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[city_code (living_cond.RData)]' value='[living_cond.RData].[city_code]' />
          <map key='[city_code]' value='[geo_dates.RData].[city_code]' />
          <map key='[city_name]' value='[geo_dates.RData].[city_name]' />
          <map key='[country_code]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[freq]' value='[living_cond.RData].[freq]' />
          <map key='[indic_ur]' value='[living_cond.RData].[indic_ur]' />
          <map key='[rownames (living_cond.RData)]' value='[living_cond.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[values]' value='[living_cond.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indic_ur</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indic_ur]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>indic_ur</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TIME PERIOD (living cond.RData)' datatype='date' name='[TIME_PERIOD (living_cond.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='living_cond.RData' datatype='table' name='[__tableau_internal_object_id__].[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]' role='measure' type='quantitative' />
      <column caption='city code (living cond.RData)' datatype='string' name='[city_code (living_cond.RData)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Code' datatype='string' name='[city_code]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
          <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
          <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
          <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
          <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
          <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
          <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
          <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
          <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
          <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
          <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
          <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
          <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
          <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
          <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
          <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
          <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
          <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
          <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
          <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
        </semantic-values>
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
      <column caption='rownames (living cond.RData)' datatype='integer' name='[rownames (living_cond.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_code:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='living_cond.RData' id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[city_code]' />
                <expression op='[city_code (living_cond.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (living_cond.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9' unique-key='true' />
            <second-end-point object-id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='country data' inline='true' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_data' name='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/country' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='satisfaction.RData' table='[satisfaction.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[age (satisfaction.RData)]' value='[satisfaction.RData].[age]' />
          <map key='[age (self_health.RData)]' value='[self_health.RData].[age]' />
          <map key='[age (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[age]' />
          <map key='[age (underemployment.RData)]' value='[underemployment.RData].[age]' />
          <map key='[age]' value='[activities.RData].[age]' />
          <map key='[country_name (satisfaction.RData)]' value='[satisfaction.RData].[country_name]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[deg_urb]' value='[get_together.RData].[deg_urb]' />
          <map key='[duration]' value='[time_health_enhancing.RData].[duration]' />
          <map key='[education]' value='[satisfaction.RData].[education]' />
          <map key='[freq (get_together.RData)]' value='[get_together.RData].[freq]' />
          <map key='[freq (satisfaction.RData)]' value='[satisfaction.RData].[freq]' />
          <map key='[freq (self_health.RData)]' value='[self_health.RData].[freq]' />
          <map key='[freq (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[freq]' />
          <map key='[freq (underemployment.RData)]' value='[underemployment.RData].[freq]' />
          <map key='[freq]' value='[activities.RData].[freq]' />
          <map key='[frequenc (get_together.RData)]' value='[get_together.RData].[frequenc]' />
          <map key='[frequenc]' value='[activities.RData].[frequenc]' />
          <map key='[geo (activities.RData)]' value='[activities.RData].[geo]' />
          <map key='[geo (get_together.RData)]' value='[get_together.RData].[geo]' />
          <map key='[geo (satisfaction.RData)]' value='[satisfaction.RData].[geo]' />
          <map key='[geo (self_health.RData)]' value='[self_health.RData].[geo]' />
          <map key='[geo (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[geo]' />
          <map key='[geo (underemployment.RData)]' value='[underemployment.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[hhtyp]' value='[get_together.RData].[hhtyp]' />
          <map key='[ind_type]' value='[get_together.RData].[ind_type]' />
          <map key='[indicator]' value='[satisfaction.RData].[indicator]' />
          <map key='[isced11 (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[isced11]' />
          <map key='[isced11]' value='[activities.RData].[isced11]' />
          <map key='[lev_satis]' value='[satisfaction.RData].[lev_satis]' />
          <map key='[levels]' value='[self_health.RData].[levels]' />
          <map key='[quantile (self_health.RData)]' value='[self_health.RData].[quantile]' />
          <map key='[quantile]' value='[get_together.RData].[quantile]' />
          <map key='[rownames (activities.RData)]' value='[activities.RData].[rownames]' />
          <map key='[rownames (get_together.RData)]' value='[get_together.RData].[rownames]' />
          <map key='[rownames (satisfaction.RData)]' value='[satisfaction.RData].[rownames]' />
          <map key='[rownames (self_health.RData)]' value='[self_health.RData].[rownames]' />
          <map key='[rownames (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[rownames]' />
          <map key='[rownames (underemployment.RData)]' value='[underemployment.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[sex (satisfaction.RData)]' value='[satisfaction.RData].[sex]' />
          <map key='[sex (self_health.RData)]' value='[self_health.RData].[sex]' />
          <map key='[sex (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[sex]' />
          <map key='[sex (underemployment.RData)]' value='[underemployment.RData].[sex]' />
          <map key='[sex]' value='[activities.RData].[sex]' />
          <map key='[time (activities.RData)]' value='[activities.RData].[time]' />
          <map key='[time (get_together.RData)]' value='[get_together.RData].[time]' />
          <map key='[time (satisfaction.RData)]' value='[satisfaction.RData].[time]' />
          <map key='[time (self_health.RData)]' value='[self_health.RData].[time]' />
          <map key='[time (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[time]' />
          <map key='[time (underemployment.RData)]' value='[underemployment.RData].[time]' />
          <map key='[time]' value='[geo_dates.RData].[time]' />
          <map key='[unit (get_together.RData)]' value='[get_together.RData].[unit]' />
          <map key='[unit (satisfaction.RData)]' value='[satisfaction.RData].[unit]' />
          <map key='[unit (self_health.RData)]' value='[self_health.RData].[unit]' />
          <map key='[unit (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[unit]' />
          <map key='[unit (underemployment.RData)]' value='[underemployment.RData].[unit]' />
          <map key='[unit]' value='[activities.RData].[unit]' />
          <map key='[values (get_together.RData)]' value='[get_together.RData].[values]' />
          <map key='[values (satisfaction.RData)]' value='[satisfaction.RData].[values]' />
          <map key='[values (self_health.RData)]' value='[self_health.RData].[values]' />
          <map key='[values (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[values]' />
          <map key='[values (underemployment.RData)]' value='[underemployment.RData].[values]' />
          <map key='[values]' value='[activities.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequenc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[frequenc]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>frequenc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>isced11</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequenc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[frequenc (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>frequenc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ind_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ind_type]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>ind_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deg_urb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deg_urb]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>deg_urb</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hhtyp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hhtyp]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>hhtyp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quantile]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>education</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>indicator</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lev_satis</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lev_satis]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>lev_satis</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quantile (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>levels</remote-name>
            <remote-type>129</remote-type>
            <local-name>[levels]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>levels</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>duration</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11 (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>isced11</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([values (self_health.RData)]) / TOTAL(SUM([values (self_health.RData)]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
      </column>
      <column caption='Sort time health' datatype='real' name='[Calculation_-8711650466664865789]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [duration]=&quot;300 minutes or over&quot;&#13;&#10;then [values (time_health_enhancing.RData)]&#13;&#10;else null       &#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='activities.RData' datatype='table' name='[__tableau_internal_object_id__].[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='get_together.RData' datatype='table' name='[__tableau_internal_object_id__].[get_together.RData_32250D35A0C042CC918EFD895D987719]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='satisfaction.RData' datatype='table' name='[__tableau_internal_object_id__].[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='self_health.RData' datatype='table' name='[__tableau_internal_object_id__].[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_health_enhancing.RData' datatype='table' name='[__tableau_internal_object_id__].[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='underemployment.RData' datatype='table' name='[__tableau_internal_object_id__].[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]' role='measure' type='quantitative' />
      <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='age (time health enhancing.RData)' datatype='string' name='[age (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='country name (satisfaction.RData)' datatype='string' name='[country_name (satisfaction.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deg Urb' datatype='string' name='[deg_urb]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
      <column caption='freq (get together.RData)' datatype='string' name='[freq (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='freq (time health enhancing.RData)' datatype='string' name='[freq (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='frequenc (get together.RData)' datatype='string' name='[frequenc (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
      <column caption='geo (get together.RData)' datatype='string' name='[geo (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='geo (self health.RData)' datatype='string' name='[geo (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='geo (time health enhancing.RData)' datatype='string' name='[geo (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' type='nominal' />
      <column caption='Hhtyp' datatype='string' name='[hhtyp]' role='dimension' type='nominal' />
      <column caption='Ind Type' datatype='string' name='[ind_type]' role='dimension' type='nominal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='isced11 (time health enhancing.RData)' datatype='string' name='[isced11 (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Isced11' datatype='string' name='[isced11]' role='dimension' type='nominal' />
      <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
      <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
      <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Quantile' datatype='string' name='[quantile]' role='dimension' type='nominal' />
      <column caption='rownames (get together.RData)' datatype='integer' name='[rownames (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (self health.RData)' datatype='integer' name='[rownames (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (time health enhancing.RData)' datatype='integer' name='[rownames (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='sex (time health enhancing.RData)' datatype='string' name='[sex (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='time (get together.RData)' datatype='date' name='[time (get_together.RData)]' role='dimension' type='ordinal' />
      <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
      <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
      <column caption='unit (get together.RData)' datatype='string' name='[unit (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='unit (time health enhancing.RData)' datatype='string' name='[unit (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='values (get together.RData)' datatype='real' name='[values (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
      <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
      <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:levels:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Very good&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Fair&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Very good or good&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Very bad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bad or very bad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:duration:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Zero minutes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:lev_satis:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MED&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='activities.RData' id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
            </properties>
          </object>
          <object caption='geo_dates.RData' id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='get_together.RData' id='get_together.RData_32250D35A0C042CC918EFD895D987719'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
            </properties>
          </object>
          <object caption='satisfaction.RData' id='satisfaction.RData_F091EC82533343EF8928718D907A4B8E'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='satisfaction.RData' table='[satisfaction.RData]' type='table' />
            </properties>
          </object>
          <object caption='self_health.RData' id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
            </properties>
          </object>
          <object caption='time_health_enhancing.RData' id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
            </properties>
          </object>
          <object caption='underemployment.RData' id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (activities.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (activities.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (get_together.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (get_together.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='get_together.RData_32250D35A0C042CC918EFD895D987719' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (satisfaction.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (satisfaction.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='satisfaction.RData_F091EC82533343EF8928718D907A4B8E' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (self_health.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (self_health.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (time_health_enhancing.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (time_health_enhancing.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (underemployment.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (underemployment.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='activities'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='None' name='[none:age:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[frequenc]' derivation='None' name='[none:frequenc:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex]' derivation='None' name='[none:sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit]' derivation='None' name='[none:unit:nk]' pivot='key' type='nominal' />
            <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (activities.RData)]' role='dimension' type='ordinal' />
            <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[time (activities.RData)]' derivation='Year' name='[yr:time (activities.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]'>
            <groupfilter function='member' level='[none:age:nk]' member='&quot;From 16 to 24 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]'>
            <groupfilter function='member' level='[none:frequenc:nk]' member='&quot;At least once&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]'>
            <groupfilter function='member' level='[none:sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit:nk]' />
              <groupfilter function='member' level='[none:unit:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]'>
            <groupfilter function='member' level='[yr:time (activities.RData):ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' />
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{43001160-6874-4204-824A-001E443F5538}' />
    </worksheet>
    <worksheet name='city data'>
      <table>
        <view>
          <datasources>
            <datasource caption='city data' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wyeh3p1rd106b1g75pnn0q7e2uf'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
                <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
                <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
                <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
                <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
                <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
                <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
                <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
                <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
                <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
                <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
                <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
                <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
                <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
                <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
                <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
                <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
                <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
                <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
                <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[indic_ur]' derivation='None' name='[none:indic_ur:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]'>
            <groupfilter function='member' level='[none:indic_ur:nk]' member='&quot;Number of murders and violent deaths&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]' field-type='quantitative' max='4207445.3698918596' min='-1285432.8226952429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]' field-type='quantitative' max='7704729.0012606503' min='4285024.9978328897' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' />
              <size column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]</rows>
        <cols>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{79C0A39F-02CC-4F34-84B1-586ECDD54936}' />
    </worksheet>
    <worksheet name='income'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[NUTS2_name (nama_10r_2hhinc.RData)]' derivation='None' name='[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (nama_10r_2hhinc.RData)]' derivation='None' name='[none:freq (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:freq (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD327D37-FF64-4260-8EDA-774862904D4E}' />
    </worksheet>
    <worksheet name='income low'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (nama_10r_2hhinc.RData)]' derivation='None' name='[none:unit (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466649944059]' derivation='User' name='[usr:Calculation_-8711650466649944059:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
              </table-calc>
            </column-instance>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' using='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' />
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:unit (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:5]' included-values='in-range'>
            <min>221</min>
            <max>241</max>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]</cols>
      </table>
      <simple-id uuid='{BC01C4D5-D8AD-4175-B81A-F641FC9D25C6}' />
    </worksheet>
    <worksheet name='income top'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Avg' name='[avg:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (nama_10r_2hhinc.RData)]' derivation='None' name='[none:unit (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466649944059]' derivation='User' name='[usr:Calculation_-8711650466649944059:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[NUTS2_name]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
              </table-calc>
            </column-instance>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' using='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (nama_10r_2hhinc.RData):qk]' />
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:unit (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:7]' included-values='in-range'>
            <min>1</min>
            <max>20</max>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_-8711650466649944059:qk:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]</cols>
      </table>
      <simple-id uuid='{FD237179-2F6C-4080-9175-6627455B7A83}' />
    </worksheet>
    <worksheet name='income_hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Count' name='[cnt:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (nama 10r 2hhinc.RData) (bin)]' derivation='None' name='[none:values (nama 10r 2hhinc.RData) (bin):qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
            </column>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (nama_10r_2hhinc.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (nama 10r 2hhinc.RData) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{58DAA26C-E44E-4FA6-920D-DB4B166C3217}' />
    </worksheet>
    <worksheet name='physicians'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[freq]' derivation='None' name='[none:freq:nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit]' derivation='None' name='[none:unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq:nk]' />
              <groupfilter function='member' level='[none:freq:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:unit:nk]' member='&quot;Inhabitants per ...&quot;' />
                <groupfilter function='member' level='[none:unit:nk]' member='&quot;Number&quot;' />
                <groupfilter function='member' level='[none:unit:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='8998358.2275716737' min='-8848598.1726668309' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='11425108.527582187' min='3979752.4572063312' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5F9B334B-D507-4D05-BC37-F45069A6A85F}' />
    </worksheet>
    <worksheet name='satisfaction_levels'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (satisfaction.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (satisfaction.RData)]' derivation='Avg' name='[avg:values (satisfaction.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
            <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
            <column-instance column='[age (satisfaction.RData)]' derivation='None' name='[none:age (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (satisfaction.RData)]' derivation='None' name='[none:sex (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (satisfaction.RData)]' derivation='None' name='[none:unit (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (satisfaction.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (satisfaction.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (satisfaction.RData)]' derivation='Year' name='[yr:time (satisfaction.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:age (satisfaction.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Slovenia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]'>
            <groupfilter function='member' level='[none:education:nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:sex (satisfaction.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:unit (satisfaction.RData):nk]' member='&quot;PC&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]'>
            <groupfilter function='member' level='[yr:time (satisfaction.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]</cols>
      </table>
      <simple-id uuid='{6D88F233-BE5E-4467-9587-825310A1661C}' />
    </worksheet>
    <worksheet name='satisfaction_rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (satisfaction.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (satisfaction.RData)]' derivation='Avg' name='[avg:values (satisfaction.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
            <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
            <column-instance column='[age (satisfaction.RData)]' derivation='None' name='[none:age (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (satisfaction.RData)]' derivation='None' name='[none:sex (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (satisfaction.RData)]' derivation='None' name='[none:unit (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (satisfaction.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (satisfaction.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (satisfaction.RData)]' derivation='Year' name='[yr:time (satisfaction.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:age (satisfaction.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]'>
            <groupfilter function='member' level='[none:education:nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]'>
            <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Job satisfaction&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]'>
            <groupfilter function='member' level='[none:lev_satis:nk]' member='%null%' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:sex (satisfaction.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:unit (satisfaction.RData):nk]' member='&quot;RTG&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]'>
            <groupfilter function='member' level='[yr:time (satisfaction.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F963CEA9-8ADC-42FE-B60B-FEAAF82A05DD}' />
    </worksheet>
    <worksheet name='self_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
            </column>
            <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[age (self_health.RData)]' derivation='None' name='[none:age (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (self_health.RData)]' derivation='None' name='[none:freq (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (self_health.RData)]' derivation='None' name='[none:sex (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (self_health.RData)]' derivation='None' name='[none:unit (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8183884885348159488]' derivation='Sum' name='[sum:Calculation_-8183884885348159488:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:age (self_health.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:freq (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:levels:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Bad or very bad&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Very bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Fair&quot;</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Very good&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:sex (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:unit (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:time:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]</cols>
      </table>
      <simple-id uuid='{9C214ACD-B248-458D-BD97-15AB6338C325}' />
    </worksheet>
    <worksheet name='test'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
            </column>
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-8183884885348159488]' derivation='Sum' name='[sum:Calculation_-8183884885348159488:qk]' pivot='key' type='quantitative' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]</cols>
      </table>
      <simple-id uuid='{222E04EC-99BF-437F-9E1C-B4DA48D45B41}' />
    </worksheet>
    <worksheet name='time_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Sort time health' datatype='real' name='[Calculation_-8711650466664865789]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [duration]=&quot;300 minutes or over&quot;&#13;&#10;then [values (time_health_enhancing.RData)]&#13;&#10;else null       &#13;&#10;END' />
            </column>
            <column caption='age (time health enhancing.RData)' datatype='string' name='[age (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466664865789]' derivation='Avg' name='[avg:Calculation_-8711650466664865789:qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column caption='freq (time health enhancing.RData)' datatype='string' name='[freq (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column caption='isced11 (time health enhancing.RData)' datatype='string' name='[isced11 (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column-instance column='[age (time_health_enhancing.RData)]' derivation='None' name='[none:age (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (time_health_enhancing.RData)]' derivation='None' name='[none:freq (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[isced11 (time_health_enhancing.RData)]' derivation='None' name='[none:isced11 (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (time_health_enhancing.RData)]' derivation='None' name='[none:sex (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (time_health_enhancing.RData)]' derivation='None' name='[none:unit (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column caption='sex (time health enhancing.RData)' datatype='string' name='[sex (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='unit (time health enhancing.RData)' datatype='string' name='[unit (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]'>
            <groupfilter function='member' level='[none:age (time_health_enhancing.RData):nk]' member='&quot;18 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:Calculation_-8711650466664865789:qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:freq (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]'>
            <groupfilter function='member' level='[none:isced11 (time_health_enhancing.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]'>
            <groupfilter function='member' level='[none:sex (time_health_enhancing.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:unit (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:time:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</cols>
      </table>
      <simple-id uuid='{7A7FEDCE-33E2-4947-BA42-34B214407AAD}' />
    </worksheet>
    <worksheet name='underemployment'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (underemployment.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (underemployment.RData)]' derivation='Avg' name='[avg:values (underemployment.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[age (underemployment.RData)]' derivation='None' name='[none:age (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (underemployment.RData)]' derivation='None' name='[none:sex (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (underemployment.RData)]' derivation='None' name='[none:unit (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (underemployment.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (underemployment.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (underemployment.RData)]' derivation='Year' name='[yr:time (underemployment.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (underemployment.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:age (underemployment.RData):nk]' />
              <groupfilter function='member' level='[none:age (underemployment.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Cyprus&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Denmark&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:sex (underemployment.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:unit (underemployment.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]' value='51' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</cols>
      </table>
      <simple-id uuid='{18219D9A-37AF-4FED-BAC7-A21FF9840372}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='health'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
        <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
        <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='physicians' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='self_health' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='time_health' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9375' id='8' mode='slider' name='physicians' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='physicians' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type-v2='color' w='16000' x='83200' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='12' name='self_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type-v2='color' w='16000' x='83200' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='14' name='time_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' type-v2='color' w='16000' x='83200' y='34250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='11' mode='slider' name='self_health' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type-v2='filter' w='16000' x='83200' y='47500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='8' mode='slider' name='physicians' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='physicians' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='physicians' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type-v2='color' w='16000' x='83200' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='11' mode='slider' name='self_health' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type-v2='filter' w='16000' x='83200' y='47500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='self_health' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='12' name='self_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type-v2='color' w='16000' x='83200' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='time_health' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='14' name='time_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' type-v2='color' w='16000' x='83200' y='34250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E88EA626-18DD-4F00-8F86-D29875329578}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='income_das'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
        <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
        <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
        <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='income' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='income low' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='income top' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='income_hist' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9375' id='8' mode='slider' name='income' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='income' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type-v2='color' w='16000' x='83200' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='11' name='income low' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='18500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='14' mode='slider' name='income_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='34250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='income top' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='8' mode='slider' name='income' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='income' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='income' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type-v2='color' w='16000' x='83200' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='income low' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='11' name='income low' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='14' mode='slider' name='income_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16000' x='83200' y='34250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='income_hist' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FD94A390-07AB-46B9-8117-DA64092ACAFD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='satisfaction'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
        <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='satisfaction_rating' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='satisfaction_levels' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='8' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type-v2='filter' w='16000' x='83200' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='satisfaction_rating' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type-v2='color' w='16000' x='83200' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='12' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='22125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='13' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='28625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='14' name='satisfaction_levels' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' type-v2='color' w='16000' x='83200' y='35125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='12' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='22125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='13' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='28625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='satisfaction_levels' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='14' name='satisfaction_levels' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' type-v2='color' w='16000' x='83200' y='35125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type-v2='filter' w='16000' x='83200' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='satisfaction_rating' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='satisfaction_rating' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type-v2='color' w='16000' x='83200' y='14000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BC40F8D7-5D09-4CC7-B3E1-8F39BAB9A238}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='physicians' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB83FB30-D3CA-483A-93C5-872FAF34BFEC}' />
    </window>
    <window class='worksheet' name='self_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16EC6DDA-2081-4A71-A80E-CFDC401479A4}' />
    </window>
    <window class='worksheet' name='time_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86B29200-FAF7-4875-B1C6-C589E02E7445}' />
    </window>
    <window class='dashboard' name='health' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='physicians'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='self_health'>
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='time_health'>
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8B0EEA34-BB74-49BB-8576-CA9AE8ED22C5}' />
    </window>
    <window class='worksheet' name='city data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]' type='filter' />
            <card mode='slider' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{50541DAF-8670-4F43-B99B-D6104843A61A}' />
    </window>
    <window class='worksheet' name='activities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C47DEE94-88D5-4C69-B281-3AC50BE52E5D}' />
    </window>
    <window class='worksheet' name='income' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4841B069-481F-4F62-B292-C6C01A915389}' />
    </window>
    <window class='worksheet' name='income low' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BC69202-EA07-4058-95B8-BCEDCBBDBE5C}' />
    </window>
    <window class='worksheet' name='income top' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{023B726F-39B3-4B6A-8772-38B75F46E096}' />
    </window>
    <window class='worksheet' name='income_hist' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8A0AFD1-869C-475C-B7FE-C0F84F6C07F6}' />
    </window>
    <window class='dashboard' name='income_das'>
      <viewpoints>
        <viewpoint name='income'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='income low'>
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='income top' />
        <viewpoint name='income_hist'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{517E9779-C6B4-4958-8179-44A408FAF19A}' />
    </window>
    <window class='worksheet' name='underemployment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{448FD1A7-4BE6-4A85-A8E3-004BEE1C9989}' />
    </window>
    <window class='worksheet' name='test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EC8B3AC-78A2-4E00-8A9D-2DBC078373BA}' />
    </window>
    <window class='worksheet' name='satisfaction_levels' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A806F614-E9DE-430D-BE73-72EFD0AD8B95}' />
    </window>
    <window class='worksheet' name='satisfaction_rating' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2E72282-4F69-46BD-AA2D-4D13B8C4771F}' />
    </window>
    <window class='dashboard' maximized='true' name='satisfaction' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='satisfaction_levels'>
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='satisfaction_rating'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{52BF987B-6119-4FE7-81D0-828C5DD9FCC2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='activities' width='192'>
      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
      nN25VlY0/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='city data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income low' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WXMkV5ag9/kW+4oI7GsiM7HlTrK4VHV3zUyPNDOSzYPMZJp/oSc96Qfo
      B8j0Lj1opBlJprZpk1qj7lZ1F5ncck8k9h0ILAHEvvrurgeguppkJplMBhxAhn8PTCMCwLn3
      wo+fe8859xzBdV0XH58uRbzoAfj4XCS+Avh0Nb4C+HQ1vgL4dDW+Avh0Nb4C+HQ1vgL4dDW+
      Avh0Nb4C+HQ1770CuK6L18Hui5AJ4DiOp/Leh7WVO/abLjG6aSGIkmfybNsGQUASvX2/mKaJ
      oiieyXMcF8dxkGVv11YQBMQOrW1XKMDD7ToHDeuih+FzCbmSW6C1pSUMx2VjZQnD/qE5rBSK
      +I+7z9twJS1AIipTqTTQXIna0RYbuTwj49c52Nkg0TfEwdIrEpOzfHxr6qKH6nPJuZIWIJtJ
      s7fxikh6hNXlRXTTQdMtgopMs6EzeXOKu3M3L3qYPleAK6kAcixDPJJguD/KrTt3UWSZaCyM
      LInEEwnSqRBLSxsXPUyfK4Dwvl+IcV2XFwd1yqp3LsI/rKggeCbyTK6L4LFQr2V2Wl5XKIBt
      28iyd8cd27YBkCTv3IMAhmEQCAQ8k+c4zpkb1Lu1tSwLURR9N+jPoV06wTE1z+S5jgMICKK3
      b2Pbtr1VOtfFcVxEybudtOM4CILQMSvwRgXQWi3kSJR2tUIklcZQ24QjEd5OrEujXicSSyCd
      PQSqqhIOhzsy6O9Isi10yyEUfPObr7K7hlo86rhsn6vPG1VXLe5w1DBZePYVxbrB9s4Opq6h
      ajqO42AaBoZpoWkqmq6jqiqOa3J0eIKlaxweHeO4LpraxjAt9vb3cGwLx3HQNRXDPPPUu6f/
      r2k6alvFPvtc0w0s06DVamFaFrbtYFsWtm1jGDqWZdJutzHVFoeFEpZlUTs+pGW5aKqKYdm8
      13s7n47wRgsQ7R0gvzFPrH+adnEVITDE8pPf83S9yn/yL3/N1tImYyMj5EpHaA2deCLExI05
      To4rHO4u4do2a4EI60+/ZuZXv0WrFngxbzAyGGdt8xhRFBnoSxKNyCws57GsJplYlPS1aQ7n
      P2evqvDP/skHvHr2nMk7s5iNKAEtjxWWKLVseoQ2y3mVP/vkHrnNZQzDIVgrIKPz8G8fEsxO
      8l/8p7/xci19riBvVAAlGOPo8IT7f3KThd9/wcw/v872cYrZYQXVgeuzd0mLJoG+HtTjMpmB
      CLp6eviLZwaZ6g+z3IgyO3OT/NEhvfE4pmFhmSaxdC9uu0iqd5ioUGPk+hyCccx4Nk2u1UaJ
      DzEuNWi02vSNTZONR1g/KGE1a/SMDnL3/g3c6gkNdYF8WSOdTqDpOkEXDE1nYuYevdmMZ4vo
      c3V5owIIUoAHH39MIhLn1qef0BMII90YRjVlMpk0oiAi45IVBZxAGDkgEg2LxGJRJAlQRMaC
      AhUrwa3RASIBCAguuisjcIQ8NEdPIgqOwqgiIrgBFEVmJApRHATlBrJgINgtkFIMDWqIgVsk
      k1GCooAVCpEevMHIcB8ufTiGBvQRjIUJsYcQiXi3ij5Xlq5wgzZODnF01TOZztmSih775L32
      Av0hNblTLsm3odNeoK5QAD8OcD74cYArQnlrGaNR9Uye67qn7mKvo7KOg+DpHQQX1+UCIsHA
      Wzrkf4pLowD7m4vs5muMT91mpDfxnc+qhSKyAkYgQU/ku284x9CoqiY9yTimpiIEwsjfewbU
      asmPA/i8lkuTDNd2ZD779FcUDnao5Hd5Nr+C6bjsrb/i26cLtOtlqq0WK/NPWd3JozWKPHr0
      lHqrTbXRpFQsUDk+RnMsVuafkzup+XEAn5/k0iiAXjvhq6+/IRhNsnVU5VpfhM2lbym6g0yN
      DwDgWCbNtsrGwkv2D46wRQHTsll7/iUVM0S7XOVob4WtfInl5RXe79ONTye4NAoQSQ/ym9/8
      KbPXh5HMBvOrO8R7hqjsvWJzv4AgSriWTqutE46ECEZjtEpHVJoWU/c+onW8gyNIRBNJgrJM
      tjfboV2iz/tMV3iB9h7/3j8D+LyWrlAAU9fwMjHTth0EAU/94wCmaaEo3vk1XPe0KoSX7t7T
      qhAiYof+oJfGC3SeiLLiqa9auKA4gCMYyB7HAQSP4wBcmTiAa7KwsM7s7TmkC96MHz7/knY3
      bIFcOuUev7wyOyzvXBTAdSwWnj+hpglUmhrZeOgfPjO1Fg3NpScVA8Bq12lLERLBPw5lf2eH
      gYmJtxqcrTY5rKuM9vfSKB4jpfuJfO/F67ouXeMSuohpei2zg/LOxwK4LoZpk+kfI+FWOSjH
      OdnZ5MZYH01HBEFhY/EpZVUmIdRYq0l8MjPO+tYOPUPXCJs6R7ltkvEwK6uH9Pb3cLCzgZIa
      YXggS0TUaTba7B2XmZ2+id6us7mtE3NNQtEGzxaXCKaGmLs+ei7T83l/OJ9Tmihz694DYrQ4
      aEF+5QUB2WR+r4jiWLTaRV7N76C1q6R6x7lz/wGlQoEHH3+CWj2hWTlk67BONGChJEcZHx1m
      ePQad2YnqRXyHBVqRMMyrq3RaOtsLL7EDcVRazWO9jfJl5tUq96lPvhcXc7JAtjsrC1R0QTm
      hm5gpI4ZHLuOs71PLBbFliNMTQ9x0nCIpZNsLS5y89owLx8/IjM8SU9wgGHJodR0GehL0C4f
      sLmTw5CiDEYscsoYstxElBTC4TAf/Pqf0q4UCKbS9AwkqZ60CMfj5zI1n/eLC3SDOmxt55i8
      Nv72P2IbrGzuMXXz+lunGruuS37pGXq19I7j/Pm4nCXDeXwi9b4sint2JvUwGa7Da9sVcQA/
      Hfp88NOhrwiH+/uo7ZZn8pyzsiidCta8LZZle1qq3D0riyJ5WBbFPrsQ06nLRp4pgGPplCp1
      IrEk0XAA17XRdBtJdJGVAKIgoDbrtDSLZDqN8qbggWvT1iwi4eDrPkRTNQLBIKZlEwyc1sr/
      +7/9a1YWF89vcj5XFs9U1yhusZwrs/jyGTXNRm/VKNda7GyuohqnZQt31lY4Lhzy8tUqzhs2
      ZmqtSKmpf+dr+/s5HPf0Qsjh0RGOpbK0unPOM/J5H/DMAgiiyNjkNGl7j3Jum2dPn+DEB7kz
      mUZv1yiXbYLRFGNTN9lanufl03lufXSTlRc5tPoOLdVl8sFHrHz992ihEYzhEAe1NoFgiurR
      Gic1A9FqMDsUZePYu+2Oz9XGMwvguqBrbQ5zeUIBg/DgFHdvjp16EUSJgCLjOBatRpla20UW
      LBqVEm3TJd0/zmcPZmmpVTKD00QdHVuJ8/Fv/pRMPMD45BQz10dxLJNKpYr1JvPh4/M9PLMA
      cryf1soKA2MzDGbjGPoiqqwwPDBOJJpAlgREvcL29hFzd+8gtItsHlW5eWOIgAyKIjEWFzho
      btA/codUPIQCDAwNIdpt9g6OGRvqo1DTGO1N4qaiXk3N5wrTFW7Q+efPKJc8jAN0SXFcvyzK
      FcCPA5wffhzgilDNbWA1G57Jc10HBMHTCCmcPpBevo1dziyA4KEFcM8swPtWFgWgUqmQTqf/
      0VcsKhWVdPq7eT3FkwI9fb2IgGPqNHSLZCyKY1sgyj+4/dUq5P0rkT6v5dJcigconpxw2lug
      gWXotNQmawsLbOXyOJbO5toqlaZG/uAQrV1jaWmVVqtNqVqnVq1S3M/Rsi12N9c4qTT9sig+
      P8mlsgCn2Gxv7nJtPEu+oRKIxKGyy6PjHMcHh0QLGgMRONnb4rhi0t+XYX3+W+x7v0Up12ig
      Mb+whhwt8J//+W/8yhA+P8qlsgAH28s8ebWB1S7x7MUiugO1wiEHZYNMMkoy3cvIYBaAaCqN
      VTviuKozOTNH42Qfy4FAKEwymWZsZNB/+H1+kkvlBbJtCxcBUTgNnImiiOPYIIiIgoBj2wii
      yB9KQ9r2P0rE+ketGf/4MyLgl0XxeTOXSgHOA9d10ZoNBNe7NqmnvmoQPPSOwKmL0EuX5Gkc
      wEEUvXP3Oo59FgfozNp2hQL4cYDzwY8DvCN764vER2ZIh715QP7i3/87NtZWPZF1kZyWKvda
      KN6XYukgnivA7vJz9spthiMV0sPZN35fLrfP6OjIP/qKyeMvHjH369/QPFwnnJ1g/cWXDE/d
      RzaaiIl+Svldbl6/Adjs544ZHh0CQFXbNOr1852Yz5XEcwUwLRgYHiYZVVh6/hg70ks2qLO0
      vsfM/Q842lwlOXwDp92mdLSHnBomGZZQTw6QM2kKx1WEdpP63jZ7JzUywzUO93IMXo/QbDbR
      GiXmF5ZRhcQ/KICPz5vwXAEEQUSSZSQRDNPCVNukRkcZt0NEaKMZJoXVTQZiOq8qaT4KBXi0
      WiVqHFOsaZTqFjfTkB4Y514wgF4qc/eTT1l59QpJEjg+zjN9/1fkd/e9nprPFcRzBVBkl93d
      XdyxSRRFxgC2luYpqC6yMoYoyWSzabLZOBOSQYMkH9/rZWs7xJ//apztzS1CQVBkkXA4TCYM
      z7/9hr6RG8hOm1RUZuHZYyIp/+3v89N0hRfo//z3/46t9TUPZQLCBZTp9Lgsinv2Hy8P3p1e
      265QAN8Nej74btArQkO3sXXv9Py0LAqIonfBNzgri2Kansn7Y38A79bWtm1EsXOBsMuvAK6L
      aZq4gogiy+9kbp/uNzloWJ0fm8+V51Ilw72OVjXP48dPWN3c43Xv03a7QqWieT4un/eDS28B
      KuUSMw8+pScisvHqW5Z38szM3GP/cAeEIJmYxX7eYe7WIHu7JeI9Kaauj7Ozecjc7RsXPXyf
      S86lV4BQMEC5XCUihDnIF5mYvIEi2EzM3kNqnRCMx0j1RgkKRebufUglv4ZpaNRb7Yseus8V
      4NJvgTLD1xHqOTYPijx4cJ9mvUmsJ0smHiGd6ScV76Gc30CK9xIPy4wND7GxvsXgyOBFD93n
      CtAVbtDV4yZ1w0MvkHtawtvbUuWnhWMlLy/Fu5yVRfFunqdrK3Qs9tAVCuDHAc4HPw5wRdgp
      azS8c4+flkWhc8Wb3hbHsRFFwzN5F1EYy3XOSs5ctfLoP8bB3h79o2M0KxUSPenXHkxsrYUm
      BokGZCrVKqlUikatQiSeQv4JE7xT0f04gM9ruRSH4KO9Fbb2i+zv7mGaGvu5fVTDQlPbFIsV
      1GaN7ZVlTpqnb7fKUY6mbpLLHWGbKvu5A0zbppA/oFip8uyrr9g5LnZNZ1Sfd+dSWIBE7wjt
      0iGiC+vLi0QSaZaWV3DqJfpvTJPbOSCugN4s8fXWFrMjCU6OD5ECMZYefc7qQZFrUw8oHmxz
      484DAE+rlflcXS7HUyJITI+kWNsvIYsCjUYDRIlk3yijAz04pkmrrRGIZfjso9ukerPkFhZJ
      j4wQjCaZvfUBY8N9TIz2k9s9IJkI0WipFz0rnyvApfACmaaJosi02yqhoEKj0SYSj4PjICsy
      ptZGNWyi0SiydFrqRFU1QuEwjmXQaLaJRGMYagsxECYgubR1i3g0Crj8f2tl/wzg81ouhQKc
      J67rUmzqWK6HvuouaZLnuC6u103ybAdB7FyTvK5QAD8OcD74cYArwsnKc/RK0TN5F1UpxPtG
      2X9oXO11o+zOyfNIATSePHyCisSdDz8iFVa+8+nR4SFw2u7o507N1tsUWzr9PWnUehUxmiL4
      vRev2W6hN6q/YPw+7yseKYBNvPcadzI6q4clctVdlJ5RxrNB5hdWcQJJsjGZ8skRgXCE1YVF
      esamSAQsSsUyoVCQfL7A5K27NA82KBkKt6fHWJqfp6dvFFt0sTUd2dSJhEKszb8i0jvB5HCv
      N9PzubJ4dno53FriyXqRJCUiQ3OIjUMWN4+496tP6InJ1E52WMlVUOwWbdNhaWWFk8McvaM3
      aKs6H350h8OtLWrNFvmDLVaeLTJ4+yMGMxHWXnxNW4rTLlc42FvnoNQgl8t5NTWfK4xHCiAy
      OXeP33z2MQP9A+TXn1E2QwwlRB59+xjVlukbm2E8JVKstXGQSMajxNJ9pKMBzFaZb755SqK3
      F8u2icYS9I32s/7kGw5Kbe588lvMwg5iKEymt4+QLJFIJr2Zms+V5kp4gU5OTujr63unn3Vd
      l9zTh6glD8uj/2FFu6FOp9cyOyzvSijAL8F3g54fvhv0qmC2wfKwRIntnL6lPEwTBhBMCxwP
      /6SuC44DlneKLtinzU9+0AnxHekOBVj9S6h4VxnO2/f+H1F++ls6ioj3yWSdXtt3Gv/u/CN+
      9/ALvnq69E6dGDc21l+bqnyyv05Vg/W1ZVrqj9xgsdocl77b93d9Y+MdRuLT7byTBXBdFwSZ
      eCTM8uO/5T9+tcZ/+V/9G8r5TdqawOjwAMfHh4TTg0ScOsVCmczkLZa/+L/J3PozImqe5XWZ
      oYE0f/N//M+YvXf5N//6z8BxcDm9UaU2yuQ2T3AlhVTfIHqjRjU3z9+9OOBf/6s/4eXiPp9+
      epev/vqvmfr1v0A72GFTUsgmA/zv/+v/xvC9f8a//JM7HV4un/eNd7IAgVCKj3/zGXdmJ1Ct
      AH/+8RSVpk6ib4zrwwma9RoEo9RrNSwUPro/jWHZXJuaoVo4JpTsQzGrNOtF+m5+ykBEwP6e
      DMd1iWeGmZ2aYG/hMXKyH0OI8k/vj2DHRhjMpglIAabmpigf50n1D9KulikUK9z/7LeEXb9Y
      ls9P805eINs0ERQFEdDVFrrpEApHEAUQcEAQaTbqhKIJRBxkScRyXLRWEzEQISALSKJw9rUW
      UiBEJBLCsUwEScG2TERRxAVkSUJrtwmEIxhqA9OGUCSG0W4gBUIYahslHEUWQRJcLAfaqkow
      GCIUCoLrYr/8t8gengF8rg7d4QatHSI73lmEPxbHfb+7RJ6mQzueunvtsy6Rnbrx1x1eoFg/
      eNk+9CwOgMdxAMcwwMM4AI5zWqXBy7W1LARR7JiL+e1HbussrOwwNzfdKResZ/w/f/kf2Nna
      vOhhnDsXkQ591SPBb60Azx59hUqYumaT+pH2pkdHRwwOnpUltHW+frzAx598QHVvnUM7xp3J
      82ldZLZr7BXaXB//YUnESrnE0cHBucj1udq8tQIokSQTY9cI0+bJo0X6Jmap5xaomFFuT2ZY
      2Tpi+vY9GrUKrgsDg4OIrkXQrLFX0amdVJFiDgdbVfZKJh8+mGVr6RV1J8TYQJZsfy/lQpFm
      6YiyGWT2xhD5nRyh7ACFvQ1i/ddIBCwK5SY9YZe9osn0ZIbFhTX6rs2g5zfQo4OYao35V8uE
      M6PMXh8+z7XzeQ94641Uq17h+PgEtdVCNWx0TWd84jpj48O06zWMVoWNvTzbS8+oWzIHGwts
      7heJDk3S3HmJHMsiALVaDfVohYWtE0K9EyRkHddqs7u6RM2UqTfaHGxvUqic0HYS0MzTe+02
      WinHXu6Q4dFxms0Grq2jJPoYGR5mIB2iodrsrq2xu7/P5O07GDW/L7DPT/P2JwnHolypYCGj
      CA6qVufbrx9zeHiCblnIwTDhoMLMg8+gfkLf9VtcH+0jFIwgCQK9fRlCoSCWaRGOJ4hHw+yt
      vWLroEwqO8D2fpFr/WFMyyYejyMHIgwOZEilM2wvPkUVYmSyfaRiQYKBAIbW4mB9mZWdHIVy
      BdOGZCJOJBxk/skjSi39HJfN533hwtygltbk5fw8geQQw0mBih1lcjj7i883zdIhr1Z3GLw2
      w/hgD7gu/8v/9D+yurzUkXFfavx06J9Nd8QB/HToc8FPh74i6JaL7nw/2eL8sG0HQQDRO5EA
      mKaD+YOkkvPDdVwc10HyfG1dRLEz7+2uUICvd+t+ZTif13I5aoO+hv21V3z+8CHL2z+8ylg4
      S5sGePzwb/nyyy/JV/+Y6lA+OcF/3H3ehktrAWRZwnFF+vsyrK2uMtEbJqfFKO8uUmupPPhs
      Ess6zUdBAEev8/Dzb0gPjnK4vEBicpaPb01d9DR8LjmX9hCstlsoisiz+VUCosNkVmGtGSMd
      CRG2y2hCDN2REJ0W0zencS2NV/Ov0IiSCQsMTc8QEgT84rg+P8al3QJp9RKPH79gZOI62XiQ
      tbzKyEAfRnWf45bA4Mg4s9dHkIzm2RZIR8AlmU6T6YmwtOzfEPP5aS6tBegUruvy6rBBRfPu
      Uvzpknauk+Hb4jjedmx0ATxOwDu9jdi56qBdoQB+HOB88OMAV4TDukHb8q57ouM4p71sPc4b
      t20bSfLurHMRXSIdx0G4Ul0iXZvdrU0CyT4Gs6nvfOQ4BrouEg7LNMrHEMkSC8DxSYG+/oGO
      3TtYK6j+IdjntZy76pa3lqmKUSxDxzQNXMfBMC0sQ6NYzHF03ATg8Hif7Y1d9MYxX387j24a
      2M6pWTcNjXqtiqa3eTW/SEvVMdQW9WYb2zJo1Ou0NYPC/gGabVGrVtEM/4H3+WnO/Qxga3We
      Pn+Fkhwg4tYZG59kZb+M1MxjyxAMDGE7bQRFQrYMJBGqmkl/FJShB+Q3X6DYGq4sYJCikt9n
      5vYM818/JN+A3352k4N6AEV0SYsOQzeG+Ju/+o+E+m/xn/2TD8D13aA+b+bcLYCm6vQOjaK1
      6giORW4/R1szcVyIx6Mo4ThTN68TEKEnGeC4ATEJBFHk+GCHakNHifVw5+4MsWCc3kyScEAk
      1jvGn/76I6LhMDdnb9MTDwJQLpe5PvuAqNeJOD5XknO3AI6pcZg/IZbqJSJbFMoNEukeJKtN
      pWWQ6ckSCspomoYiCaimi4SDIovkT0rEkilCikQopKBpDpZWQyNEEI1qy6Yvm0CUw9imdtZV
      UuT4pEw0niSZiPoWwOdH6Qo36GFNQ/fQIDjOaXpGpzoZvi2nXiDvXK+u6+K4LtIV9gJ1hQL4
      cYDzwY8DXBHmj1qUVK8jwXjfsfEiukReQCT4VNwliwNYWoP5+UWU5AC3pie+c7rWGw00SSIZ
      iXB4eMjg0BClowPifcM/6Oho6DpyMIgIGK0yL+ZXiPaOMtUfpOwkSIUEAsHga6evtVoo0egP
      SmiX2xaH/hnA5zV0TAEa5SPc2BDXR7JUi0US2TTVYh3ZrvPi+SYTHz0gGYlgN0pUtAGOCiXi
      ySiPX20wdfsWR5tLiIk+DhdfEBi5zsd35ljf3OH2hx+TX3nOSS1JQW3x9fxLZj/6lJRQ56gp
      MT2SZHVzj3jvGBGrRVKyWXq5RP+1WUb6/D5hPj9OxxQgNXiDfnWVlwtloorAVDbGwe4OrhLm
      w/tzlLUy3zzbZ24iS377FVJsmMXnT2nbAqsrW9ham564yLUb0/RPTyEDDhIhRSIRUaiZEIz2
      cOv2XW4MBPmrv9lAlgIklCzxkTm0whambhJIBjEsg6XFVUb6Pu7U9HzeUzp2fFcrebaPyiAI
      xEMu3371mJYjQ7vE88U1xEiWTz+4QzzZw+HeCWNjGXqzPbhCiJ5siqDkcnxSIiDpPH2xhOXA
      UE+EL754yFLRZSguI0sS7eoB64d1MokI8VSacDhCPBIiFAohKwqG2sZyREJBr/ul+FxFusIL
      5McBfN5EVyiAYVqIXpbw/kNVCI/Lo5umhaJ4Wx7dcRxkT9fWRhDEjt176Ao3qISD9E7dzN4N
      ERtcAdHjC3cupqd/0NNAmLdrK7g2oiAgdGhtu0IB1L/6b2D77y56GJ7gF4T8ebyTGmnNIl9+
      /jmPni1g/sL4Uq1WxTR/Kk/BoVSqvPaTRvWIvYPqLxuET9fyThbAcWwcV2BwZAStcsTTtR36
      hkaRZIW4YmHZAtu7u2SGr+HW8rSEGAmpTb5icXO6n/X5bcREDx/fn2bh2de4wQEGswr5qsG9
      uUlWF1eQkgMkhTpHJxV6BoZYnF/k9ocf4lYLGJE0EaNCvi0yM5HGsmSWXzyiboUZHYqyt3VA
      MDPK/dmJDi+Xz/vGO1mAYCTNRx9/RG1/jZevFmkbFi3dplkpclKqUdxbo6qZNBp1dEfh7nQf
      i0vbWHqTumYyMXWP3qiMI0qMXpvi/v1bRAMytqZxsrfCVqFNu15HEwJ88vFdBDnGrblbTI33
      YghRbk/2U6q2ONnbpaabYJR4tXKE0W5Q0+DOg4/8dGift+KdFMDWWyy8fI4dznD39iwBWSIW
      izHaFyeQ7OfazCwxWSIWT9DX33/6AM+Mo4SjJKJxotEAyVQSAcgkIiwtrWCLMnIgSM/IDBOZ
      ANF4nHQqjSgFSSWiBGmztleif6AXUVSIRUMMjY+TjCZJ9Axz62Y/wWicdCKBosikUokOL5XP
      +0hXuEHVh/895F94J/PsX88rlXudmHYq1ONkOEDo3Np2hQL46dDng58OfUUotEx027tIsOM6
      CIDQoV62b8vphRhv075Py6J4uLZXrizKz8GxqLV0kvEwqmoQDode+22WoSPIQSQRauUCTdUg
      leknGnr9dBbzbT8Vwue1XK7aoGqZzx9+Q9M0WFvZxnUdLNs+jTiemVvHsSkebVM/i/js7Gxh
      mibO2VbHdhwOtnfQbJv3e3Pn0wkulwUAJqcm2drYBhwWn35LXTVIDd6gsPOCwWu3KB3uopkm
      N5QeGlURrVWnqVoEQkF+9+WXjM/dp7S5TEK1+Gj2xkVPx+eSc+kUQA6lCGjr5PUAUSnAzcle
      9qsGw5OzDPfG0fVBMm6DQChCUBFo9PQzMjJOMKAwNzfNcbXO+LVxEqM/bJjt4/N9LpcCBJOM
      ZERC2TkSTZtkwGL7sMrszVEc6/RMkIlW0IUBepIxFAm0RIxcLsfg2DUUJcDkzTF6gjb7pSq9
      sehFz8jnktMVbtDdcpu2h2dgxzldUi9LlcNpGrYkeXesc11wXedKF8ftCgXw4wDngx8HuCKY
      L/4tZnHFM3kXVRbFcRxsLy/huC6uC6aXTTlc9zQKfJnjAI5tsDz/Ejuc5dbMtR+UKfkxXNfB
      spx/uNlk2xaCKL+2VHq1VCKeyfzk77f2n3TNfQDvwmDvB+eiAEbtgIbYx93hHhxTZXl5g+Fr
      15AQCUkWliCztb7J6PWbCGaTcsMkoRjkGy43xno5LtTRayfUieAUV9ET03w43R2lAw8AAArw
      SURBVMf6Zo6Jm9MYlUPyTYGAVmT38IhrN6ZRi7vUnSjD2QiHuzlCvaMM9/plUXx+nHNRgGBq
      jMHiMs8XikTlNvlyk4om0BNTUAQbtVniqNykqgtIRo3p2Zts7TUZjIns5guYbRgZ6EcvqSRH
      xpEzo2yuLjI4PsLa6iKOJjJz+wYH6wUGBnrIH62z+HgFORjCuD1JMtVL5fjYVwCfn+RcNoxW
      s8TeSQ3HsojF4wTDCfoHskTFBm3iZJOnX+vrTZHpHyadSGC3SqzlCkRCQXA1vn74NcVaC1mE
      lZV1gkGBxYVl5HAKVy+ytLFHKBInmYghKyFSySi9Q4MocoieVJJQoCuONz6/kK7wAjX/w3/d
      NWcAn59HVyiA1ThBcrxrkmc7NgKC92VRLBNF9q4gmOM6uI6DJHnrYhZEAbFDmbZdsU8QIhlE
      D33V7lkcwMtaRACCYSB6GAfgLA7g5do6fhzg56P9v/8t7s7nFz0MT/DLovw8PFGAevGAppDA
      aZyQHpogGnjzm9GxdMpVlexZS1W1WUUMpQi+ZqSHe3v0jY395CRcUwWj+Qtm4PO+4okCJHp6
      WX30BCWWJdnIUwz20yofEpUtVrf26R+fxa3vU2i53J67gW7oLD37hv2GQNw4QI1PcXcixurm
      IWM3b6Edr1NxE8TNIlu5fa7N3KJ9uEHNjjA2GGN3K0coO8btmyNeTM/nCuPNFkgMMJGJog1M
      YlTWaJGhUCzRCsp88sEUL1YKSKE4s0MSR4UitiYyODxCSowhqSmU3pscrbzkg1/dZXlpBewk
      H96fZGfV4sHUEPnCLvPLh2R705QSAaZv3+Po4MiTqflcbTxzU0RTvcSDMuFEmr3lp1hCkJjs
      8O3jl1jBOGGrxtJ+if5shnhUZGFhhe3dfQLBICsLS/T2JXj66AU9A9eJyhWeLm4QS6VQAgGi
      ySEmR1OE4nHi0RjBgEI8EfNqaj5XmAt1g57k1tk8rHP73j3ib7jP+0txXZf27/472H90Lr//
      tTLP/vW8LAougodSL2KenZbZFXEAPx36fPDToa8ITnkTy2h4J885LYviehwIcy0Ly8t4h+vi
      Og6Wh4ru2DauKOBc6kCY66LrKqYNkUj4XBtGu45z2qz5R/4I+lf/g58K4fNazuUVZZsqz58+
      ZXNzk7ZxvhnqRrPJ/snJucrweX85FwsgSgpBGUxXxm0c8Rd/9YhY/wSj6QgDvQnqjTbPXrwi
      0DPCdAaOVYVkwKRUa9E7Oo1+vMJBM8jskMKThX0+/e2fsbPwLY4U5e6dGb74/UPSY7P0K02O
      Ci0Gbk7yu//rL6jZMe7cGSafKyDG+/nsg5nzmJ7Pe8S5WAAXl8mZB/THDLZWd0iNTTHWnyUZ
      EtnMFYkKbUL9k0wM9SIEYnzwwR10Q+BXH86h1lsks0P89k8+pKnC9aEUlbrK0MQ0kwMJDnIF
      xmdmUOsFdCHCB/duEXAbqKSYmxrFEsJ88KtP6I36XSJ9fppzUQBBEDnZX6diJrjz60/pE9og
      KQyMDNPbP0Rm4jbXoiauINM3MIQiSsxNj/Nq+ZCbN/soF0qsru3S39+DnBxkJBtjf2sZNTTA
      rdlxLNVkbnaWsYEk67kTenonuTfbR8sUGOzNEggo9A/0ncfUfN4zroQb1HVdLMtCUX7+W911
      XfTFv0Sobp/DyF7PaXHczpXueFtsx0YSvfPI/LE4rl8W5dLixwHODz8OcEUwl/4Sq7LpmbyL
      LIvieB17cF0sTxtkuGcVUS5BWZR6pUgokaFdKxNL9SB/r3ZJo1ojkkr+aNmSt3tYTuvPvO57
      DL2JZsgk4q8vpQ5gbf1d18QB/M5oP49fpACC1WZzq45l2EwGgoixMO2mSr1UQEXBbVYRKiX6
      BsYQ9AqlpsNgf5JS/gQ3FGcwm+Tl028IxgcZGUxxUm4wOjJM+SiHnOglIpqcFMqkM0mePl1g
      9u5dkiGZWttAsdu03SCJoE65GcVWy7TdENlkkOJxgUCyl2zKrw3q8+P8InsZzw5TO9hk6No1
      dtc3sdDZXN8noIiUSjVsS0cKBNjdXOHLv/+cbz7/nK2jHMdFneNcDhuBYDhCPBZlb22Bg3yJ
      xvEav3v4hM+/fMLm1jqSaLKXrxONRomEBF48eYEoy+xvr/P7zx/S0Eyw6/zub/6eh3/3ezZy
      e6imw/7efqfWyOc95pdtGAWJ9OAEmYiM5Kq8fD5PS9d59WoRKRRADsQZGh4hKDskenqZnpsm
      GgoxMDhIMhoCQSAdDZEvlEj1DaKW8lQ1l4GhEaZvjBOIJBge6icQCBNwdcr1NpnBMfoTEg1T
      YTibwrQdQCTTN8jM3DSKEmJoaIjY666Q+fh8j1/sBTrtSyVhWya6aROQJUzTxBVEgoqCKEun
      CUyOhWE6BEMBBMTTqsKSBI6NppvIsohpOYRCQQxNBVFBkUVEUcBxwLVNbERkSUSSRAxNw0FE
      CcjgCtiWgeVAMKAgiuLpZW1JAr8sis+P0BVuULO4iWR6dyfYPssG9bosimVZnrokHdfFdR1P
      Yw/2WRygUwmW3aEApnmlgzVvyx+ssVe8D4Gwrtgoi6LoeSBMELwvjAV4awEcB/cnUtE7TafX
      tisUwOuI7EU8+Bch9yKsXKfn+N5vgXx8fozL1Sf4nHBdh42lF+zkK+fTO9h12Fh8ztePntA2
      HVbmn7JfrGPrTZ49fUpNNTssz+U4t0OlpeHaOq+ePeWk1kZvVXj65Bmq5VI93uPZ4gZOhybs
      OjZ7G5u0bQejXuDhl1+yvndCq3zE05dLGLZLfneVxY39jq2xbbR48eQR+4UaWqPE4ycv0R2X
      8uEWL1e2cFyHnZV5tg6K7yyzKyxA42iLAztO6zjH/QcPkDrc0se1DBY3trk9M011d5lCaIhq
      bpNUWKBneJzdvQIP7k53rnqC1WZr/YhAXwoqecT0MPndPQKixejkONu5Y2zVZiLjUolPcSP7
      5jSRt8VU6+wu75K8M4O5vkpo+jY9osnz50tMDCbI66BVDDKhFoHRewzEfvm2s1EpIoSibK5s
      AAaTkyNs5YqYhshIzKCiJMEJQPOI0dkHxAI//33eFRZA1SGbjhMPhbDovL67gohePuLzL77k
      sOrSl4kRCwZxxCDxZIKQ2GGZcoSBs+YftiCSiCUIh0RcJUQimkAWWoQjaXr6e9DqWkdEKuEE
      mbPUEjkaYPHrL3i5vE0wmiCZjGMYDSLRDOlsCq3VmQql0USC471tBq9dRwmFicUyyFaFSDJD
      XzZGsaGTjieIJmLY5rtlQXWFAqTSEZZfPueooaGcy6HNIBBMEpBc4skQLx49oaRaxAIOz759
      jKFEOiyuxeLyMmvLK4hSgPlnj2gYMhE0vn3yBCk8hF7b4evHG2T7O1MgzGiWWVxbY21lHd2V
      iEUjGJaN0zzm2+erpJKDVI4XmV8+JJ0Od0RmbnWeg3KLcqmEZLZ49OQRcvo67eM1vnp1wI3B
      NFvrL8nl64Tesa5UV2yBwEXXNAQpgKJIHS/k5Louhq7hIBEKKeiqiqQEkUVQNZ1gKNzZbZdj
      01JP3+yhcBhD01CCIUTBQdNMQuEQrmWi2y7hYKAjnhrHNmmrOoIoEQooaPrpvETXRjNtwqEg
      lqljuxKhYGeuo1qmjqabiLJCSJHQdJNwOIxt6Zi2QCioYOoarqQQVHwF8PH52XTFFsjH5034
      CuDT1fgK4NPV+Arg09X4CuDT1fgK4NPV+Arg09X4CuDT1fgK4NPV+Arg09X8/0tgH7vQv6Na
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='income top' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income_das' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='income_hist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='physicians' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='satisfaction' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eYxdWX7f97nr2/dXK1nc2WSTvS8z3bNJM9JIMxprxiMJSmzDVgJIDgID
      +StAEMRxlAQJkCBOhDiwLOsPW3Iky9FiSdYyGs0+41bv3exuNpvdXIvF2t++3Pfumj+K5/C+
      W+8Vq8gi2WS9L1Coqvfuucu5v9/v/PajBEEQMMYYexTq/b6BMca4nxgzwBh7GmMGGGNPY8wA
      Y+xpjBlgjD2NbTCAS7PRAWBtbW3gmzNvvMz84tqwQTSajaFjRqG9dJ6rVfuWx71/9t1tnW+M
      MbYDPfzP/KUPWa02OPXkM1x4501cI8VcWeEb3zzHl772Rax+Tx5z5MgxXn/rXb44c5h33ngN
      10jx9OljvPH6W+RLJX70Ny/xyRc/RyamQuDyxmtvYGSKHCnHeO9qFcMwefbJU/Labq9NR/G5
      /NH7rNb7PDJXIsjto7u6QLGc5d33PmL2wBGazSa+3eHVN99jat8BDs/N3PNJG+PhwcAKsLa2
      iucr6KqP6/u8/847ZGdnOH78JBOFDNcWFuQx6VyeI4ePcGCmJI8988brHHrqOY4dO8bx48d5
      9NghFhaucemN15h+7FnU+goLS9eYPPoEdrc25HZcXnrpFdzqRT6s+px96wzzC9d55Qc/QtE0
      Xn7lZQB6rXUaXQdN04ecY4wxto8BBigWivjtVc69/wFX1rqYukFAjNXlC6zVWgPHfLS4oeI4
      jSV57NTsJGdee43L15ag3+XchSsAlOemef/VV1ho9EnroCgqytDb0di3b4Z4+TAnDs6gWgvE
      C/vYf3COwPd54oknAFCMDKVsnPfPvX+35mWMPQLlfkaCF65cYKWywUiPnHqSTGIs0ce4t7iv
      DDDGGPcbYzfoGHsaYwYYY09jzABj7GmMGWCMPY0xA4yxpzFmgDH2NB4oBrgTj+2densf1Gvf
      6fiH/doPVOSp9d3vEVSrtzXW931U9fb5/U7G389rbzVez7TRs527du1zzkHO9uc+1vO26wxQ
      qVYoFUvydxStVgtN00gmkwB8+NGHPHL8kZvft1to6s3vw+h8/wc458/v9i3vWcT3rZDYv3LX
      zn+m8zn+qPu5u3b+3cCuM0Dt+hWuLV/D7RlcuXyNJ599jO/++TeYO3qEq0tVSkmNZHEKvV+n
      pyTpdDu89L1vYiYKmPkidnOVRHaChObS6HqYgY2RLvLI0YO7fatjjLG7DLBy/Sql/UdwlpaZ
      3l+i2eqio3Dk+DHiqSxHzBRpEwIzTYwENiaHk/tYX1kikUpTb/aYmN2HrydJqC4YLhPFPDDO
      1hjj7uCBygWyLl1C6fVua6zv+ajaHeiTdzD+fl57q/GqaaPGnK3H+h6qqt3Wddf9HCtO5rbH
      38m1tzv+gWIAz/PQtNubENd10fXbX/DuZPz9vPadjn/Yr737XiCnydnLDZJuldLxJ8kag197
      /S6uniQ2hI5r6ys4ahzf7pHNZlhbWmD60CNDjx1jjN3A7jNA4NC1HDS7xcXz77G61mAq6eMm
      8ihWj6Qe4OTK9Jstytk41Y7Dseki86vL1No+j544Tq/fo7/WZnW1wrWF75Aqz/H06eO7fqtj
      jLH7DKAlODTj43vHyesK6VR2w6A1E+TSOZx2BTeZJzE1wcKlD2h1VdL5HFqlyalH91HOZzDU
      Da2sVJykWV9HiWV3/TbHGAPGNsA9GT+2AT6+136gIsGd7/9gHAm+y+NV08acuNmwwPd9vDu8
      9lbjzzkHOecMj/F8PCLBgcu5sx+QyJU4NKIFyfLyCgoBxSSsO1mMoIWvxpks5jYdO44Ef7yh
      Z9pkTl26Z9e739HiWzNAv05q4ghBb4WrFz6g1uyysFzl+LFZdEXlrQ+u8twTJ1EICAxYWuqj
      qw1U1+PVlyt86Wd+fBwJHuNji1szQLyEt/AhidwkgWNxYnqKeCrH1Mwkum9z0tPI5zYkvWbC
      zCQkEkXiiosey6KMI8FjfIzxQBnB40jw3R+vaB5a8uYc3+1o7LqfY83L39bYO702PGAMMPYC
      3fvxD/u1B8TC+soiH1y4LP9vtdp0u90b/9l8+OHVgcGtViv0/XB0u3VaLZtKpbKDWx9jjHuD
      AfZIJhM4a00+ePcNVlsuhgIT09M0V66SLJXodFS++ef/nsLMIxSLKdaXlihOzuL1GnhaEqdT
      ITe5H0MJWF1dZWpqklbtGm1ngpjSoNbsklS6vH1hhSMzORQ9hmqmsOrLJBMG62sdAiNOqpil
      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
    </thumbnail>
    <thumbnail height='192' name='satisfaction_levels' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='satisfaction_rating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dV4xk2Xnf/zffW7lzz87MzuZl0C653ECvlzJJUTIlSlQAJFAUDUiAYT/4
      wYbhVxnwgw1YEPzgBwc4AFagCdGASIsytWIQKVGMWm7iptndyXk6Vbz53uOHmu/0ubdudVeH
      6qqaPj9gMF35dtf5zvnyp3S7XabrOiZBkiTwfR+O4yAMQ2iahiRJEEXRoX1GFEUwDIPf3tra
      Qq1Wg+d5iOMYQRDAcRwwxpCmKVRVhaIoCMMQpmnC932Uy2VsbGxgaWkJABCGIer1+qFdo+/7
      0DQtc52O40DXdTDG0Ol0kCQJFEUBACiKwv+Vy2Woqnpo13Lc0HVdh2VZE/nwOI6Rpikcx4Hj
      OACANE2Rpilc10Ucxwf+DMZY5nYYhrh27RrK5TIURUG1WsXly5exuLgIwzAQxzEYYwiCAO12
      G8vLy9jc3ESpVILneVAUBa7rHlgAkiRBkiTQdR3VahVJkvDHbNuGaZpcANI0RbvdBrC9+FVV
      haZpsG2bC8ak8DwPuq5nBHhWUHzfZ5MSgDyMMYRhCKC/UA/jJHBdN/PFKIoC3/dRKpXAGIPr
      uiiVSgiCgG8EtMgty4KqqmCM8deEYchPiYOgaRrf9Q3D4AKgqip834dpmiiVSgD6G8Xm5iYY
      YxkBUBQFjUZjYicAYwxJkkBV1Zk9hSYmAGEYIo5jWJYFTdMyj5EgkIp00M8xTfNA7zFOTNPk
      whQEQeaxubk5KIqCJEmwtbWFNE0B9IVE13WkaYp6vT7w9zsq6HSd9Al0ECai/DPG0Ov1kCQJ
      XNflu1m5XIZhGFwNOgwVaNoxTZP/PYCsykYqkqIoMAwjIyCqqnKBmBSzvPCJyVi/6Bt53W4X
      APgX2e12USqV+I59NwuAqqowTRNJknDbwjAMLgCicauqKiqVCj8ZSX1K0xRRFE3sBLgbOHIV
      iDGGKIqgqiqCIEAQBJmdTFEUmKYJ27bBGONCsl+mUQVSVZUb3KVSids6SZLAsqyMIIi6dZqm
      3CgmA5lsAsn+mIgAhGEI3/ehKAps24amaej1etwAFne+gx7zonE7zViWxY3uKIrgui7IPV2p
      VOQiHxMTEYBut5vRZ8vlMizLQqvVyrgDARx4h5tmASAvEHlRdjrtLMviJxnFSzRNm1nvy7Qw
      ERvAsizEccyDO57nwTAM1Go1RFGEOI6h6zr/kl3XncRlHgmk1uzm8iV1EQA/OWfR7z5tTEQA
      PM8b2Onb7TZs2+ZBIM/zJnFpRwoFw/aCpmmHGoU+7kzk/BS9Fowx/q/b7cJ1XSiKgjiO+emQ
      j+YeV1RV5cExyeEwEQGg9As6wvMLnCKdFGmU9P9mFCeRHB5HLgCkv9KXSQYuYwy2bfMdrlQq
      8cV/3D0gqqrKxT8mJhYIo0Wt6zpP6tI0LbPYKchzXFUgXdf54j/um8C4mKgA7KbPlstlMMa4
      UUxxguOCrutS5x8zExOA3aBgEGVs7ncHnNWd03GcqY1f3E1MbRQljuO7OhdoJyzLgm3bMsh1
      BEzFCUDpEZQQBmzrv8Ds7uJ7gaK6MsB1tExcABhjvDLM8zxomgbHcRBFEU/6miUcx0EcxyMX
      81A6BFWASY6Wif/FKQ2AKsDoZ4oFHMb7HyVUOVYkAKZp8t+NBJ0W/XE45aaRqRAAoG/0iot1
      Ggo+9oNYPun7PtI05UU+5Oo1TVPm8E8JKrkWJ+VrF/PeKU/eNE0uALMYAyDVjeIaSZLwul/H
      ceTinyJ0qs1NkoR/cUdphIVhmOkAQXlBhmHwrFEq/JgVSGir1eqEr0SyGzr52Sk12TRN3h9n
      3FB1U5qmUBQFuq7zBZ8kCV9IsyQAFLmVu/xsoAPZ2ttWq3WkKbdBEGQWOPW5ERtkzYo/vFQq
      wTAMufhniIwRTDsutSOxbXvsF0CLm04C0XtCQpEPig07DYrsBWq9chTIxT97DPUCkQoybtWD
      FraiKAMLmG5TF4RpVoPIcJfMFoXfGDVeCoIArVaL6+qHDRm8Yq/LPDs9Nk0cRrc4ydFTKABp
      mqLX68F1Xd67Bjj8Pj3DXJxFTWD3y1EtSrn7zyY7fmu0+JIk4a1MDhMqjgGyrVDofrpv2mMB
      VMssmT10UQ0pwvM8qKrKT4F2u41qtXooOyu5DEndIjXLsiyEYZhxg06zK1Tm8MwuXACAQXVB
      9AoRFDQ7rC+d+mKKu3y+Sew04zjO1HWek4zOyIorLXjasQ+LIAh44ts42myPU33Sdf3IVZ80
      TXnn7P3AGEOz2USn05l61fIo0EetuaXWfYft56Z8H9GLQnYHMSnVh9IxgiDIxCdo4U/K8xNF
      ETzPQ61W29fnk01Hnanz02mOEzrV3VL3NUpHEFEUBVEUHXoi1zDVi9IiJg31JxIXv6qqcBzn
      yBcMTa2hNJUkSdBqtVCv1zMBQ6AfNwmCAHEcw7ZtRFEE0zTR7XYzrWY6nQ40TTvWOUs65f/Q
      TlCkf1Nh+jh2O9u2ucE7bUauruu8iS8A3stoErslY4x31KPqsTiOsbW1xafEUPq1bdu8zyi1
      lvR9f6BGgU5f13UPzbExa+jA9q62tbU19ImHVaCSf0/KjxcFb1omj1AP/lKpxMs1J+Hvp12b
      muJSwiA9Rj/ruo52u50RUBpAkk8xocg7bTxpmh7LNI6MnkEVSwS14qO5WONADHTRFynWARzl
      /Clq1EX5Q+LpOI4NYFTiOM40CBbTRsgDJe7wnU6H/10px2onfN9HHMeoVCp8Is1xgQsABZ/E
      yiyaYjJONx/1B6KjWtzRgKM7DSzLyvTgoc+rVCpj/dxRIYOb/lZkCAdBkNHvifzwDBKa/O5P
      z42iCFtbW5ibmztWBnHmBKBGTDSv6qhKEknQoijKRJvFbhH7ddmNakyHYQjHcaYypSFvd9BC
      JmM2H0fJI24eO/1+kzzlJsXA6qCsRhKCo4LsEKoPIGhqyjhOAFKvkiSZqT48ZBNYlgXP8wo3
      qqI8KvHnIoERbY3jgp7/45GxR8MqjgoxGEYT3C3LGmsahKZpqFQqM2EAUkZuEAQIw5DbSUWd
      tYH9ZafS8O3jhNrr9QpdZKqqTqQ1n6ZpvKsC1QCMK2IZx/GBh/AdFb7vZ6ZJAhiIBtMGMsrC
      L8qynZSXa5LowLarbBpacJNRR65HMsppYMZhQsbfLBz7juNkbmuahna7zW/T4h91sxBnMKRp
      inK5zMtRjxNc3Ol4nTSGYfARqdRj57h9KaNgmmZGKMRJO3R7VCi1Y9o3gXEw4AWKomiip4BY
      C0A7nO/7h/7lkGdFVClmCbpumqUmpjiMUkRE+VemaY4lx2sWiOM4KwBBEKBWq00sLYEmolP+
      jWEYY5sJQNHUSdk6B2Wn8VH03ZGhXOQRqlQqM/l7HxaUApKxeKgbxKRUDkqCo7wW0vvHVRMs
      phTMEmEYotlscqN4mOFKKlE+GkxzmY8z1HZnIA5ACVeTGsuTj17uxbDbCxT1nsXOc4ZhZLJA
      gf73RpF0QvxZHLgxiyrfYRCGIU/1oGZwhWFSWnSTWhSkj+bD+YcJ6c6z6PmgJEIRchtTYEz8
      /hzHOfZzxsjj53kezw4wDGNQACzLmnhCFNkCVLU0rmuxbXvAvTirkPPAsix+vFOv13Glss8K
      Yk0HleCSE6FQACbd44ZsAdJfx3U9kxb0cUB/u2koKJoWSKOh9B7RLlLzmZ7jTH3eCxSYKwr3
      HxRy/clFcndDsa1ut5tJJycYY9Aty0K1WuUR0WlZFHSkHzRAJ6YBkyCFYYh6vT4Vgi4ZH57n
      ZZI6aeaEWH+iA+CFH71eb2o8BOQBMgxj3wJA45aohJDcf9RrVHJ3QqkzQN/OoxR7UZMg54ou
      3km1pNQNYdIoigLLsni++170dTJ6yuXywP2yj8/dCy3+dru9a2ScMQaV/P5A3/04bUESqoLa
      S4NeKrLPn2aTTvO426HC/V6vd6Sp9ESapmi1Wuj1epm1kq+JyBQIJUnCfeL5J08LlB06is5O
      qRPDdvnjOnz7KBBVj6O2JclWJLV3p26Hotajkp+Y3mQaEfPcd7pGshV2UnGkAIwPRVG4BnHU
      G2kQBAOR8CLVJ98KVKUmTyS907hA8i1Jilyj5L7dafGLXR4khw85LiblYMgv/iRJsL6+XjiE
      keIA3AtE+huVCU4bqqoOdK0g6abC+d30e2r+NY1qnuRgFAldmqY8qZISLGnyKOW7ZdqiVKvV
      qVWDaPd2HCeTAx9FEV/8+R2g6D2k+3P8TGqDya9dVVWxvLycGfxYKpXQ6XS4i13Pv2Cag0Oi
      R4iKwzVN42kTu1Eul6f695PsD1JrKN4jNgZIkgSLi4tcy0nTFLVajb925lYDRYjpZ8rzsCyL
      zzgeJgzTerpJDg7p+GTHigVPYiOw/NqYjryHPUKGFpVOiu43sSZW6vqzhRiP2iu0DoraxIiG
      b56ZFABFUQYGeVMBPQ31ywvArNb+Hhdo195v/ECseiuyBYdpBRkViDGGdrudabcxjYhlkvSP
      OstVq1UeyRZ/aSoYkUwf1AKTVJa9kt/cxIHlosewSCMYEIDNzc2ZzZUhQcj7fAGMrbhecnBE
      W26/aqs4cJGmHpH+T++/qwCEYYg4jvmghVmE3LmO4/CCl1nt/HCcsCzrQOWptOMrilKYPTys
      TbwuPqHT6UDXdT4TWGwXPktomsbdpZT9KQ3i6eagtd/kGjcMgyfiiakzwzb0AYWLes9TA9ZZ
      Rdz55eK/+6FSUDH3n9TfYetYUZRtARAjqtQuZL+jOCWSSRDHMU91Gbk7Hv3geR6PppEralY6
      J0tmC1JXDlPDUBQFlUpl12F/mVRoVe0LAA1eA/rzpaiAmAxiieQwIQE4bPLls/nAmDhrolQq
      YW5uDrrv+zxKpigKarUakiRBs9nsJwvdqReQOTSSw2Rctpl4suS7ZdPir1QqvP2+XtQLlPQo
      SouW+fOSvSL69OM4hud5vCsDdR8ZR7xJ13WeCTBs8TuOs50wV5QkRPW01IF42iPDkumBUlI6
      nQ6/HQQBrxX2PI8XLx32CUAxoKKsX6pWy5fWqkUX0e12MzGAnVpxSyQi1IiKFhkVpYhQoHIc
      0GzrSqXCNRnDMFCpVPh9IrwiTKRUKmXGBqVpina7fSwHKUv2hqZpMAwjE4gUtYujGMWkKAoc
      x8lMGhp24mRS70hP0jQNrVYLAHjWJelx5XJZJpVJCkmShBecUOoBNTgmVFXlQkH5P+NqVLZT
      LIAxhrX19cF0aBKCRqMxMLk9SZKZGCgnmSxxHKPX68FxnAEHSq/XGxh8YhgGGo3GkV7jt/7u
      Zfyv750tFgAyZPK52dIOkOwG7eZUhC72ZAX6ayh/H1X4HQWMMaxtbOKLL7yL2HCyrRHF40LX
      dZ5jLdZTdjodzM3NybiAZABaE+RuDIJgIOAlFqjkMw/GSRTF+IOvfgvnLl5Gs9NFzFQ4upF1
      g4r1tCSp0uCVjMpA28EdZpfR88XilXHy8htn8YPX3sYJmyGsLMFtnERtbn4wGzTfcycfI5jV
      FGnJ0ULxo2GLm+q6j2p005Url3HaCPDKRgS4TUDV0G1tZW0A0TCJoqhQN6MGs1IFkhQhbpak
      3uRtR1rwRX75cXGl6eKceQ/ikgWg//muPVfcFoUxxhPi8uFkSpyT6RGSInjffV3neWVF0CZ6
      VCq2mwCx4QCKCtz5zAU9HawJJjugVquh2Wzy++lfGIY8nC2FQDIMalUzzI40DAOu6/KpluPm
      qdMLUBOhZXsao2EOaYzFGIPjODxZiaqrKHARBAHa7bYsNJcMxXVdvvir1eqAquO6LsIwRLvd
      RrfbHftmeq4ZIFXvaPwsRc3fxOc+9tTwznBpmg6EsYHtIy5NUykAkqFQxgDt/sOcJ0mSIAzD
      sQ/UWLIAO6CkTgVLtob/9o0XoO80iV2cok6xgPxx5rouN5alYXw86fV6uHL1Kl587SzWuwH+
      6Wd+GYbR320p777T6QwMqCNbIU1TxHE81nY8v/LJTyAIn8efX4sBxrBYdfB3La1fD0DWOs3k
      BfqSKaaO5qN3wPa09SAIwBhDo9GQQnDM8H0f//nzX8LLN300gtv41U9+HJ1Of6el9OMwDDMB
      MU3TMkUr1Mt/nLiui0uXLgL6KRixi4VyCb9xcg66bdsIwxCu6/KCBUJsOU6BMbpoQlEUbhBT
      W5U0TWUn5mPCjVu3cf52G7FWw9I9p/GB9zzI14fneTzzk/6ntuT5EyEMw7HmmV27fh2mqWNe
      6yFOQrx0qYnPPnR/PxXCMAw+OUXTNFiWhWazibx6RNKaPwnEXxjYns5B6dOSu5fNdg/31AwY
      7Q389qd+OfMYeQ1t2+ZZxYyxgSF2QN/m7PV6vMv3YbtHV1dX8dxTH0Lr4i0EjWVEl8+hUi73
      C2Low0hCyYdrGMbAhQxb/CKmacpmVHcpjDG88eab+Kvv/hDvnDuP2OviXAt45v2PoFwu4/nv
      /B2u37wNAJnUGooh0Rorel/f99FqtcbiXJlrNKDZDoKg/976ykl84cU3oNy8eZOREIhVNIwx
      dLtdxHE8sp+WVCiyKarVqjwB7jI2Njbwe//pf+KScQpm6iOGhlTRobIEj8xpuNoMUDdSfOKD
      D+AjzzyJarWaUa3pZ8/z4Pt+RvenDVPXdTQajUPfQIMgwH/4yjfQqi3y+7goUlTO9320221E
      UcSbjO4EVf9UKhWePZokCZ/aN8t9RiWDmKaJk4t12ImLUCsh1SxA1ZBqJt5qa+iqJVyLy/jr
      1y/Dsiy+24vTh6hjX36Wr+hiPwyjmDZxWoOvXLyCSFGQbq7xx/n2TMlLFPEd1S9LQypc1x14
      DbVXsW0bpVKpUKWSzBbtTgdr3QiBskNSpKJgLVDRarf3letPUeT9aA9hGPYNbMbQ7rn479/9
      MRLNxHvUAFdiFd7CCaDTQrK1BqW+0DeC8xmgo6IoCjzPKxytSt3mgO2o39LS0p5/Icl0sTC/
      gFMrC7j6zg2EVgOJbvfza3LEcZLR5dM05TGjOI55K04g27aE6PV6e+pHdePGDVy6fBlff+kt
      BIaDrZChFDSh3PcQ1FIFF3ptRLUqAECt1rdrhcWjJp/6PAzKGaIo3k5zucTXSGYf27bwO5/5
      NfzWRx/H/eUESlo8VzpUTNze3G6nQ6rN5uYm2u02b8U5bF3QGhuFZquFazdu4oaX4k19CedZ
      BVtGFdfNRUR3OlJE5RpS4T15eo/neRkvkCiFBxmanf/Fdoo4S2YL27ZRaczjnO+AqcVqiqIo
      0PRcCxJBpaFTQHy+iKZp8DwPzWaTxwyGcfXmbfzo/HUYCoMRb7dg0eIAeqnMbxdNQVVF44Mu
      RFGUHd1RRRM38p24xOfJgNjdxaXLl/Hlr30bVe8mLH+z8Dl1PcGj99/Lb1MwTOwXRK7yorRo
      cqTEccwdKsN4+/oaXrrVwVLZguNu9T/P76KiRVDtnfsP6cPayDHGdq3+ykeG83qc+DO1zJDC
      MNsEQYBzF6/gqrqMpDzESGUMT97bGGh+NUoMaa8wxvD2rS1oaYz//Z2X4LE716TpiKM0sxmT
      qi5Gm3VVVdHpdHjrOKC/WOfn59Hr9fh9u10E/Z9Xo/KRZMnsEscxvvCnX8FLb51HYp/MPsgY
      lswYDyyWcLph46GHHhQe6nsVxQiwOL93FIZN+Hzl7Lt4vR0jceah+j2k1vambVYqmYYOhY2x
      KOEtiiL4vg/HcRDHMb/AXq+X+UWIop2ePkxMmaBGpEdZ/iYZD7quwzZ1bKh1qHGI1Ojv8HrQ
      xsMrNfz2pz6O+06fHFhovV5vQIWhUslR1kSpVCrMFN1qNvEHX/sOEmcFAJDaZSCJYXXXoOsa
      7JNnMou/KKtZB7ab4aqqil6vx38Wfbh5i31YpU9RD5harTZSUE0y/XzsI8/i3XOfx41OE1vK
      MhYths986mk8++QHhqq3pmny7z8IAm786rpeqCGI68pxnEJVvNPt4o/+z58iWL8Bfd5EXJ7j
      pY61xTnYJ/onFGUyiNND6bM0TYNy48YNJu7cRQlvRUfVsF+WWis6jsMNHTJmDMNAtVod/teV
      zARbW028e+5drK6ewInVlZEDVpQPRIVWtC6K4gFiIY1hGBkVKAgC/L9vfgtfe+ktIPDQs2pQ
      0gRJYwXMrqDkb2Dh0UcBbDdzo/UrGuEA+rlA9IS9pCwUnQCU/yNGfLvdLnq9HnRdR71el9Pa
      jzGU8Qlst00Xd/0iDYE0kUqlgk63ixdfP4svvXYJt/0USuCCWSXAKgGMQe01obotNFYX4Zw6
      w99DtFHFjTtNU+h7zdMZpvqoqoq5ubmMTkcNdXd6neR4kCQJOp1OxrWed5aQXUAxIxp+bZom
      vvBX38XXL64hbjURleahWFp/8W+/GdJyA1pnHVrOXiiqaiSh0HfTy0dZuEWLnzGGVqvFDRDZ
      Vfr4QtmftPhJRVZVlc/2pbWh63pml6bF+vL1DSSlOhSrDKu1jrjjI60vc73/zpMRN1bhbjVh
      Lp/YTne4k4GaX8uKokDPB6voCWJ6Q75STERVVV47QFAhBBk7juPIRLhjCuX5h2EIy7IQRRFK
      pVKmUmw30jRFQvu0poPNr0IzW1BvX0RcXQScKv8sZlfQ64aodDvQypXMui50g9ZqNT70oiiw
      BWyPoadOEOKQDF3XB3Z2MRFO13VYllWY8CS5+wmCAEmS8Pz+oljRbly9cRNuAkA0Hyt1KJU6
      jOsXEakalCgAKzeg+l1UtQh6pTqwjuln8Rp0WqAiVMRMUyLF9hajVO5TGBvoC0Cv10OSJKhW
      q0faClsyeWzbzkyEHHXhM8bw2jvn8b13r+DlTQ89q4LCV1aqMAIfaeD1bYA0RORUEXfb0Cu1
      gffMX0Oh/4r6u1MSErkvRxmPROoPfRhZ+qTn0QR6QQLlqXCXs9v3+43v/wjfv7yGz374MTx0
      Xz9/6G9feQ3/47UbgG4Aul28+AGw6jxQBdQwgLF+Awg8xKUSEt+DVq5mPp9cohk7wPd9Jurv
      YlWO7/twXZdHhkul0q7dfCnltSiTlAruKf8I6LfOyJ9AkuPF2QsX8XvfPYsHzAT31Ct4cKmO
      Vy5cxY99E9CGxxgGdvQkBtIE8F04qY/amfvBkF3TovqVpimUtbU1JkZ5TdNEuVzmLVEoeEF5
      /zu1OyHfbqfTyUjbME8TpUiMkm8kuXtJ0xS//+Wv441wuHot5vHT/zsmVwYetM4GNF2DZWiw
      anVotWydMWMMehiGGeOXusHV63WeD0S9XHaCBEVc/LtBJ4Lk+OD7Pl579zzevbWJX/vI0zBN
      E2mawjYMoCD7XtycxcW+a8mk5SCxTiFmDAFLUW1volzLziFTFGU7FyifurxXqG163l26U5yB
      jGWaRSBtgbuXv331DXzplXfR8gIkVgmp6eDmn38TrSBCr9tFYlfAjGpGraH1UFRMtVtavfh8
      s3kLpfvv5/eLKpCef4FhGHz33wuqqu5ZcMhdWrmTtiq5e/E7bbhbG4iW7+P3vRQ5gOoAtTve
      GiFVQUzNETWUvaRQE5ZlQMnFuehnXdd1VCoV/mGWZe05X4eCHZ1OZ6Tni78EtceQxTJ3N2dW
      llCvXsHwuq4souFKt4FtlUgMzg5LxwcAhD5Me7iarcdxjE6ng2q1ytWYvbomSQBEm0H09NDF
      iVY4daDTdZ0H18bZHVgyWR5+6EH8muuh4/p44eo63g0URKoB7LKj59eheDuf2AZsJ7xxVSoK
      oNWqYCyFfu0CopRBq88DjYX+49euXWOiBDUajT0Hq4Zlkoo7O+n7hmHA8zweHaZ5xPTZkrsf
      z/Pw0mtv4LVzF/FD30JsD3oBi4JWxDBtQdz5GWNo+E1UNeBDJxqomAaWGjWcWF5Gu9PBf/zi
      8zDvO7NtBAPZ2cB7gWoA8oj3UXCt2+3y6jDP8/j0eekKPT7Yto3VxXl86LH3g331G/h+2wWz
      s0UvlItWtLbyNkH+/jsP4oPzDn7p2ScHPt91XTR9E+lPLm63RhSjZeQOHQY9nh+CvNvzu90u
      bNvmDY8YY9z7I92hxwdFUfDA/ffDtm38zOPvRU3ZXmu08ElrUBSFF86EYciTLKMo4lkFvr/d
      CoUxBpYmeNL08PNPf7Dw80+sruIXHj+BmmNkvUBxHPM3zQ/IEKWN2iiS3r6bvaAo/YHIc3Nz
      /DbQjwKHYchzjiTHj8WFeTy4UMOLHQYo2RY9pBrT2igqpM93eQCAhdTHP3zsEej68BnFn/zY
      s7h35c3BKZGu6/Ka4E6nwyu6aJofuS7DMNxTsytFGew/pGka7xsqPUDHk7m5Ofyj557A43YM
      Jcw2UqYkTNFxIjpPNE3LTDei157RI7x84Sqa7e3OdGcvXsaFy1fAGMMffuUv8PIbb+HPzl7p
      C4D4IeQVolxtRelPgKHHkyThFf4kHAdBVopJFuYa+PlHT+FhdAttSVr4O22SfB0lMd7Z6OL5
      zRRvnL/MU/i/8uYl/NWFm/jx62/indIK/mQtRqs03y+IyS/AIAgQBAEqlQpM0+TFLKR3Af1i
      ZfLgSCQH5cy9Z+B9+wfA/GLh43lNo6hFD2MM0HR05k8CaYqvn72EH693seb6iOpL2FAUXD97
      GfFyv16YOeVsOrSqqjBNkye+dbtdfr84/MKyLNi2DcdxpABIDoVyuYT33Xca19dcJNbOHQmH
      kbEPVBWuasC36oBV58/xVu7jqdWMsX5nOGo7QVFZ0r183+f5PWKgoVQqDdRuSiQHZS0CjPYa
      kqVsR4dRalAG3KGMIVV0aKEPWMX9QRVFgV6v1zNBKWpflz9yFEWB4ziwbVsufslY2HADRKU6
      wNLMzAGxtHEnYaDnpWkKpbUGs+QMXfyUlaDTG3Y6HV7HC2zrVZZl8bpeWb0lGReMMahuG3Fp
      FQAyFWBF/XzE+uI8iqIAjWUkNy9AqzYynSNEIUmSpG8DdLvdzOKnBlfkZpKLXjJu0jRFz6zw
      22Lm57DFLur8+dQJRVGgWDbudH0DAFQiDxUlwS1mAmo/M0FnbHAeGDUjlQtfchZSe9UAAA1q
      SURBVFR0Ol1sxeBV6uLi3mkd5p8nCkxqOFBvX4NiGKhVq/hXH3sCJ5YWcfbiZfzxD3+C2/qd
      OcEilUqFd3SWSEaBMYZmq4Ver7fnXH3i9uYWIn07G5jUnLytWWSbis8T121aaSDRLCxqDL/z
      xMM4tboCTdPwvgfvx7/9zV/CJxatvrzV63V0u13ZwEqyZxhjePXsu/gv33sNKYCPn5qHY1tg
      ioJWEGOpZOH9p1Zwz50mumtrawjjGCdWVuC6Lk+CfOvGbUA3d9Tt84vfiHyUWYSmamVeS5yE
      j3/yyadx3+lTA++nqires7rU7woh5uHLxS8ZlSvXruPrr57F22tN3NAq/a5tBSeAEkfQ3DYs
      TYWvGWAA5tUUrUTBT82X4AYBLt64jWD5DDdYyR0vwlUdAA8aEX77738Ay3N1nL10BevNFn50
      4Treji2kuollbwP/+tc/iXqthmEEYdgXAJmJKdkrSZLgd//oy7huz2fup9qQfIZB3pjN5/Qr
      3SYUvwcYFtLaAhTKM0tTIKcGzcU9/Ptf/9nCEUznLl3BVqeL99x3urDUljGGN946i9Mn70Gl
      UilujCWR7IamafiF996LP/zJFUSVucxjRTGiorz9OI55nQirNMAqDSihB3XzBhgANemn3TAG
      GLUGQqe/m5fU4g6FiqLwxlpFxHGMH7z6Or7/kzfxLz/3EH784otSACT754PvfQ++9uLruMIa
      mdLGnfp/iqcATYgRTwWYDthCf2dn9F5RgLLfRNRtAyzFBhiuXLuO++49vafr/dYLL+OPL7Rh
      shI8z8OHnnhCCoBk/9i2DdW0oG9eR1xuQLHLQOD19XhjZ7U677IEkKk9EZ8H08aWucrviyIf
      DHv3NsVxDDAG/Y7XSNM0yHwGyQFgSGwb1uIi7N4GrOY1OEkPlWALamdr11fvdEpkAlq556wY
      wPw+6sfPLC9AC3p4uLE9d0yeAJJ9YxgG5qtltNQy1PL27DfGUpiXzyNIGwMGLDA4X1q8bxiK
      osCKA3z6vnn87JPPDhjAo/DIA/fjPS+/jUcWqvzz5Akg2TeKouDhhcGdONlYQ+j0Fz+V2ZKu
      T14iqj2PoijT/2cAxmD5XTzhxPjnH34En/7IM/ta/L7vQ1EU/PqHH8PW5gaiO3Ut8gSQHIiK
      aYAxob9skiDs9sAWTwHY9ufTNEgxbYGK3klAKPcMuGP8Anh2TsPnnvs4KpWdu5Lvxg9ffAmK
      aePLF9bRiRQ8e/UaHrrvjDwBJAfjYrPfDVAsRFEEtYfqxsWFLQ7By9f90gnBGEM57OGJ1XlU
      qwdvndlKFPzhxSbamgVml/GDC9f613egd5Uca6IowvnWdrNDxhgQhUi17db6VLQO8F6cmWJ2
      RfDIZBomsBSfe+JBPPOBnzqUa/25pz+IWuzThWK10lejpABI9o0fBPBy3kiWxGCqlvHeUNSX
      FjmpPkC2IQPZBYqi4GdWHDz3+PsKI7kXLl1GHMd49Y238CfPf3Ok+daqokCN7/RfVxSEcb+R
      s7QBxky73UZth3yUWeady1cRmNv1u+nWGhLXBSsv8PvyCWrUDqcIEpBq1MMvP/3TA4+HUYTP
      f/O7+JtbPTy38Db+8S9+AqdOrIykHpmmibKhoQkAjGHO6ccp5AkwRhhjuLW2PunLGAu9Xg9f
      fvsqICxmxakgUq2BINiOXh4MukAfaTioVasDzzN0HU/du4IzFvD4/aehKArm5+ZGEgDXdbGV
      3rnWKMByo78pyRNgjCiKgocffGDH59xeW8Py0tIRXdHhcWtjE5ssu3+qjgNzcw1+HAL63jp9
      k5AoioJ3mx48z+Op0q++fQ62aeCR++7FY+97Lx44c++ee8mur29A6zbxoKXiY4+ewMnVlf41
      7+ldJIeG53nY2tpCeqdr9l9++28mfUl74ubGFsyr54Cw3x+We3AYAC3bYHnUzg70f8so478+
      /zf81AjcHuql7Y7l+2mkfObMvfg3n/lF/LOffRbPPvE474Au06EnxNvnzuO1t9/BqcV5fPAD
      H8j4wGeFL3/7O/jexRtwF08CAFgUwr15C+ncCn/OXqe6KArwfjPG73z0KSwvzO/+ggMiBUCy
      b9I0xe//2TdwRd/ekaMLZ+HXVsFMeyDJrYgkSTIxglrUw7/71Y/uWMhymEgVaArZ3Gri81/6
      v/j+iy9P+lJ2RVOFGtxuG4Hd4L14duvnSXECsdLruVPzR7b4AWkETyXzcw189lc+PfXNx/J6
      fdzaAqufKHxst9cvMh8fOTWP955c2eEVh48UgCmF0gWmuUa73eng9lYThtZDVK7jdMXGajXF
      6+tdbFmj7+L12MXvfvqn0ajXDvz7UgQ6D/W2pcEuSZL0u59IG2B6uXj5Ms6cPj21QhBGEcIw
      RMlxcOnKVdx76iQ0TcPG1hZ+7y9/iFvIxQNCH1oUIDFMaFEARTexoDM8dXoJv/EPPjzy51Ku
      kO/7PKpsGAZv7Ez3G4bBB7Coqopbt25l5tAZhiEFQHL4MMbwxa99G1/d6Be0m6GLB8o6fvPp
      92FlcQHtTge1ahV+EKBeqxX2/6H3SdM005afFr7oNhVLLGlWdb4gf319HaVSCeVyNqtUCoBk
      LPR6Ln7/z7+Fy16Kf/HhR/DYow/vyaah2V+0mw9DFABe5FLwOe12G5ZlDcyikwIgGRthGOLN
      s2/jkYceHKmIhRYzDcSjSUQ7tUgctapsc3MTc3NzA2O9pBEsGRthGOKe1ZUdu70RpNrQji/m
      Du3UbWJUoaCB7PnNXgqAZCykaYogCMAYQ6fT4ZVhZLS6rstbcaqqynf8otkUtGvvFE0Wn1N0
      YtBn55ECIBkLNGYL6O/I3W53YAF3u11EUYRut4tGo7Hn2MGwx8TIMhFFEaoFGaZSACSHDqkz
      oroiDqYAtpPnqAYgCALke9TupurkHyNvUl7QaPa1YWwn6dFzpABIDh3RbUnQgs9PegH6U4ii
      KMro50MnvxT8TAO0ix5L0xRra2s4ceLEwHvati0FQHK4xHHMp4sCGPDXi4YsCYOu64iiaMB9
      KZ4eol6/l9Oh0+lgeXkZtm1D0zTuWQL6qpIUAMmhIA5ZpNv58UV574zooRHrhPPs1iluJxzH
      ged5mJ+fh6Zp8P3tafSu60oBkBwMxhhc1y2MzorPAbZ3alJZitSiPKPu9MMwTRMbGxvY3Nwc
      mGnNGJPp0MeJS1evotlqodVqHdp7el6/fHG3gpci1UUUjKKaYfE1B8mHWl1dxcbGRnGS3L7f
      VTJzuFGC6xtbqNfruz95BDzPg+u6PGdHHKgObOfyAIO5OXnq9Tpu377Nbx900YsoioJSqZSZ
      hEpIFegY8d77z+z+pBFhjCEMwx0DVEUBKVH16Xa7iOMYaZru6AI9DKrVKjY3NxEEAebmtgd6
      SAGQ7BlqahtFUeHip2huPkFNXNS+7yMIAiwvLwMAjwOMswhofn4eW1tbvAxT2gCSfcEYQ6/X
      G9rrh1ycRd3fAODatWuIoghLQjsYy7L21fV5r5BXCABu374tBUCydyhHX/Tt72QEizu/67qo
      VCqo1+sTKfSxbRu+3+8RKuMAkn2x06IvClKJ95mmWWiMTgopAJI9Q90e8tmVYspzXv1hjGFj
      YwNpmmZUn0mgKAofzCEFQLJn8uWH4v1iigMJged5aLfbmJ+fzySkTYo4jrG1tYWlpSUpAJK9
      kyQJoijit8WFn1eBer0efN/HysrRtjvZCapDkCeAZM+kaYper8dTGEQdv9VqIQyFcUmMIUkS
      nDhxYt+fF0URnyecd5EmSTLgXh2FWq2G9fV1OI4jBUCyje8H+Itv/zV+9ZM/N7TU0HVdnrlJ
      Cz+OY2xubqLRaGTajhwUxhjOnz+Pe+65B57nQVVVOI7Dg2dpmqJcLqPb7WJhYWFPgsDbNh7a
      1Uqmlu+88BI6nc6uz3vpJz/Bk4+9v3AhJUnC1RlSd1RVheu6aLVaWFlZGai3PSjdbheO46DZ
      bPLg2sbGBm9upes6ut0uXNfdsXNEETIQdoxYbtRgmiaSJMELr76OP/7K8/D9IPOcTqeDr79+
      DqfvuWfg9VTXGwTbrdBJSFzXxeLi4liu27ZtnDlzBsvLyyiXy2i1WlhdXYVhGFhcXES5XEat
      VkOtVttzZ23eS2gsVy6ZKh596EGEUYQfv/IqXr/VxBOPPIQwjvCFr34Xv/WJj8CyTLz6xpv4
      7Ef/Xmb3p/YkVN87jhydnTCM/rA96udTq9XAGMvkDQEYuD0qaZpKAbjbiaIIL7z0Cp595ik8
      86En8Myd+1vtDkq2CU3rKwHPffgZ/hrXdXknB7G/f9H/YRge2e8y6oyBUdB1vT+7WDbGuvvZ
      a5Pdbrc78sK+fv06VldXp76TdZ6NjQ0sLCxIG+A4sJfFT3k+o6LrOtbX13kp5KxAiXxSACSc
      fOPZUVAUBcvLy2CMYW1tbaSZvdOApmmI41jaAJI+cRyj1+vt2Z1IVCoVlEolrK+vo1wu72uQ
      3VGxubnJJ9VLAZBwN2fRzn/r1q1de3oSqqpieXkZ3W4Xa2trfR17Cm0DTdN4TpIUAMnQyi6g
      r+MvLCwUPjYMOg3W1tZQqVSm7jSo1+u4desWbNvG/wcbUNJDbTYixwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='self_health' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='test' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='time_health' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='underemployment' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
