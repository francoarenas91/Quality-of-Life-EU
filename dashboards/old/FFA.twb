<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.DatagraphCoreV1.true...DatagraphCoreV1 />
    <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...DatagraphNodeDashboardZoneVisibilityV1 />
    <_.fcp.DatagraphNodeSingleValueFieldV1.true...DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='1' max='20' min='1' />
      </column>
      <column caption='type of chart' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;age&quot;'>
        <calculation class='tableau' formula='&quot;age&quot;' />
        <members>
          <member value='&quot;education&quot;' />
          <member value='&quot;age&quot;' />
        </members>
      </column>
      <column caption='type of map' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;beds&quot;'>
        <calculation class='tableau' formula='&quot;beds&quot;' />
        <members>
          <member value='&quot;beds&quot;' />
          <member value='&quot;physicians&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='country data' inline='true' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_data' name='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/country' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='BMI.RData' table='[BMI.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='BMI.RData' table='[BMI.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='fruit_vegetables.RData' table='[fruit_vegetables.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_coleagues.RData' table='[good_rel_coleagues.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_supervisor.RData' table='[good_rel_supervisor.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='over_qualification.RData' table='[over_qualification.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='poverty.RData' table='[poverty.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='satisfaction.RData' table='[satisfaction.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='smokers.RData' table='[smokers.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='drinking.RData' table='[drinking.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='vacancy rate.RData' table='[vacancy rate.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='work_health_problem.RData' table='[work_health_problem.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age class (BMI.RData)]' value='[BMI.RData].[Age class]' />
          <map key='[Age class (drinking.RData)]' value='[drinking.RData].[Age class]' />
          <map key='[Age class (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Age class]' />
          <map key='[Age class (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Age class]' />
          <map key='[Age class (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Age class]' />
          <map key='[Age class (over_qualification.RData)]' value='[over_qualification.RData].[Age class]' />
          <map key='[Age class (poverty.RData)]' value='[poverty.RData].[Age class]' />
          <map key='[Age class (smokers.RData)]' value='[smokers.RData].[Age class]' />
          <map key='[Age class (underemployment.RData)]' value='[underemployment.RData].[Age class]' />
          <map key='[Age class (work_health_problem.RData)]' value='[work_health_problem.RData].[Age class]' />
          <map key='[Age class]' value='[time_health_enhancing.RData].[Age class]' />
          <map key='[Body Mass Index]' value='[BMI.RData].[Body Mass Index]' />
          <map key='[Degree of urbanisation]' value='[get_together.RData].[Degree of urbanisation]' />
          <map key='[Duration]' value='[time_health_enhancing.RData].[Duration]' />
          <map key='[Frequency (drinking.RData)]' value='[drinking.RData].[Frequency]' />
          <map key='[Frequency]' value='[get_together.RData].[Frequency]' />
          <map key='[Income and living conditions indicator]' value='[poverty.RData].[Income and living conditions indicator]' />
          <map key='[Individual type]' value='[get_together.RData].[Individual type]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (BMI.RData)]' value='[BMI.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' value='[drinking.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' value='[over_qualification.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (smokers.RData)]' value='[smokers.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' value='[work_health_problem.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[International Standard Classification of Education (ISCED 2011)]' value='[time_health_enhancing.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[Migration status]' value='[over_qualification.RData].[Migration status]' />
          <map key='[Number of portions]' value='[fruit_vegetables.RData].[Number of portions]' />
          <map key='[Quantile]' value='[get_together.RData].[Quantile]' />
          <map key='[Sex (BMI.RData)]' value='[BMI.RData].[Sex]' />
          <map key='[Sex (drinking.RData)]' value='[drinking.RData].[Sex]' />
          <map key='[Sex (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Sex]' />
          <map key='[Sex (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Sex]' />
          <map key='[Sex (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Sex]' />
          <map key='[Sex (over_qualification.RData)]' value='[over_qualification.RData].[Sex]' />
          <map key='[Sex (poverty.RData)]' value='[poverty.RData].[Sex]' />
          <map key='[Sex (smokers.RData)]' value='[smokers.RData].[Sex]' />
          <map key='[Sex (underemployment.RData)]' value='[underemployment.RData].[Sex]' />
          <map key='[Sex (work_health_problem.RData)]' value='[work_health_problem.RData].[Sex]' />
          <map key='[Sex]' value='[time_health_enhancing.RData].[Sex]' />
          <map key='[Size classes in number of employees]' value='[vacancy rate.RData].[Size classes in number of employees]' />
          <map key='[Smoking behaviour]' value='[smokers.RData].[Smoking behaviour]' />
          <map key='[Statistical classification of economic activities in the European Community (NACE Rev. 2)]' value='[vacancy rate.RData].[Statistical classification of economic activities in the European Community (NACE Rev. 2)]' />
          <map key='[Time frequency (BMI.RData)]' value='[BMI.RData].[Time frequency]' />
          <map key='[Time frequency (drinking.RData)]' value='[drinking.RData].[Time frequency]' />
          <map key='[Time frequency (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Time frequency]' />
          <map key='[Time frequency (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Time frequency]' />
          <map key='[Time frequency (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Time frequency]' />
          <map key='[Time frequency (over_qualification.RData)]' value='[over_qualification.RData].[Time frequency]' />
          <map key='[Time frequency (poverty.RData)]' value='[poverty.RData].[Time frequency]' />
          <map key='[Time frequency (smokers.RData)]' value='[smokers.RData].[Time frequency]' />
          <map key='[Time frequency (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[Time frequency]' />
          <map key='[Time frequency (underemployment.RData)]' value='[underemployment.RData].[Time frequency]' />
          <map key='[Time frequency (vacancy rate.RData)]' value='[vacancy rate.RData].[Time frequency]' />
          <map key='[Time frequency (work_health_problem.RData)]' value='[work_health_problem.RData].[Time frequency]' />
          <map key='[Time frequency]' value='[get_together.RData].[Time frequency]' />
          <map key='[Type of household]' value='[get_together.RData].[Type of household]' />
          <map key='[Unit of measure (BMI.RData)]' value='[BMI.RData].[Unit of measure]' />
          <map key='[Unit of measure (drinking.RData)]' value='[drinking.RData].[Unit of measure]' />
          <map key='[Unit of measure (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[Unit of measure]' />
          <map key='[Unit of measure (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[Unit of measure]' />
          <map key='[Unit of measure (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[Unit of measure]' />
          <map key='[Unit of measure (over_qualification.RData)]' value='[over_qualification.RData].[Unit of measure]' />
          <map key='[Unit of measure (poverty.RData)]' value='[poverty.RData].[Unit of measure]' />
          <map key='[Unit of measure (smokers.RData)]' value='[smokers.RData].[Unit of measure]' />
          <map key='[Unit of measure (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[Unit of measure]' />
          <map key='[Unit of measure (underemployment.RData)]' value='[underemployment.RData].[Unit of measure]' />
          <map key='[Unit of measure (vacancy rate.RData)]' value='[vacancy rate.RData].[Unit of measure]' />
          <map key='[Unit of measure (work_health_problem.RData)]' value='[work_health_problem.RData].[Unit of measure]' />
          <map key='[Unit of measure]' value='[get_together.RData].[Unit of measure]' />
          <map key='[age (satisfaction.RData)]' value='[satisfaction.RData].[age]' />
          <map key='[age (self_health.RData)]' value='[self_health.RData].[age]' />
          <map key='[age]' value='[activities.RData].[age]' />
          <map key='[country_name (satisfaction.RData)]' value='[satisfaction.RData].[country_name]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[education]' value='[satisfaction.RData].[education]' />
          <map key='[freq (satisfaction.RData)]' value='[satisfaction.RData].[freq]' />
          <map key='[freq (self_health.RData)]' value='[self_health.RData].[freq]' />
          <map key='[freq]' value='[activities.RData].[freq]' />
          <map key='[frequenc]' value='[activities.RData].[frequenc]' />
          <map key='[geo (BMI.RData)]' value='[BMI.RData].[geo]' />
          <map key='[geo (activities.RData)]' value='[activities.RData].[geo]' />
          <map key='[geo (drinking.RData)]' value='[drinking.RData].[geo]' />
          <map key='[geo (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[geo]' />
          <map key='[geo (get_together.RData)]' value='[get_together.RData].[geo]' />
          <map key='[geo (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[geo]' />
          <map key='[geo (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[geo]' />
          <map key='[geo (over_qualification.RData)]' value='[over_qualification.RData].[geo]' />
          <map key='[geo (poverty.RData)]' value='[poverty.RData].[geo]' />
          <map key='[geo (satisfaction.RData)]' value='[satisfaction.RData].[geo]' />
          <map key='[geo (self_health.RData)]' value='[self_health.RData].[geo]' />
          <map key='[geo (smokers.RData)]' value='[smokers.RData].[geo]' />
          <map key='[geo (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[geo]' />
          <map key='[geo (underemployment.RData)]' value='[underemployment.RData].[geo]' />
          <map key='[geo (vacancy rate.RData)]' value='[vacancy rate.RData].[geo]' />
          <map key='[geo (work_health_problem.RData)]' value='[work_health_problem.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[indicator]' value='[satisfaction.RData].[indicator]' />
          <map key='[isced11]' value='[activities.RData].[isced11]' />
          <map key='[lev_satis]' value='[satisfaction.RData].[lev_satis]' />
          <map key='[levels]' value='[self_health.RData].[levels]' />
          <map key='[quantile (self_health.RData)]' value='[self_health.RData].[quantile]' />
          <map key='[rownames (BMI.RData)]' value='[BMI.RData].[rownames]' />
          <map key='[rownames (activities.RData)]' value='[activities.RData].[rownames]' />
          <map key='[rownames (drinking.RData)]' value='[drinking.RData].[rownames]' />
          <map key='[rownames (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[rownames]' />
          <map key='[rownames (get_together.RData)]' value='[get_together.RData].[rownames]' />
          <map key='[rownames (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[rownames]' />
          <map key='[rownames (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[rownames]' />
          <map key='[rownames (over_qualification.RData)]' value='[over_qualification.RData].[rownames]' />
          <map key='[rownames (poverty.RData)]' value='[poverty.RData].[rownames]' />
          <map key='[rownames (satisfaction.RData)]' value='[satisfaction.RData].[rownames]' />
          <map key='[rownames (self_health.RData)]' value='[self_health.RData].[rownames]' />
          <map key='[rownames (smokers.RData)]' value='[smokers.RData].[rownames]' />
          <map key='[rownames (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[rownames]' />
          <map key='[rownames (underemployment.RData)]' value='[underemployment.RData].[rownames]' />
          <map key='[rownames (vacancy rate.RData)]' value='[vacancy rate.RData].[rownames]' />
          <map key='[rownames (work_health_problem.RData)]' value='[work_health_problem.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[sex (satisfaction.RData)]' value='[satisfaction.RData].[sex]' />
          <map key='[sex (self_health.RData)]' value='[self_health.RData].[sex]' />
          <map key='[sex]' value='[activities.RData].[sex]' />
          <map key='[time (BMI.RData)]' value='[BMI.RData].[time]' />
          <map key='[time (activities.RData)]' value='[activities.RData].[time]' />
          <map key='[time (drinking.RData)]' value='[drinking.RData].[time]' />
          <map key='[time (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[time]' />
          <map key='[time (get_together.RData)]' value='[get_together.RData].[time]' />
          <map key='[time (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[time]' />
          <map key='[time (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[time]' />
          <map key='[time (over_qualification.RData)]' value='[over_qualification.RData].[time]' />
          <map key='[time (poverty.RData)]' value='[poverty.RData].[time]' />
          <map key='[time (satisfaction.RData)]' value='[satisfaction.RData].[time]' />
          <map key='[time (self_health.RData)]' value='[self_health.RData].[time]' />
          <map key='[time (smokers.RData)]' value='[smokers.RData].[time]' />
          <map key='[time (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[time]' />
          <map key='[time (underemployment.RData)]' value='[underemployment.RData].[time]' />
          <map key='[time (vacancy rate.RData)]' value='[vacancy rate.RData].[time]' />
          <map key='[time (work_health_problem.RData)]' value='[work_health_problem.RData].[time]' />
          <map key='[time]' value='[geo_dates.RData].[time]' />
          <map key='[unit (satisfaction.RData)]' value='[satisfaction.RData].[unit]' />
          <map key='[unit (self_health.RData)]' value='[self_health.RData].[unit]' />
          <map key='[unit]' value='[activities.RData].[unit]' />
          <map key='[values (BMI.RData)]' value='[BMI.RData].[values]' />
          <map key='[values (drinking.RData)]' value='[drinking.RData].[values]' />
          <map key='[values (fruit_vegetables.RData)]' value='[fruit_vegetables.RData].[values]' />
          <map key='[values (get_together.RData)]' value='[get_together.RData].[values]' />
          <map key='[values (good_rel_coleagues.RData)]' value='[good_rel_coleagues.RData].[values]' />
          <map key='[values (good_rel_supervisor.RData)]' value='[good_rel_supervisor.RData].[values]' />
          <map key='[values (over_qualification.RData)]' value='[over_qualification.RData].[values]' />
          <map key='[values (poverty.RData)]' value='[poverty.RData].[values]' />
          <map key='[values (satisfaction.RData)]' value='[satisfaction.RData].[values]' />
          <map key='[values (self_health.RData)]' value='[self_health.RData].[values]' />
          <map key='[values (smokers.RData)]' value='[smokers.RData].[values]' />
          <map key='[values (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[values]' />
          <map key='[values (underemployment.RData)]' value='[underemployment.RData].[values]' />
          <map key='[values (vacancy rate.RData)]' value='[vacancy rate.RData].[values]' />
          <map key='[values (work_health_problem.RData)]' value='[work_health_problem.RData].[values]' />
          <map key='[values]' value='[activities.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Body Mass Index</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Body Mass Index]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Body Mass Index</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (BMI.RData)]</local-name>
            <parent-name>[BMI.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequenc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[frequenc]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>frequenc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>isced11</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of portions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Number of portions]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Number of portions</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (fruit_vegetables.RData)]</local-name>
            <parent-name>[fruit_vegetables.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Frequency]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Individual type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Individual type]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Individual type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Degree of urbanisation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Degree of urbanisation]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Degree of urbanisation</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of household</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of household]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Type of household</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Quantile]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (good_rel_coleagues.RData)]</local-name>
            <parent-name>[good_rel_coleagues.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (good_rel_supervisor.RData)]</local-name>
            <parent-name>[good_rel_supervisor.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Migration status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Migration status]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Migration status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (over_qualification.RData)]</local-name>
            <parent-name>[over_qualification.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income and living conditions indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income and living conditions indicator]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Income and living conditions indicator</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (poverty.RData)]</local-name>
            <parent-name>[poverty.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>education</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indicator]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>indicator</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lev_satis</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lev_satis]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>lev_satis</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (satisfaction.RData)]</local-name>
            <parent-name>[satisfaction.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quantile (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>levels</remote-name>
            <remote-type>129</remote-type>
            <local-name>[levels]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>levels</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking behaviour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Smoking behaviour]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Smoking behaviour</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (smokers.RData)]</local-name>
            <parent-name>[smokers.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Frequency (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (drinking.RData)]</local-name>
            <parent-name>[drinking.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Duration</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Statistical classification of economic activities in the European Community (NACE Rev. 2)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Statistical classification of economic activities in the European Community (NACE Rev. 2)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Statistical classification of economic activities in the European Community (NACE Rev. 2)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Size classes in number of employees</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Size classes in number of employees]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Size classes in number of employees</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (vacancy rate.RData)]</local-name>
            <parent-name>[vacancy rate.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancy rate.RData_A379AB40C52341268FB8320822157486]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (work_health_problem.RData)]</local-name>
            <parent-name>[work_health_problem.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age class (fruit vegetables.RData)' datatype='string' name='[Age class (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (good rel coleagues.RData)' datatype='string' name='[Age class (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (good rel supervisor.RData)' datatype='string' name='[Age class (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Age class (work health problem.RData)' datatype='string' name='[Age class (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([values (self_health.RData)]) / TOTAL(SUM([values (self_health.RData)]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
      </column>
      <column caption='Sort time health' datatype='real' name='[Calculation_-8711650466664865789]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Duration]=&quot;300 minutes or over&quot;&#13;&#10;then [values (time_health_enhancing.RData)]&#13;&#10;else null       &#13;&#10;END' />
      </column>
      <column caption='lvel satis string' datatype='string' name='[Calculation_1948932739171246081]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [lev_satis]&#13;&#10;when &apos;HIGH&apos; then &apos;high&apos;&#13;&#10;when &apos;LOW&apos; then &apos;low&apos;&#13;&#10;when &apos;MED&apos; then &apos;medium&apos;&#13;&#10;END' />
      </column>
      <column caption='select education chart' datatype='boolean' name='[Calculation_3260606198407761920 1]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2]=&apos;education&apos; then true else false end' />
      </column>
      <column caption='select age chart' datatype='boolean' name='[Calculation_3260606198407761920]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 2]=&apos;age&apos; then true else false end' />
      </column>
      <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
      <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
      <column caption='International Standard Classification of Education (ISCED 2011) (fruit vegetables.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='International Standard Classification of Education (ISCED 2011) (work health problem.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Number of portions]' role='dimension' type='nominal' />
      <column caption='Sex (fruit vegetables.RData)' datatype='string' name='[Sex (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (good rel coleagues.RData)' datatype='string' name='[Sex (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (good rel supervisor.RData)' datatype='string' name='[Sex (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Sex (work health problem.RData)' datatype='string' name='[Sex (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Smoking behaviour]' role='dimension' type='nominal' />
      <column caption='Time frequency (fruit vegetables.RData)' datatype='string' name='[Time frequency (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (good rel coleagues.RData)' datatype='string' name='[Time frequency (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (good rel supervisor.RData)' datatype='string' name='[Time frequency (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (over qualification.RData)' datatype='string' name='[Time frequency (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (work health problem.RData)' datatype='string' name='[Time frequency (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (fruit vegetables.RData)' datatype='string' name='[Unit of measure (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (good rel coleagues.RData)' datatype='string' name='[Unit of measure (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (good rel supervisor.RData)' datatype='string' name='[Unit of measure (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (work health problem.RData)' datatype='string' name='[Unit of measure (work_health_problem.RData)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='BMI.RData' datatype='table' name='[__tableau_internal_object_id__].[BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='activities.RData' datatype='table' name='[__tableau_internal_object_id__].[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='drinking.RData' datatype='table' name='[__tableau_internal_object_id__].[drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='fruit_vegetables.RData' datatype='table' name='[__tableau_internal_object_id__].[fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='get_together.RData' datatype='table' name='[__tableau_internal_object_id__].[get_together.RData_32250D35A0C042CC918EFD895D987719]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='good_rel_coleagues.RData' datatype='table' name='[__tableau_internal_object_id__].[good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='good_rel_supervisor.RData' datatype='table' name='[__tableau_internal_object_id__].[good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='over_qualification.RData' datatype='table' name='[__tableau_internal_object_id__].[over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='poverty.RData' datatype='table' name='[__tableau_internal_object_id__].[poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='satisfaction.RData' datatype='table' name='[__tableau_internal_object_id__].[satisfaction.RData_F091EC82533343EF8928718D907A4B8E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='self_health.RData' datatype='table' name='[__tableau_internal_object_id__].[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='smokers.RData' datatype='table' name='[__tableau_internal_object_id__].[smokers.RData_69F8F2CEDE24439196090F46BE0C30A7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_health_enhancing.RData' datatype='table' name='[__tableau_internal_object_id__].[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='underemployment.RData' datatype='table' name='[__tableau_internal_object_id__].[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='vacancy rate.RData' datatype='table' name='[__tableau_internal_object_id__].[vacancy rate.RData_A379AB40C52341268FB8320822157486]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='work_health_problem.RData' datatype='table' name='[__tableau_internal_object_id__].[work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B]' role='measure' type='quantitative' />
      <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='country name (satisfaction.RData)' datatype='string' name='[country_name (satisfaction.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
      <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
      <column caption='geo (fruit vegetables.RData)' datatype='string' name='[geo (fruit_vegetables.RData)]' role='dimension' type='nominal' />
      <column caption='geo (get together.RData)' datatype='string' name='[geo (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='geo (good rel coleagues.RData)' datatype='string' name='[geo (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
      <column caption='geo (good rel supervisor.RData)' datatype='string' name='[geo (good_rel_supervisor.RData)]' role='dimension' type='nominal' />
      <column caption='geo (over qualification.RData)' datatype='string' name='[geo (over_qualification.RData)]' role='dimension' type='nominal' />
      <column datatype='string' name='[geo (poverty.RData)]' role='dimension' type='nominal' />
      <column caption='geo (self health.RData)' datatype='string' name='[geo (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='geo (time health enhancing.RData)' datatype='string' name='[geo (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='geo (work health problem.RData)' datatype='string' name='[geo (work_health_problem.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' type='nominal' />
      <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
      <column caption='Isced11' datatype='string' name='[isced11]' role='dimension' type='nominal' />
      <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
      <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
      <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='rownames (fruit vegetables.RData)' datatype='integer' name='[rownames (fruit_vegetables.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (get together.RData)' datatype='integer' name='[rownames (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (good rel coleagues.RData)' datatype='integer' name='[rownames (good_rel_coleagues.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (good rel supervisor.RData)' datatype='integer' name='[rownames (good_rel_supervisor.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (over qualification.RData)' datatype='integer' name='[rownames (over_qualification.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (self health.RData)' datatype='integer' name='[rownames (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (time health enhancing.RData)' datatype='integer' name='[rownames (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (work health problem.RData)' datatype='integer' name='[rownames (work_health_problem.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='time (fruit vegetables.RData)' datatype='date' name='[time (fruit_vegetables.RData)]' role='dimension' type='ordinal' />
      <column caption='time (get together.RData)' datatype='date' name='[time (get_together.RData)]' role='dimension' type='ordinal' />
      <column caption='time (good rel coleagues.RData)' datatype='date' name='[time (good_rel_coleagues.RData)]' role='dimension' type='ordinal' />
      <column caption='time (good rel supervisor.RData)' datatype='date' name='[time (good_rel_supervisor.RData)]' role='dimension' type='ordinal' />
      <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
      <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
      <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
      <column caption='time (work health problem.RData)' datatype='date' name='[time (work_health_problem.RData)]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
      <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='values (fruit vegetables.RData)' datatype='real' name='[values (fruit_vegetables.RData)]' role='measure' type='quantitative' />
      <column caption='values (get together.RData)' datatype='real' name='[values (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='values (good rel coleagues.RData)' datatype='real' name='[values (good_rel_coleagues.RData)]' role='measure' type='quantitative' />
      <column caption='values (good rel supervisor.RData)' datatype='real' name='[values (good_rel_supervisor.RData)]' role='measure' type='quantitative' />
      <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
      <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='values (work health problem.RData)' datatype='real' name='[values (work_health_problem.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1948932739171246081]' derivation='None' name='[none:Calculation_1948932739171246081:nk]' pivot='key' type='nominal' />
      <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
      <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of portions]' derivation='None' name='[none:Number of portions:nk]' pivot='key' type='nominal' />
      <column-instance column='[Smoking behaviour]' derivation='None' name='[none:Smoking behaviour:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[geo (poverty.RData)]' derivation='None' name='[none:geo (poverty.RData):nk]' pivot='key' type='nominal' />
      <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
      <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
      <group caption='Action (country_name)' hidden='true' name='[Action (country_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:geo (poverty.RData):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;EL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EU27_2020&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EU28&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EU27_2007&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:lev_satis:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MED&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union - 27 countries (2007-2013)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union - 27 countries (from 2020)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union - 28 countries (2013-2020)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1948932739171246081:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;medium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;low&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:levels:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Very good&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Very good or good&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Very bad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bad or very bad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Frequency (drinking.RData):nk]' palette='sf_bluegrass' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Never or not in the last 12 months&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Less than once a month&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;At least once a week&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Every month&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Smoking behaviour:nk]' palette='gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;20 or more cigarettes per day&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Less than 20 cigarettes per day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Number of portions:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;5 portions or more&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;From 1 to 4 portions&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0 portions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Duration:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zero minutes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='type of chart' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;age&quot;'>
          <calculation class='tableau' formula='&quot;age&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='BMI.RData' id='BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='BMI.RData' table='[BMI.RData]' type='table' />
            </properties>
          </object>
          <object caption='activities.RData' id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
            </properties>
          </object>
          <object caption='drinking.RData' id='drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='drinking.RData' table='[drinking.RData]' type='table' />
            </properties>
          </object>
          <object caption='fruit_vegetables.RData' id='fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='fruit_vegetables.RData' table='[fruit_vegetables.RData]' type='table' />
            </properties>
          </object>
          <object caption='geo_dates.RData' id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='get_together.RData' id='get_together.RData_32250D35A0C042CC918EFD895D987719'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
            </properties>
          </object>
          <object caption='good_rel_coleagues.RData' id='good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_coleagues.RData' table='[good_rel_coleagues.RData]' type='table' />
            </properties>
          </object>
          <object caption='good_rel_supervisor.RData' id='good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='good_rel_supervisor.RData' table='[good_rel_supervisor.RData]' type='table' />
            </properties>
          </object>
          <object caption='over_qualification.RData' id='over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='over_qualification.RData' table='[over_qualification.RData]' type='table' />
            </properties>
          </object>
          <object caption='poverty.RData' id='poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='poverty.RData' table='[poverty.RData]' type='table' />
            </properties>
          </object>
          <object caption='satisfaction.RData' id='satisfaction.RData_F091EC82533343EF8928718D907A4B8E'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='satisfaction.RData' table='[satisfaction.RData]' type='table' />
            </properties>
          </object>
          <object caption='self_health.RData' id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
            </properties>
          </object>
          <object caption='smokers.RData' id='smokers.RData_69F8F2CEDE24439196090F46BE0C30A7'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='smokers.RData' table='[smokers.RData]' type='table' />
            </properties>
          </object>
          <object caption='time_health_enhancing.RData' id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
            </properties>
          </object>
          <object caption='underemployment.RData' id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
            </properties>
          </object>
          <object caption='vacancy rate.RData' id='vacancy rate.RData_A379AB40C52341268FB8320822157486'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='vacancy rate.RData' table='[vacancy rate.RData]' type='table' />
            </properties>
          </object>
          <object caption='work_health_problem.RData' id='work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='work_health_problem.RData' table='[work_health_problem.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (BMI.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (BMI.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='BMI.RData_4B0BA3F8F7A847D384242D24AB0A524B' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (activities.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (activities.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo (smokers.RData)]' />
                <expression op='[geo (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Sex (smokers.RData)]' />
                <expression op='[Sex (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[International Standard Classification of Education (ISCED 2011) (smokers.RData)]' />
                <expression op='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Age class (smokers.RData)]' />
                <expression op='[Age class (drinking.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time (smokers.RData)]' />
                <expression op='[time (drinking.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='smokers.RData_69F8F2CEDE24439196090F46BE0C30A7' />
            <second-end-point object-id='drinking.RData_F0CCC19A1BF04C539CB761DF5B39AA37' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (fruit_vegetables.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (fruit_vegetables.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='fruit_vegetables.RData_B392162836BD480BBE6E6EDAFF39673A' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (get_together.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (get_together.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='get_together.RData_32250D35A0C042CC918EFD895D987719' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (good_rel_coleagues.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (good_rel_coleagues.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Age class (good_rel_coleagues.RData)]' />
                <expression op='[Age class (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[geo (good_rel_coleagues.RData)]' />
                <expression op='[geo (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Sex (good_rel_coleagues.RData)]' />
                <expression op='[Sex (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time (good_rel_coleagues.RData)]' />
                <expression op='[time (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Time frequency (good_rel_coleagues.RData)]' />
                <expression op='[Time frequency (good_rel_supervisor.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[Unit of measure (good_rel_coleagues.RData)]' />
                <expression op='[Unit of measure (good_rel_supervisor.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='good_rel_coleagues.RData_24D3AED9C1884ED48B8E37EE699C0E5D' unique-key='true' />
            <second-end-point object-id='good_rel_supervisor.RData_F5025C9F6F264A2F96152A4C6D010072' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (over_qualification.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (over_qualification.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='over_qualification.RData_9A49312045AF4638BBA41FB17873FBE4' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (poverty.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (poverty.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='poverty.RData_DB85B0A0889B4888B3BFB44D4EA754BC' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (satisfaction.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (satisfaction.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='satisfaction.RData_F091EC82533343EF8928718D907A4B8E' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (self_health.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (self_health.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (smokers.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (smokers.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='smokers.RData_69F8F2CEDE24439196090F46BE0C30A7' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (time_health_enhancing.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (time_health_enhancing.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (underemployment.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (underemployment.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (vacancy rate.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (vacancy rate.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='vacancy rate.RData_A379AB40C52341268FB8320822157486' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (work_health_problem.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (work_health_problem.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='work_health_problem.RData_FB145C7588634F3E88E33AFD3648EF6B' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='city data' inline='true' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/city' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[TIME_PERIOD (living_cond.RData)]' value='[living_cond.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[city_code (living_cond.RData)]' value='[living_cond.RData].[city_code]' />
          <map key='[city_code]' value='[geo_dates.RData].[city_code]' />
          <map key='[city_name]' value='[geo_dates.RData].[city_name]' />
          <map key='[country_code]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[freq]' value='[living_cond.RData].[freq]' />
          <map key='[indic_ur]' value='[living_cond.RData].[indic_ur]' />
          <map key='[rownames (living_cond.RData)]' value='[living_cond.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[values]' value='[living_cond.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indic_ur</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indic_ur]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>indic_ur</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TIME PERIOD (living cond.RData)' datatype='date' name='[TIME_PERIOD (living_cond.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='living_cond.RData' datatype='table' name='[__tableau_internal_object_id__].[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]' role='measure' type='quantitative' />
      <column caption='city code (living cond.RData)' datatype='string' name='[city_code (living_cond.RData)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Code' datatype='string' name='[city_code]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
          <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
          <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
          <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
          <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
          <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
          <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
          <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
          <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
          <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
          <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
          <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
          <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
          <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
          <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
          <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
          <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
          <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
          <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
          <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
        </semantic-values>
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
      <column caption='rownames (living cond.RData)' datatype='integer' name='[rownames (living_cond.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_code:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='living_cond.RData' id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[city_code]' />
                <expression op='[city_code (living_cond.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (living_cond.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9' unique-key='true' />
            <second-end-point object-id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='region_data' inline='true' name='federated.0m1qf021ngu4lq199qvkn02knoxn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1pdfkm21soii8n16rlhqy1sggv47'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/region' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='hosp_beds.RData' table='[hosp_beds.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='risk_poverty.RData' table='[risk_poverty.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='unemployment_rate.RData' table='[unemployment_rate.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age class]' value='[unemployment_rate.RData].[Age class]' />
          <map key='[International Standard Classification of Education (ISCED 2011)]' value='[unemployment_rate.RData].[International Standard Classification of Education (ISCED 2011)]' />
          <map key='[NUTS2_name (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[NUTS2_name]' />
          <map key='[NUTS2_name]' value='[geo_dates.RData].[NUTS2_name]' />
          <map key='[Sex]' value='[unemployment_rate.RData].[Sex]' />
          <map key='[TIME_PERIOD (hosp_beds.RData)]' value='[hosp_beds.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (physicians.RData)]' value='[physicians.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (risk_poverty.RData)]' value='[risk_poverty.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (road_accidents.RData)]' value='[road_accidents.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (unemployment_rate.RData)]' value='[unemployment_rate.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[Time frequency (hosp_beds.RData)]' value='[hosp_beds.RData].[Time frequency]' />
          <map key='[Time frequency (risk_poverty.RData)]' value='[risk_poverty.RData].[Time frequency]' />
          <map key='[Time frequency (road_accidents.RData)]' value='[road_accidents.RData].[Time frequency]' />
          <map key='[Time frequency (unemployment_rate.RData)]' value='[unemployment_rate.RData].[Time frequency]' />
          <map key='[Time frequency]' value='[physicians.RData].[Time frequency]' />
          <map key='[Type of victim]' value='[road_accidents.RData].[Type of victim]' />
          <map key='[Unit of measure (hosp_beds.RData)]' value='[hosp_beds.RData].[Unit of measure]' />
          <map key='[Unit of measure (risk_poverty.RData)]' value='[risk_poverty.RData].[Unit of measure]' />
          <map key='[Unit of measure (road_accidents.RData)]' value='[road_accidents.RData].[Unit of measure]' />
          <map key='[Unit of measure (unemployment_rate.RData)]' value='[unemployment_rate.RData].[Unit of measure]' />
          <map key='[Unit of measure]' value='[physicians.RData].[Unit of measure]' />
          <map key='[country_code (geo_dates.RData)]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_code]' value='[nama_10r_2hhinc.RData].[country_code]' />
          <map key='[country_name (geo_dates.RData)]' value='[geo_dates.RData].[country_name]' />
          <map key='[country_name]' value='[nama_10r_2hhinc.RData].[country_name]' />
          <map key='[freq (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[freq]' />
          <map key='[geo (hosp_beds.RData)]' value='[hosp_beds.RData].[geo]' />
          <map key='[geo (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[geo]' />
          <map key='[geo (physicians.RData)]' value='[physicians.RData].[geo]' />
          <map key='[geo (risk_poverty.RData)]' value='[risk_poverty.RData].[geo]' />
          <map key='[geo (road_accidents.RData)]' value='[road_accidents.RData].[geo]' />
          <map key='[geo (unemployment_rate.RData)]' value='[unemployment_rate.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[rownames (hosp_beds.RData)]' value='[hosp_beds.RData].[rownames]' />
          <map key='[rownames (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[rownames]' />
          <map key='[rownames (physicians.RData)]' value='[physicians.RData].[rownames]' />
          <map key='[rownames (risk_poverty.RData)]' value='[risk_poverty.RData].[rownames]' />
          <map key='[rownames (road_accidents.RData)]' value='[road_accidents.RData].[rownames]' />
          <map key='[rownames (unemployment_rate.RData)]' value='[unemployment_rate.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[unit (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[unit]' />
          <map key='[values (hosp_beds.RData)]' value='[hosp_beds.RData].[values]' />
          <map key='[values (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[values]' />
          <map key='[values (risk_poverty.RData)]' value='[risk_poverty.RData].[values]' />
          <map key='[values (road_accidents.RData)]' value='[road_accidents.RData].[values]' />
          <map key='[values (unemployment_rate.RData)]' value='[unemployment_rate.RData].[values]' />
          <map key='[values]' value='[physicians.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (hosp_beds.RData)]</local-name>
            <parent-name>[hosp_beds.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (risk_poverty.RData)]</local-name>
            <parent-name>[risk_poverty.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of victim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of victim]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>Type of victim</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time frequency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time frequency (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Time frequency</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Standard Classification of Education (ISCED 2011)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[International Standard Classification of Education (ISCED 2011)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>International Standard Classification of Education (ISCED 2011)</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age class]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Age class</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit of measure (unemployment_rate.RData)]</local-name>
            <parent-name>[unemployment_rate.RData]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank regions umeployment' datatype='integer' name='[Calculation_1295347907822551040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(avg([values (unemployment_rate.RData)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='map physicians' datatype='boolean' name='[Calculation_3260606198754942977 1]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 3] = &quot;physicians&quot; then true else false end' />
      </column>
      <column caption='map beds' datatype='boolean' name='[Calculation_3260606198754942977]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 3] = &quot;beds&quot; then true else false end' />
      </column>
      <column caption='low regions' datatype='boolean' name='[Calculation_5004062136032288769 1]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_-8711650466649944059]&gt;=(241-[Parameters].[Parameter 1]) then true else false end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='high regions' datatype='boolean' name='[Calculation_5004062136032288769]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_-8711650466649944059]&lt;=[Parameters].[Parameter 1] then true else false end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
      <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
        <semantic-values semantic-role='[NUTS].[Name]'>
          <semantic-value key='&quot;Ciudad de Ceuta&quot;' value='&quot;ES64&quot;' />
          <semantic-value key='&quot;Ciudad de Melilla&quot;' value='&quot;ES63&quot;' />
          <semantic-value key='&quot;Comunitat Valenciana&quot;' value='&quot;ES52&quot;' />
        </semantic-values>
      </column>
      <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
        <semantic-values semantic-role='[NUTS].[Name]'>
          <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
        </semantic-values>
      </column>
      <column caption='TIME PERIOD (hosp beds.RData)' datatype='date' name='[TIME_PERIOD (hosp_beds.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (physicians.RData)' datatype='date' name='[TIME_PERIOD (physicians.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (risk poverty.RData)' datatype='date' name='[TIME_PERIOD (risk_poverty.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (road accidents.RData)' datatype='date' name='[TIME_PERIOD (road_accidents.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <column caption='Time frequency (hosp beds.RData)' datatype='string' name='[Time frequency (hosp_beds.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (risk poverty.RData)' datatype='string' name='[Time frequency (risk_poverty.RData)]' role='dimension' type='nominal' />
      <column caption='Time frequency (unemployment rate.RData)' datatype='string' name='[Time frequency (unemployment_rate.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (hosp beds.RData)' datatype='string' name='[Unit of measure (hosp_beds.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (risk poverty.RData)' datatype='string' name='[Unit of measure (risk_poverty.RData)]' role='dimension' type='nominal' />
      <column caption='Unit of measure (unemployment rate.RData)' datatype='string' name='[Unit of measure (unemployment_rate.RData)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='hosp_beds.RData' datatype='table' name='[__tableau_internal_object_id__].[hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='income' datatype='table' name='[__tableau_internal_object_id__].[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='physicians.RData' datatype='table' name='[__tableau_internal_object_id__].[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='risk_poverty.RData' datatype='table' name='[__tableau_internal_object_id__].[risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='road_accidents.RData' datatype='table' name='[__tableau_internal_object_id__].[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='unemployment_rate.RData' datatype='table' name='[__tableau_internal_object_id__].[unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF]' role='measure' type='quantitative' />
      <column datatype='string' name='[country_code (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='geo (hosp beds.RData)' datatype='string' name='[geo (hosp_beds.RData)]' role='dimension' type='nominal' />
      <column caption='geo (nama 10r 2hhinc.RData)' datatype='string' name='[geo (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='geo (risk poverty.RData)' datatype='string' name='[geo (risk_poverty.RData)]' role='dimension' type='nominal' />
      <column caption='geo (road accidents.RData)' datatype='string' name='[geo (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='geo (unemployment rate.RData)' datatype='string' name='[geo (unemployment_rate.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column caption='rownames (hosp beds.RData)' datatype='integer' name='[rownames (hosp_beds.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (nama 10r 2hhinc.RData)' datatype='integer' name='[rownames (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (risk poverty.RData)' datatype='integer' name='[rownames (risk_poverty.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (road accidents.RData)' datatype='integer' name='[rownames (road_accidents.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (unemployment rate.RData)' datatype='integer' name='[rownames (unemployment_rate.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='values (hosp beds.RData)' datatype='real' name='[values (hosp_beds.RData)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
      </column>
      <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='values (risk poverty.RData)' datatype='real' name='[values (risk_poverty.RData)]' role='measure' type='quantitative' />
      <column caption='values (road accidents.RData)' datatype='real' name='[values (road_accidents.RData)]' role='measure' type='quantitative' />
      <column aggregation='None' caption='values (unemployment rate.RData) (bin) (1)' datatype='integer' name='[values (unemployment rate.RData) (bin) 1]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
      </column>
      <column aggregation='None' datatype='integer' name='[values (unemployment rate.RData) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
      </column>
      <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:International Standard Classification of Education (ISCED 2011):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;No response&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name (geo_dates.RData):nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range granularity='1' max='20' min='1' />
        </column>
        <column caption='type of map' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;beds&quot;'>
          <calculation class='tableau' formula='&quot;beds&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='hosp_beds.RData' id='hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='hosp_beds.RData' table='[hosp_beds.RData]' type='table' />
            </properties>
          </object>
          <object caption='income' id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
            </properties>
          </object>
          <object caption='physicians.RData' id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
            </properties>
          </object>
          <object caption='risk_poverty.RData' id='risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='risk_poverty.RData' table='[risk_poverty.RData]' type='table' />
            </properties>
          </object>
          <object caption='road_accidents.RData' id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
            </properties>
          </object>
          <object caption='unemployment_rate.RData' id='unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='unemployment_rate.RData' table='[unemployment_rate.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (hosp_beds.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (hosp_beds.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='hosp_beds.RData_49C35167E6CC4FB3B25FD8A9D8D9FB7F' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (nama_10r_2hhinc.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (nama_10r_2hhinc.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (physicians.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (physicians.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (risk_poverty.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (risk_poverty.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='risk_poverty.RData_938FFAA6AEA246068AAD4509B48E02FE' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (road_accidents.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (road_accidents.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (unemployment_rate.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (unemployment_rate.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point guaranteed-value='true' object-id='unemployment_rate.RData_2206B86975604A2DB7DF16E3418921FF' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='activities'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='None' name='[none:age:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[frequenc]' derivation='None' name='[none:frequenc:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex]' derivation='None' name='[none:sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit]' derivation='None' name='[none:unit:nk]' pivot='key' type='nominal' />
            <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (activities.RData)]' role='dimension' type='ordinal' />
            <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[time (activities.RData)]' derivation='Year' name='[yr:time (activities.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]'>
            <groupfilter function='member' level='[none:age:nk]' member='&quot;From 16 to 24 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]'>
            <groupfilter function='member' level='[none:frequenc:nk]' member='&quot;At least once&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]'>
            <groupfilter function='member' level='[none:sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit:nk]' />
              <groupfilter function='member' level='[none:unit:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]'>
            <groupfilter function='member' level='[yr:time (activities.RData):ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' />
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{43001160-6874-4204-824A-001E443F5538}' />
    </worksheet>
    <worksheet name='bad_habits_age'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Alcohol and tobacco consumption</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Smoking behaviour]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (smokers.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (drinking.RData)]' derivation='Avg' name='[avg:values (drinking.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (drinking.RData)]' derivation='None' name='[none:Age class (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (drinking.RData)]' derivation='None' name='[none:Sex (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Smoking behaviour]' derivation='None' name='[none:Smoking behaviour:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (drinking.RData)]' derivation='None' name='[none:Unit of measure (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (smokers.RData)]' derivation='None' name='[none:Unit of measure (smokers.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (smokers.RData)]' derivation='Sum' name='[sum:values (smokers.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[time (drinking.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (drinking.RData)]' role='measure' type='quantitative' />
            <column datatype='real' name='[values (smokers.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (drinking.RData)]' derivation='Year' name='[yr:time (drinking.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 15 to 19 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 25 to 29 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 55 to 64 years&quot;' />
              <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;From 65 to 74 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Never or not in the last 12 months&quot;</bucket>
              <bucket>&quot;Less than once a month&quot;</bucket>
              <bucket>&quot;Every month&quot;</bucket>
              <bucket>&quot;At least once a week&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Smoking behaviour:nk]' />
              <groupfilter function='member' level='[none:Smoking behaviour:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 20 cigarettes per day&quot;</bucket>
              <bucket>&quot;20 or more cigarettes per day&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (drinking.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (drinking.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (smokers.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]'>
            <groupfilter function='member' level='[yr:time (drinking.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
            <format attr='text-orientation' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7361326217651367' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.52674031257629395' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk] + [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (smokers.RData):qk])</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</cols>
      </table>
      <simple-id uuid='{62315233-3BB1-4109-9706-89FEFAF710FF}' />
    </worksheet>
    <worksheet name='bad_habits_educ'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Alcohol and tobacco consumption</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Smoking behaviour]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (smokers.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (drinking.RData)]' derivation='Avg' name='[avg:values (drinking.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (smokers.RData)]' derivation='Avg' name='[avg:values (smokers.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (drinking.RData)]' derivation='None' name='[none:Age class (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (drinking.RData)]' derivation='None' name='[none:Sex (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Smoking behaviour]' derivation='None' name='[none:Smoking behaviour:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (drinking.RData)]' derivation='None' name='[none:Unit of measure (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (smokers.RData)]' derivation='None' name='[none:Unit of measure (smokers.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (drinking.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (drinking.RData)]' role='measure' type='quantitative' />
            <column datatype='real' name='[values (smokers.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (drinking.RData)]' derivation='Year' name='[yr:time (drinking.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Never or not in the last 12 months&quot;</bucket>
              <bucket>&quot;Less than once a month&quot;</bucket>
              <bucket>&quot;Every month&quot;</bucket>
              <bucket>&quot;At least once a week&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' member='%null%' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Smoking behaviour:nk]' />
              <groupfilter function='member' level='[none:Smoking behaviour:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 20 cigarettes per day&quot;</bucket>
              <bucket>&quot;20 or more cigarettes per day&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (drinking.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (drinking.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (smokers.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]'>
            <groupfilter function='member' level='[yr:time (drinking.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7361326217651367' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.52674031257629395' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk] + [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (smokers.RData):qk])</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</cols>
      </table>
      <simple-id uuid='{AFFCE484-9E6F-4A70-9048-BE9C0FA648D7}' />
    </worksheet>
    <worksheet name='bad_habits_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</run>
            <run>&gt; heavy episodic drinking </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Time frequency (drinking.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (drinking.RData)]' derivation='None' name='[none:Age class (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (drinking.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (drinking.RData)]' derivation='None' name='[none:Sex (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Time frequency (drinking.RData)]' derivation='None' name='[none:Time frequency (drinking.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (drinking.RData)]' derivation='Sum' name='[sum:values (drinking.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[time (drinking.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (drinking.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (drinking.RData)]' derivation='Year' name='[yr:time (drinking.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Frequency (drinking.RData):nk]' member='&quot;Every month&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (drinking.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (drinking.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Time frequency (drinking.RData):nk]' />
              <groupfilter function='member' level='[none:Time frequency (drinking.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]'>
            <groupfilter function='member' level='[yr:time (drinking.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (drinking.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2A735053-7542-406D-973A-310D5DAF50C6}' />
    </worksheet>
    <worksheet name='beds'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Hospital beds per hundred thousand inhabitants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column caption='Unit of measure (hosp beds.RData)' datatype='string' name='[Unit of measure (hosp_beds.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (hosp_beds.RData)]' derivation='Avg' name='[avg:values (hosp_beds.RData):qk]' pivot='key' type='quantitative' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (hosp_beds.RData)]' derivation='None' name='[none:Unit of measure (hosp_beds.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column caption='values (hosp beds.RData)' datatype='real' name='[values (hosp_beds.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (hosp_beds.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (hosp_beds.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (hosp_beds.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' filter-group='7'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (hosp_beds.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='4536619.1275120489' min='-4386859.0726072043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='11466676.869642813' min='3938184.1151457047' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>&lt;</run>
                <run bold='true'>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2BBD2C5C-868E-4A4F-B8F4-D1F08000DEE8}' />
    </worksheet>
    <worksheet name='city living cond'>
      <table>
        <view>
          <datasources>
            <datasource caption='city data' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wyeh3p1rd106b1g75pnn0q7e2uf'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
                <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
                <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
                <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
                <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
                <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
                <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
                <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
                <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
                <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
                <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
                <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
                <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
                <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
                <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
                <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
                <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
                <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
                <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
                <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[indic_ur]' derivation='None' name='[none:indic_ur:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]'>
            <groupfilter function='member' level='[none:indic_ur:nk]' member='&quot;Average disposable annual household income - EUR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]' field-type='quantitative' max='4207445.3698918596' min='-1285432.8226952429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]' field-type='quantitative' max='7704729.0012606503' min='4285024.9978328897' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' />
              <size column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]</rows>
        <cols>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{79C0A39F-02CC-4F34-84B1-586ECDD54936}' />
    </worksheet>
    <worksheet name='fruits_veg_age'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Daily consumption of fruit and vegetables</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (fruit vegetables.RData)' datatype='string' name='[Age class (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (fruit vegetables.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Number of portions]' role='dimension' type='nominal' />
            <column caption='Sex (fruit vegetables.RData)' datatype='string' name='[Sex (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (fruit_vegetables.RData)]' derivation='None' name='[none:Age class (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of portions]' derivation='None' name='[none:Number of portions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (fruit_vegetables.RData)]' derivation='None' name='[none:Sex (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (fruit_vegetables.RData)]' derivation='Sum' name='[sum:values (fruit_vegetables.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (fruit vegetables.RData)' datatype='date' name='[time (fruit_vegetables.RData)]' role='dimension' type='ordinal' />
            <column caption='values (fruit vegetables.RData)' datatype='real' name='[values (fruit_vegetables.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (fruit_vegetables.RData)]' derivation='Year' name='[yr:time (fruit_vegetables.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;65 years or over&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 15 to 19 years&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 25 to 29 years&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 25 to 34 years&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;From 55 to 64 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;From 15 to 19 years&quot;</bucket>
              <bucket>&quot;From 20 to 24 years&quot;</bucket>
              <bucket>&quot;From 25 to 29 years&quot;</bucket>
              <bucket>&quot;From 25 to 34 years&quot;</bucket>
              <bucket>&quot;From 35 to 44 years&quot;</bucket>
              <bucket>&quot;From 45 to 54 years&quot;</bucket>
              <bucket>&quot;From 55 to 64 years&quot;</bucket>
              <bucket>&quot;65 years or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;5 portions or more&quot;</bucket>
              <bucket>&quot;From 1 to 4 portions&quot;</bucket>
              <bucket>&quot;0 portions&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (fruit_vegetables.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]'>
            <groupfilter function='member' level='[yr:time (fruit_vegetables.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</cols>
      </table>
      <simple-id uuid='{E552B3D7-1ED1-4582-914B-3F1987A0F62C}' />
    </worksheet>
    <worksheet name='fruits_veg_educ'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Daily consumption of fruit and vegetables</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (fruit vegetables.RData)' datatype='string' name='[Age class (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (fruit vegetables.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Number of portions]' role='dimension' type='nominal' />
            <column caption='Sex (fruit vegetables.RData)' datatype='string' name='[Sex (fruit_vegetables.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (fruit_vegetables.RData)]' derivation='None' name='[none:Age class (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of portions]' derivation='None' name='[none:Number of portions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (fruit_vegetables.RData)]' derivation='None' name='[none:Sex (fruit_vegetables.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (fruit_vegetables.RData)]' derivation='Sum' name='[sum:values (fruit_vegetables.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (fruit vegetables.RData)' datatype='date' name='[time (fruit_vegetables.RData)]' role='dimension' type='ordinal' />
            <column caption='values (fruit vegetables.RData)' datatype='real' name='[values (fruit_vegetables.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (fruit_vegetables.RData)]' derivation='Year' name='[yr:time (fruit_vegetables.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (fruit_vegetables.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;5 portions or more&quot;</bucket>
              <bucket>&quot;From 1 to 4 portions&quot;</bucket>
              <bucket>&quot;0 portions&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (fruit_vegetables.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]'>
            <groupfilter function='member' level='[yr:time (fruit_vegetables.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</cols>
      </table>
      <simple-id uuid='{152150BC-B1F9-4A62-BE69-1E5A4FC01C9D}' />
    </worksheet>
    <worksheet name='health_income'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Percentage of pupulation that rates their health statuts as <]]></run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</run>
            <run fontsize='10'>&gt; by income quantile</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (self_health.RData)]' derivation='Year' name='[yr:time (self_health.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:levels:nk]' member='&quot;Bad&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:quantile (self_health.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]'>
            <groupfilter function='member' level='[yr:time (self_health.RData):ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' value='*#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</cols>
      </table>
      <simple-id uuid='{C65641FB-E666-48D9-B2A6-C05E98FE86D1}' />
    </worksheet>
    <worksheet name='health_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Percentage of population that rate their health levels as <]]></run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</run>
            <run fontsize='10'>&gt;:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (self_health.RData)]' derivation='Year' name='[yr:time (self_health.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:levels:nk]' member='&quot;Bad&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]'>
            <groupfilter function='member' level='[yr:time (self_health.RData):ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]' field-type='quantitative' max='7447868.6706271078' min='-6044998.8529582657' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]' field-type='quantitative' max='11519069.160746796' min='3359096.9807367194' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FB0DE9FE-6F28-4BF0-A97F-1E28CEEDB8D8}' />
    </worksheet>
    <worksheet name='income'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Income per capita in euros (&lt;</run>
            <run fontsize='10'>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Ciudad de Ceuta&quot;' value='&quot;ES64&quot;' />
                <semantic-value key='&quot;Ciudad de Melilla&quot;' value='&quot;ES63&quot;' />
                <semantic-value key='&quot;Comunitat Valenciana&quot;' value='&quot;ES52&quot;' />
              </semantic-values>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[NUTS2_name (nama_10r_2hhinc.RData)]' derivation='None' name='[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (nama_10r_2hhinc.RData)]' derivation='None' name='[none:freq (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:freq (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='7341571.9361555912' min='-6030686.2951889159' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='10396204.193777176' min='2754913.4342737272' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD327D37-FF64-4260-8EDA-774862904D4E}' />
    </worksheet>
    <worksheet name='income low'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;</run>
            <run fontsize='10'>[Parameters].[Parameter 1]</run>
            <run fontsize='10'><![CDATA[> regions with the lowest income per capita (<]]></run>
            <run fontsize='10'>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='low regions' datatype='boolean' name='[Calculation_5004062136032288769 1]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_-8711650466649944059]&gt;=(241-[Parameters].[Parameter 1]) then true else false end'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Avg' name='[avg:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (nama_10r_2hhinc.RData)]' derivation='None' name='[none:unit (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5004062136032288769 1]' derivation='User' name='[usr:Calculation_5004062136032288769 1:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Calculation_-8711650466649944059]' ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[NUTS2_name]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
              </table-calc>
            </column-instance>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' using='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (nama_10r_2hhinc.RData):qk]' />
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:unit (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769 1:nk]'>
            <groupfilter function='member' level='[usr:Calculation_5004062136032288769 1:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]</cols>
      </table>
      <simple-id uuid='{7931E422-7413-4DCE-BC62-94358CDB3573}' />
    </worksheet>
    <worksheet name='income top'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;</run>
            <run fontsize='10'>[Parameters].[Parameter 1]</run>
            <run fontsize='10'><![CDATA[> regions with the highest income per capita (<]]></run>
            <run fontsize='10'>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions' datatype='integer' name='[Calculation_-8711650466649944059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (nama_10r_2hhinc.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='high regions' datatype='boolean' name='[Calculation_5004062136032288769]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_-8711650466649944059]&lt;=[Parameters].[Parameter 1] then true else false end'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Avg' name='[avg:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (nama_10r_2hhinc.RData)]' derivation='None' name='[none:unit (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5004062136032288769]' derivation='User' name='[usr:Calculation_5004062136032288769:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Calculation_-8711650466649944059]' ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[NUTS2_name]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
              </table-calc>
            </column-instance>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' using='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (nama_10r_2hhinc.RData):qk]' />
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:unit (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_5004062136032288769:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]</cols>
      </table>
      <simple-id uuid='{FD237179-2F6C-4080-9175-6627455B7A83}' />
    </worksheet>
    <worksheet name='income_hist'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Distribution of regions by income per capita</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Count' name='[cnt:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (nama 10r 2hhinc.RData) (bin)]' derivation='None' name='[none:values (nama 10r 2hhinc.RData) (bin):qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
            </column>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]' field-type='quantitative' max='45000.0' min='1642.5' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (nama_10r_2hhinc.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (nama 10r 2hhinc.RData) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{58DAA26C-E44E-4FA6-920D-DB4B166C3217}' />
    </worksheet>
    <worksheet name='job_relations'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (good rel coleagues.RData)' datatype='string' name='[Age class (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
            <column caption='Sex (good rel coleagues.RData)' datatype='string' name='[Sex (good_rel_coleagues.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (good_rel_coleagues.RData)]' derivation='None' name='[none:Age class (good_rel_coleagues.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (good_rel_coleagues.RData)]' derivation='None' name='[none:Sex (good_rel_coleagues.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (good_rel_coleagues.RData)]' derivation='Sum' name='[sum:values (good_rel_coleagues.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (good_rel_supervisor.RData)]' derivation='Sum' name='[sum:values (good_rel_supervisor.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (good rel coleagues.RData)' datatype='date' name='[time (good_rel_coleagues.RData)]' role='dimension' type='ordinal' />
            <column caption='values (good rel coleagues.RData)' datatype='real' name='[values (good_rel_coleagues.RData)]' role='measure' type='quantitative' />
            <column caption='values (good rel supervisor.RData)' datatype='real' name='[values (good_rel_supervisor.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (good_rel_coleagues.RData)]' derivation='Year' name='[yr:time (good_rel_coleagues.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (good_rel_coleagues.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (good_rel_coleagues.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (good_rel_coleagues.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (good_rel_coleagues.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (good_rel_coleagues.RData):ok]'>
            <groupfilter function='member' level='[yr:time (good_rel_coleagues.RData):ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (good_rel_coleagues.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (good_rel_coleagues.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (good_rel_coleagues.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.57071822881698608' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_supervisor.RData):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_supervisor.RData):qk] + [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (good_rel_coleagues.RData):qk])</cols>
      </table>
      <simple-id uuid='{E12FBBA0-AEEA-4919-A12B-18D6A5088EA8}' />
    </worksheet>
    <worksheet name='over_educ'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Migration status]' role='dimension' type='nominal' />
            <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='geo (over qualification.RData)' datatype='string' name='[geo (over_qualification.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (over_qualification.RData)]' derivation='None' name='[none:Age class (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Migration status]' derivation='None' name='[none:Migration status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (over_qualification.RData)]' derivation='None' name='[none:Sex (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (over_qualification.RData)]' derivation='None' name='[none:Unit of measure (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (over_qualification.RData)]' derivation='None' name='[none:geo (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (over_qualification.RData)]' derivation='Sum' name='[sum:values (over_qualification.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
            <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (over_qualification.RData)]' derivation='Year' name='[yr:time (over_qualification.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (over_qualification.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]'>
            <groupfilter function='member' level='[none:Migration status:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (over_qualification.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (over_qualification.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (over_qualification.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:geo (over_qualification.RData):nk]' member='&quot;AT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]'>
            <groupfilter function='member' level='[yr:time (over_qualification.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]</cols>
      </table>
      <simple-id uuid='{A132A913-EEE4-46F0-8D30-714298F99B87}' />
    </worksheet>
    <worksheet name='over_inmig'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Migration status]' role='dimension' type='nominal' />
            <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='geo (over qualification.RData)' datatype='string' name='[geo (over_qualification.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Age class (over_qualification.RData)]' derivation='None' name='[none:Age class (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Migration status]' derivation='None' name='[none:Migration status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (over_qualification.RData)]' derivation='None' name='[none:Sex (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (over_qualification.RData)]' derivation='None' name='[none:Unit of measure (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo (over_qualification.RData)]' derivation='None' name='[none:geo (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (over_qualification.RData)]' derivation='Sum' name='[sum:values (over_qualification.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
            <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (over_qualification.RData)]' derivation='Year' name='[yr:time (over_qualification.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (over_qualification.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (over_qualification.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (over_qualification.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (over_qualification.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:geo (over_qualification.RData):nk]' member='&quot;AT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]'>
            <groupfilter function='member' level='[yr:time (over_qualification.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]</cols>
      </table>
      <simple-id uuid='{6E543644-1246-4FC7-ACD2-1283486E537D}' />
    </worksheet>
    <worksheet name='over_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (over qualification.RData)' datatype='string' name='[Age class (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (over qualification.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Migration status]' role='dimension' type='nominal' />
            <column caption='Sex (over qualification.RData)' datatype='string' name='[Sex (over_qualification.RData)]' role='dimension' type='nominal' />
            <column caption='Unit of measure (over qualification.RData)' datatype='string' name='[Unit of measure (over_qualification.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (over_qualification.RData)]' derivation='None' name='[none:Age class (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (over_qualification.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Migration status]' derivation='None' name='[none:Migration status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (over_qualification.RData)]' derivation='None' name='[none:Sex (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (over_qualification.RData)]' derivation='None' name='[none:Unit of measure (over_qualification.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (over_qualification.RData)]' derivation='Sum' name='[sum:values (over_qualification.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (over qualification.RData)' datatype='date' name='[time (over_qualification.RData)]' role='dimension' type='ordinal' />
            <column caption='values (over qualification.RData)' datatype='real' name='[values (over_qualification.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (over_qualification.RData)]' derivation='Year' name='[yr:time (over_qualification.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (over_qualification.RData):nk]' member='&quot;From 15 to 64 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]'>
            <groupfilter function='member' level='[none:Migration status:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (over_qualification.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (over_qualification.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (over_qualification.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]'>
            <groupfilter function='member' level='[yr:time (over_qualification.RData):ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{91DD8398-7932-4EA4-8077-64BBDE4EBF11}' />
    </worksheet>
    <worksheet name='physicians'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Physicians per hundred thousand inhabitants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Unit of measure]' role='dimension' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure]' derivation='None' name='[none:Unit of measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]'>
            <groupfilter function='member' level='[none:Unit of measure:nk]' member='&quot;Per hundred thousand inhabitants&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' filter-group='7'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='4536619.1275120489' min='-4386859.0726072043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='11466676.869642813' min='3938184.1151457047' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]>
]]></run>
                <run bold='true'><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5F9B334B-D507-4D05-BC37-F45069A6A85F}' />
    </worksheet>
    <worksheet name='poverty_age'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Percentage of population at risk of poverty by age group (<]]></run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income and living conditions indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (poverty.RData)]' derivation='Avg' name='[avg:values (poverty.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (poverty.RData)]' derivation='None' name='[none:Age class (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Income and living conditions indicator]' derivation='None' name='[none:Income and living conditions indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (poverty.RData)]' derivation='None' name='[none:Sex (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (poverty.RData)]' derivation='None' name='[none:Unit of measure (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (poverty.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (poverty.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (poverty.RData)]' derivation='Year' name='[yr:time (poverty.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;75 years or over&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 16 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 25 to 49 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 50 to 64 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;From 65 to 74 years&quot;' />
              <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;Less than 16 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 16 years&quot;</bucket>
              <bucket>&quot;From 16 to 24 years&quot;</bucket>
              <bucket>&quot;From 20 to 24 years&quot;</bucket>
              <bucket>&quot;From 25 to 49 years&quot;</bucket>
              <bucket>&quot;From 50 to 64 years&quot;</bucket>
              <bucket>&quot;From 65 to 74 years&quot;</bucket>
              <bucket>&quot;75 years or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]'>
            <groupfilter function='member' level='[none:Income and living conditions indicator:nk]' member='&quot;At risk of poverty rate (cut-off point: 40\% of mean equivalised income)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (poverty.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (poverty.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (2007-2013)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]'>
            <groupfilter function='member' level='[yr:time (poverty.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</cols>
      </table>
      <simple-id uuid='{FA121FBE-9F68-4938-9EA2-7DFDDAB43312}' />
    </worksheet>
    <worksheet name='poverty_reg'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Percentage of total population in risk of poverty (<]]></run>
            <run fontsize='10'>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (risk_poverty.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column caption='TIME PERIOD (risk poverty.RData)' datatype='date' name='[TIME_PERIOD (risk_poverty.RData)]' role='dimension' type='ordinal' />
            <column caption='Unit of measure (risk poverty.RData)' datatype='string' name='[Unit of measure (risk_poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='Attribute' name='[attr:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (risk_poverty.RData)]' derivation='Avg' name='[avg:values (risk_poverty.RData):qk]' pivot='key' type='quantitative' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Unit of measure (risk_poverty.RData)]' derivation='None' name='[none:Unit of measure (risk_poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column caption='values (risk poverty.RData)' datatype='real' name='[values (risk_poverty.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (risk_poverty.RData)]' derivation='Year' name='[yr:TIME_PERIOD (risk_poverty.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (risk_poverty.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (risk_poverty.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (risk_poverty.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (risk_poverty.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (risk_poverty.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (risk_poverty.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (risk_poverty.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <tooltip column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[attr:NUTS2_name:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[attr:NUTS2_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F0B9CFEA-4882-48EF-8DF9-CF359E373A4F}' />
    </worksheet>
    <worksheet name='povery_time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Percentage of total population at risk of poverty</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income and living conditions indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (poverty.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (poverty.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (poverty.RData)]' derivation='Avg' name='[avg:values (poverty.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (poverty.RData)]' derivation='None' name='[none:Age class (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Income and living conditions indicator]' derivation='None' name='[none:Income and living conditions indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (poverty.RData)]' derivation='None' name='[none:Sex (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (poverty.RData)]' derivation='None' name='[none:Unit of measure (poverty.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (poverty.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (poverty.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (poverty.RData)]' derivation='Year' name='[yr:time (poverty.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Age class (poverty.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]'>
            <groupfilter function='member' level='[none:Income and living conditions indicator:nk]' member='&quot;At risk of poverty rate (cut-off point: 40\% of mean equivalised income)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (poverty.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (poverty.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</cols>
      </table>
      <simple-id uuid='{AA1313D2-B827-45DE-8698-B709C88D13FC}' />
    </worksheet>
    <worksheet name='satisfaction_levels'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Satisfaction rating in &lt;</run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</run>
            <run fontsize='10'>&gt; (&lt;</run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='lvel satis string' datatype='string' name='[Calculation_1948932739171246081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [lev_satis]&#13;&#10;when &apos;HIGH&apos; then &apos;high&apos;&#13;&#10;when &apos;LOW&apos; then &apos;low&apos;&#13;&#10;when &apos;MED&apos; then &apos;medium&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[age (satisfaction.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (satisfaction.RData)]' derivation='Avg' name='[avg:values (satisfaction.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
            <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1948932739171246081]' derivation='None' name='[none:Calculation_1948932739171246081:nk]' pivot='key' type='nominal' />
            <column-instance column='[age (satisfaction.RData)]' derivation='None' name='[none:age (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (satisfaction.RData)]' derivation='None' name='[none:sex (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (satisfaction.RData)]' derivation='None' name='[none:unit (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (satisfaction.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (satisfaction.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (satisfaction.RData)]' derivation='Year' name='[yr:time (satisfaction.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;low&quot;</bucket>
              <bucket>&quot;medium&quot;</bucket>
              <bucket>&quot;high&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:age (satisfaction.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Czechia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]'>
            <groupfilter function='member' level='[none:education:nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Job satisfaction&quot;' />
              <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Overall life satisfaction&quot;' />
              <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Satisfaction with financial situation&quot;' />
              <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Satisfaction with personal relationships&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Job satisfaction&quot;</bucket>
              <bucket>&quot;Satisfaction with financial situation&quot;</bucket>
              <bucket>&quot;Satisfaction with personal relationships&quot;</bucket>
              <bucket>&quot;Overall life satisfaction&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:sex (satisfaction.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:unit (satisfaction.RData):nk]' member='&quot;PC&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]'>
            <groupfilter function='member' level='[yr:time (satisfaction.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' value='260' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]>]]></run>
                <run><![CDATA[
<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]>
]]></run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]</cols>
      </table>
      <simple-id uuid='{6D88F233-BE5E-4467-9587-825310A1661C}' />
    </worksheet>
    <worksheet name='satisfaction_rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;</run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</run>
            <run fontsize='10'>&gt; average rating (&lt;</run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (satisfaction.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (satisfaction.RData)]' derivation='Avg' name='[avg:values (satisfaction.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
            <column caption='Lev Satis' datatype='string' name='[lev_satis]' role='dimension' type='nominal' />
            <column-instance column='[age (satisfaction.RData)]' derivation='None' name='[none:age (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[lev_satis]' derivation='None' name='[none:lev_satis:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (satisfaction.RData)]' derivation='None' name='[none:sex (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (satisfaction.RData)]' derivation='None' name='[none:unit (satisfaction.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (satisfaction.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (satisfaction.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (satisfaction.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (satisfaction.RData)]' derivation='Year' name='[yr:time (satisfaction.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:age (satisfaction.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]'>
            <groupfilter function='member' level='[none:education:nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]'>
            <groupfilter function='member' level='[none:indicator:nk]' member='&quot;Overall life satisfaction&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]'>
            <groupfilter function='member' level='[none:lev_satis:nk]' member='%null%' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:sex (satisfaction.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]'>
            <groupfilter function='member' level='[none:unit (satisfaction.RData):nk]' member='&quot;RTG&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]'>
            <groupfilter function='member' level='[yr:time (satisfaction.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F963CEA9-8ADC-42FE-B60B-FEAAF82A05DD}' />
    </worksheet>
    <worksheet name='self_health'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Self-perceived health (&lt;</run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
            </column>
            <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[age (self_health.RData)]' derivation='None' name='[none:age (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (self_health.RData)]' derivation='None' name='[none:freq (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (self_health.RData)]' derivation='None' name='[none:sex (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (self_health.RData)]' derivation='None' name='[none:unit (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8183884885348159488]' derivation='Sum' name='[sum:Calculation_-8183884885348159488:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:age (self_health.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='8'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (2007-2013)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:freq (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:levels:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Bad or very bad&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Very bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Fair&quot;</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Very good&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:sex (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:unit (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:time:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]</cols>
      </table>
      <simple-id uuid='{9C214ACD-B248-458D-BD97-15AB6338C325}' />
    </worksheet>
    <worksheet name='test'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='sort very good' datatype='real' name='[Calculation_-8183884885348159488]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [levels] = &quot;Very good&quot;&#13;&#10;then [values (self_health.RData)]&#13;&#10;else NULL&#13;&#10;END' />
            </column>
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-8183884885348159488]' derivation='Sum' name='[sum:Calculation_-8183884885348159488:qk]' pivot='key' type='quantitative' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:Calculation_-8183884885348159488:qk]</cols>
      </table>
      <simple-id uuid='{222E04EC-99BF-437F-9E1C-B4DA48D45B41}' />
    </worksheet>
    <worksheet name='time_health'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Minutes per week spent on health-enhancing (non-work-related) aerobic physical activity (<]]></run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column caption='Sort time health' datatype='real' name='[Calculation_-8711650466664865789]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Duration]=&quot;300 minutes or over&quot;&#13;&#10;then [values (time_health_enhancing.RData)]&#13;&#10;else null       &#13;&#10;END' />
            </column>
            <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='string' name='[Time frequency (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_-8711650466664865789]' derivation='Avg' name='[avg:Calculation_-8711650466664865789:qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Time frequency (time_health_enhancing.RData)]' derivation='None' name='[none:Time frequency (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (time_health_enhancing.RData)]' derivation='None' name='[none:Unit of measure (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='member' level='[none:Age class:nk]' member='&quot;18 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:Duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Time frequency (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:Time frequency (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Unit of measure (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:Unit of measure (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='8'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (2007-2013)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:Calculation_-8711650466664865789:qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:time:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]' field-type='quantitative' max='100.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</cols>
      </table>
      <simple-id uuid='{7A7FEDCE-33E2-4947-BA42-34B214407AAD}' />
    </worksheet>
    <worksheet name='time_health_age_sex'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Minutes per week spent on health-enhancing (non-work-related) aerobic physical activity in <[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]> by age class in <[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]>.]]></run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 15 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 25 to 34 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 55 to 64 years&quot;' />
              <groupfilter function='member' level='[none:Age class:nk]' member='&quot;From 65 to 74 years&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:Duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;300 minutes or over&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]' value='-90' />
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='220' />
                <format attr='maxheight' value='220' />
                <format attr='minwidth' value='344' />
                <format attr='maxwidth' value='344' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</cols>
      </table>
      <simple-id uuid='{76B6CC1F-C04D-45A1-ABFC-41BD2071C664}' />
    </worksheet>
    <worksheet name='time_health_educ_sex'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'><![CDATA[Minutes per week spent on health-enhancing (non-work-related) aerobic physical activity in <]]></run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</run>
            <run fontsize='10'>&gt; (&lt;</run>
            <run fontsize='10'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</run>
            <run fontsize='10'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[Duration]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[Duration]' derivation='None' name='[none:Duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='member' level='[none:Age class:nk]' member='&quot;18 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:Duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;300 minutes or over&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;Zero minutes&quot;</bucket>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;All ISCED 2011 levels&quot;</bucket>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sex:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Sex:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' filter-group='6'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</rows>
        <cols>([federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk] / [federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk])</cols>
      </table>
      <simple-id uuid='{16FB6B15-0E5C-49E6-A14C-7061C99CA00D}' />
    </worksheet>
    <worksheet name='time_vs_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[age (self_health.RData)]' derivation='None' name='[none:age (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (self_health.RData)]' derivation='None' name='[none:sex (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (self_health.RData)]' derivation='None' name='[none:unit (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (self_health.RData)]' derivation='Year' name='[yr:time (self_health.RData):ok]' pivot='key' type='ordinal' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]'>
            <groupfilter function='member' level='[none:Age class:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:age (self_health.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:sex (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:unit (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]'>
            <groupfilter function='member' level='[yr:time (self_health.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</cols>
      </table>
      <simple-id uuid='{724D08A3-5387-4708-81A8-B41330571382}' />
    </worksheet>
    <worksheet name='underemployment'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[Age class (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Unit of measure (underemployment.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (underemployment.RData)]' derivation='Avg' name='[avg:values (underemployment.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (underemployment.RData)]' derivation='None' name='[none:Age class (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (underemployment.RData)]' derivation='None' name='[none:Sex (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Unit of measure (underemployment.RData)]' derivation='None' name='[none:Unit of measure (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[time (underemployment.RData)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[values (underemployment.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (underemployment.RData)]' derivation='Year' name='[yr:time (underemployment.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 12 to 17 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 18 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 20 to 24 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 25 to 29 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 35 to 44 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 45 to 54 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 55 to 59 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;From 6 to 11 years&quot;' />
              <groupfilter function='member' level='[none:Age class (underemployment.RData):nk]' member='&quot;Less than 6 years&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 6 years&quot;</bucket>
              <bucket>&quot;From 6 to 11 years&quot;</bucket>
              <bucket>&quot;From 12 to 17 years&quot;</bucket>
              <bucket>&quot;From 18 to 24 years&quot;</bucket>
              <bucket>&quot;From 20 to 24 years&quot;</bucket>
              <bucket>&quot;From 25 to 29 years&quot;</bucket>
              <bucket>&quot;From 35 to 44 years&quot;</bucket>
              <bucket>&quot;From 45 to 54 years&quot;</bucket>
              <bucket>&quot;From 55 to 59 years&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (underemployment.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:Unit of measure (underemployment.RData):nk]' member='&quot;Percentage of total population aged less than 60&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]'>
            <groupfilter function='member' level='[yr:time (underemployment.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (underemployment.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]</cols>
      </table>
      <simple-id uuid='{881456DE-BC9C-4A32-9008-E8CB85C669DA}' />
    </worksheet>
    <worksheet name='unempl_educ'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Count' name='[cnt:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (unemployment rate.RData) (bin) 1]' derivation='None' name='[none:values (unemployment rate.RData) (bin) 1:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='values (unemployment rate.RData) (bin) (1)' datatype='integer' name='[values (unemployment rate.RData) (bin) 1]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
            </column>
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (unemployment_rate.RData)]' derivation='Year' name='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (unemployment_rate.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (unemployment rate.RData) (bin) 1:qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (unemployment rate.RData) (bin) 1]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F10FDEC5-A5AA-49E3-8C60-07702963FBBF}' />
    </worksheet>
    <worksheet name='unempl_high'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='rank regions umeployment' datatype='integer' name='[Calculation_1295347907822551040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(avg([values (unemployment_rate.RData)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Sum' name='[sum:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1295347907822551040]' derivation='User' name='[usr:Calculation_1295347907822551040:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[country_name (geo_dates.RData)]' />
                <order field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[NUTS2_name]' />
              </table-calc>
            </column-instance>
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (unemployment_rate.RData)]' derivation='Year' name='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_1295347907822551040:qk:7]' included-values='in-range'>
            <min>1</min>
            <max>20</max>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (unemployment_rate.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_1295347907822551040:qk:7]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (unemployment_rate.RData):qk]</cols>
      </table>
      <simple-id uuid='{0F2185EF-FC93-4358-BFE9-E9C267639DE1}' />
    </worksheet>
    <worksheet name='unempl_hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='TIME PERIOD (unemployment rate.RData)' datatype='date' name='[TIME_PERIOD (unemployment_rate.RData)]' role='dimension' type='ordinal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Count' name='[cnt:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (unemployment rate.RData) (bin)]' derivation='None' name='[none:values (unemployment rate.RData) (bin):qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[values (unemployment rate.RData) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[values (unemployment_rate.RData)]' peg='0' size='3.65' />
            </column>
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (unemployment_rate.RData)]' derivation='Year' name='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]'>
            <groupfilter function='level-members' level='[none:country_name (geo_dates.RData):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (unemployment_rate.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (unemployment_rate.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (unemployment rate.RData) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (unemployment rate.RData) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{9C4612FA-2D56-4E1F-93F6-D6A80BB07F35}' />
    </worksheet>
    <worksheet name='unempl_reg'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column datatype='string' name='[Age class]' role='dimension' type='nominal' />
            <column datatype='string' name='[International Standard Classification of Education (ISCED 2011)]' role='dimension' type='nominal' />
            <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal'>
              <semantic-values semantic-role='[NUTS].[Name]'>
                <semantic-value key='&quot;Comunidad de Madrid&quot;' value='&quot;ES30&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values (unemployment_rate.RData)]' derivation='Avg' name='[avg:values (unemployment_rate.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age class]' derivation='None' name='[none:Age class:nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011):nk]' pivot='key' type='nominal' />
            <column-instance column='[NUTS2_name]' derivation='None' name='[none:NUTS2_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column caption='values (unemployment rate.RData)' datatype='real' name='[values (unemployment_rate.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Age class:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age class:nk]' />
              <groupfilter function='member' level='[none:Age class:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]'>
            <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011):nk]' member='&quot;All ISCED 2011 levels&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]'>
            <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Age class:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]' field-type='quantitative' max='4881514.1053009722' min='-5695270.7149488796' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]' field-type='quantitative' max='8052800.1898237122' min='607444.11944785621' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D1F4F78-14D0-45E2-A4ED-AA53A41ED2B8}' />
    </worksheet>
    <worksheet name='work_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age class (work health problem.RData)' datatype='string' name='[Age class (work_health_problem.RData)]' role='dimension' type='nominal' />
            <column caption='International Standard Classification of Education (ISCED 2011) (work health problem.RData)' datatype='string' name='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' role='dimension' type='nominal' />
            <column caption='Sex (work health problem.RData)' datatype='string' name='[Sex (work_health_problem.RData)]' role='dimension' type='nominal' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Age class (work_health_problem.RData)]' derivation='None' name='[none:Age class (work_health_problem.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[International Standard Classification of Education (ISCED 2011) (work_health_problem.RData)]' derivation='None' name='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex (work_health_problem.RData)]' derivation='None' name='[none:Sex (work_health_problem.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[values (work_health_problem.RData)]' derivation='Sum' name='[sum:values (work_health_problem.RData):qk]' pivot='key' type='quantitative' />
            <column caption='time (work health problem.RData)' datatype='date' name='[time (work_health_problem.RData)]' role='dimension' type='ordinal' />
            <column caption='values (work health problem.RData)' datatype='real' name='[values (work_health_problem.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (work_health_problem.RData)]' derivation='Year' name='[yr:time (work_health_problem.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age class (work_health_problem.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='&quot;From 15 to 64 years&quot;' />
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='&quot;From 15 to 74 years&quot;' />
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='&quot;From 35 to 64 years&quot;' />
                <groupfilter function='member' level='[none:Age class (work_health_problem.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' member='&quot;All ISCED 2011 levels&quot;' />
                <groupfilter function='member' level='[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than primary, primary and lower secondary education (levels 0-2)&quot;</bucket>
              <bucket>&quot;Upper secondary and post-secondary non-tertiary education (levels 3 and 4)&quot;</bucket>
              <bucket>&quot;Tertiary education (levels 5-8)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (work_health_problem.RData):nk]'>
            <groupfilter function='member' level='[none:Sex (work_health_problem.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Austria&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (work_health_problem.RData):ok]'>
            <groupfilter function='member' level='[yr:time (work_health_problem.RData):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (work_health_problem.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (work_health_problem.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]</cols>
      </table>
      <simple-id uuid='{0B6F6B35-E2FC-4C73-A45F-072BCD20C97A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='habits'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='type of chart' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;age&quot;'>
          <calculation class='tableau' formula='&quot;age&quot;' />
          <members>
            <member value='&quot;education&quot;' />
            <member value='&quot;age&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[Frequency (drinking.RData)]' role='dimension' type='nominal' />
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Frequency (drinking.RData)]' derivation='None' name='[none:Frequency (drinking.RData):nk]' pivot='key' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='25' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='15' type-v2='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37000' id='4' param='horz' type-v2='layout-flow' w='45100' x='800' y='53250'>
          <zone h='37000' hidden-by-user='true' id='8' name='fruits_veg_educ' w='45100' x='800' y='53250'>
            <layout-cache cell-count-w='3' minheight='173' non-cell-size-w='34' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='450' h='37000' id='6' is-fixed='true' name='fruits_veg_age' w='45100' x='800' y='53250'>
            <layout-cache cell-count-w='9' minheight='242' non-cell-size-w='52' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='36250' id='5' param='horz' type-v2='layout-flow' w='52700' x='46800' y='52875'>
          <zone h='36250' id='13' name='bad_habits_age' w='52700' x='46800' y='52875'>
            <layout-cache cell-count-w='7' minheight='204' non-cell-size-w='64' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='36250' hidden-by-user='true' id='9' name='bad_habits_educ' w='52700' x='46800' y='52875'>
            <layout-cache cell-count-w='3' minheight='174' non-cell-size-w='65' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone fixed-size='78' h='9750' id='18' is-fixed='true' name='fruits_veg_age' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type-v2='color' w='14100' x='700' y='89875' />
        <zone h='46250' id='19' name='bad_habits_map' w='97500' x='500' y='500' />
        <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='19700' y='48375' />
        <zone h='7250' id='23' name='bad_habits_age' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type-v2='color' w='20200' x='78500' y='90500' />
        <zone h='12250' id='22' name='bad_habits_age' pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type-v2='color' w='21800' x='53100' y='87875' />
        <zone h='5500' id='26' mode='dropdown' name='bad_habits_educ' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' values='database' w='16000' x='2700' y='48250' />
        <zone h='14875' id='35' mode='dropdown' name='bad_habits_map' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type-v2='filter' values='database' w='16000' x='83300' y='375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='69' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='68' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='14875' id='35' mode='dropdown' name='bad_habits_map' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type-v2='filter' values='database' w='16000' x='83300' y='375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46250' id='19' is-fixed='true' name='bad_habits_map' w='97500' x='500' y='500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='21' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='19700' y='48375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36250' id='13' is-fixed='true' name='bad_habits_age' w='52700' x='46800' y='52875'>
                  <layout-cache cell-count-w='7' minheight='204' non-cell-size-w='64' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='23' name='bad_habits_age' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type-v2='color' w='20200' x='78500' y='90500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='22' name='bad_habits_age' pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type-v2='color' w='21800' x='53100' y='87875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='26' mode='dropdown' name='bad_habits_educ' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' values='database' w='16000' x='2700' y='48250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36250' id='9' is-fixed='true' name='bad_habits_educ' w='52700' x='46800' y='52875'>
                  <layout-cache cell-count-w='3' minheight='174' non-cell-size-w='65' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37000' id='8' is-fixed='true' name='fruits_veg_educ' w='45100' x='800' y='53250'>
                  <layout-cache cell-count-w='3' minheight='173' non-cell-size-w='34' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37000' id='6' is-fixed='true' name='fruits_veg_age' w='45100' x='800' y='53250'>
                  <layout-cache cell-count-w='9' minheight='242' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='9750' id='18' name='fruits_veg_age' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type-v2='color' w='14100' x='700' y='89875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D4CB209-F64E-4309-9B39-17E84D6319B0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='health'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='type of map' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;beds&quot;'>
          <calculation class='tableau' formula='&quot;beds&quot;' />
          <members>
            <member value='&quot;beds&quot;' />
            <member value='&quot;physicians&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
        <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='5500' id='103' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='16000' x='56300' y='3750' />
        <zone h='15375' id='12' name='self_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type-v2='color' w='18100' x='56600' y='31750' />
        <zone h='52625' id='7' param='horz' type-v2='layout-flow' w='92900' x='3300' y='46875'>
          <zone h='52625' id='5' type-v2='layout-basic' w='92900' x='3300' y='46875'>
            <zone h='52625' id='10' name='self_health' w='46450' x='3300' y='46875'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='52625' id='13' name='time_health' w='46450' x='49750' y='46875'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
        </zone>
        <zone h='12250' id='14' name='time_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='18600' x='79600' y='31125' />
        <zone h='44500' id='128' param='horz' type-v2='layout-flow' w='47500' x='1900' y='1750'>
          <zone h='44500' id='136' name='beds' w='47500' x='1900' y='1750'>
            <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='44500' hidden-by-user='true' id='129' name='physicians' w='23750' x='25650' y='1750'>
            <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='9375' id='134' mode='slider' name='physicians' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16800' x='55000' y='11250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='138' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='137' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44500' id='136' is-fixed='true' name='beds' w='47500' x='1900' y='1750'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='134' mode='slider' name='physicians' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16800' x='55000' y='11250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44500' id='129' is-fixed='true' name='physicians' w='23750' x='25650' y='1750'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='103' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='16000' x='56300' y='3750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52625' id='10' is-fixed='true' name='self_health' w='46450' x='3300' y='46875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15375' id='12' name='self_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type-v2='color' w='18100' x='56600' y='31750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52625' id='13' is-fixed='true' name='time_health' w='46450' x='49750' y='46875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='14' name='time_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='18600' x='79600' y='31125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E88EA626-18DD-4F00-8F86-D29875329578}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='health_2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='type of chart' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;age&quot;'>
          <calculation class='tableau' formula='&quot;age&quot;' />
          <members>
            <member value='&quot;education&quot;' />
            <member value='&quot;age&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='42' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='40' type-v2='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47125' id='3' name='health_map' w='48700' x='6400' y='4125' />
        <zone h='5500' id='4' mode='dropdown' name='health_map' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' show-all='false' type-v2='filter' w='16000' x='80700' y='66375' />
        <zone h='61375' id='6' name='health_income' w='40800' x='55900' y='4000' />
        <zone h='41000' id='37' param='horz' type-v2='layout-flow' w='49100' x='5700' y='57000'>
          <zone h='41000' hidden-by-user='true' id='38' name='time_health_educ_sex' w='49100' x='5700' y='57000'>
            <layout-cache cell-count-w='6' minheight='213' non-cell-size-w='71' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='41000' id='45' name='time_health_age_sex' w='49100' x='5700' y='57000'>
            <layout-cache cell-count-w='7' has-max-size-h='true' maxheight='389' minheight='389' non-cell-size-w='63' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='6500' id='43' mode='dropdown' name='time_health_educ_sex' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' show-all='false' type-v2='filter' w='16800' x='56200' y='75000' />
        <zone h='5500' id='46' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='55800' y='66625' />
        <zone h='12250' id='44' name='time_health_educ_sex' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='16800' x='57700' y='83625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='75' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='61375' id='6' is-fixed='true' name='health_income' w='40800' x='55900' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='4' mode='dropdown' name='health_map' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' show-all='false' type-v2='filter' w='16000' x='80700' y='66375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47125' id='3' is-fixed='true' name='health_map' w='48700' x='6400' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='43' mode='dropdown' name='time_health_educ_sex' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' show-all='false' type-v2='filter' w='16800' x='56200' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41000' id='38' is-fixed='true' name='time_health_educ_sex' w='49100' x='5700' y='57000'>
                  <layout-cache cell-count-w='6' minheight='213' non-cell-size-w='71' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='44' name='time_health_educ_sex' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type-v2='color' w='16800' x='57700' y='83625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41000' id='45' is-fixed='true' name='time_health_age_sex' w='49100' x='5700' y='57000'>
                  <layout-cache cell-count-w='7' has-max-size-h='true' maxheight='389' minheight='389' non-cell-size-w='63' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='46' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='55800' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FA37381E-EBC8-4A72-9ECD-6AB0082F5998}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='income_das'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='top N regions' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range granularity='1' max='20' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
        <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
        <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
        <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='income' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='income top' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='income_hist' w='49200' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='95' name='income low' w='49200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12250' id='96' name='income low' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='14000' x='24700' y='69625' />
        <zone h='14250' id='98' name='income top' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='38100' x='9100' y='36625' />
        <zone h='9375' id='8' mode='slider' name='income' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type-v2='filter' w='16800' x='51100' y='5875' />
        <zone h='9375' id='14' mode='slider' name='income_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16800' x='82400' y='53375' />
        <zone h='8375' id='97' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='22100' y='90250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='114' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='113' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='income top' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='98' name='income top' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='38100' x='9100' y='36625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='8' mode='slider' name='income' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type-v2='filter' w='16800' x='51100' y='5875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='income' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='95' is-fixed='true' name='income low' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='96' name='income low' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='14000' x='24700' y='69625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='14' mode='slider' name='income_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type-v2='filter' w='16800' x='82400' y='53375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='income_hist' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8375' id='97' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='22100' y='90250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FD94A390-07AB-46B9-8117-DA64092ACAFD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='job_quality'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='24000' id='3' name='work_health' w='38800' x='44400' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='9' name='job_relations' w='43600' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='74000' id='11' name='underemployment' w='38800' x='44400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='work_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='10' name='job_relations' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' type-v2='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='12' name='underemployment' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' type-v2='color' w='16000' x='83200' y='17375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='75' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='job_relations' w='43600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='10' name='job_relations' pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' type-v2='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='11' is-fixed='true' name='underemployment' w='38800' x='44400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='underemployment' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' type-v2='color' w='16000' x='83200' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24000' id='3' is-fixed='true' name='work_health' w='38800' x='44400' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='work_health' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8DC12EA9-483A-4C69-988D-16B9B86CC964}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='overqual'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='414' h='98000' id='9' is-fixed='true' type-v2='layout-basic' w='41400' x='800' y='1000'>
              <zone h='49000' id='3' name='over_inmig' w='41400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='over_educ' w='41400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='98000' id='8' name='over_map' w='41000' x='42200' y='1000'>
              <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='160' h='98000' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='12' name='over_map' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='75' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='over_inmig' w='41400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='8' is-fixed='true' name='over_map' w='41000' x='42200' y='1000'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='over_map' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='over_educ' w='41400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BD6535DB-3501-4FC5-A918-540AF36D42CF}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='poverty'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='poverty_reg' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='povery_time' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='poverty_age' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='80000' id='10' name='povery_time' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='11' name='povery_time' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='color' w='16000' x='83200' y='81000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='87' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='86' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='80000' id='10' mode='checkdropdown' name='povery_time' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='povery_time' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='11' name='povery_time' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='color' w='16000' x='83200' y='81000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='poverty_age' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='poverty_reg' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2A2D6CEA-7060-4942-8360-14BFF788166B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='satisfaction'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
      </datasources>
      <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
        <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
        <column caption='Indicator' datatype='string' name='[indicator]' role='dimension' type='nominal' />
        <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
        <column-instance column='[indicator]' derivation='None' name='[none:indicator:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='65750' id='3' name='satisfaction_rating' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32250' id='11' name='satisfaction_levels' w='82400' x='800' y='66750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='10750' id='14' name='satisfaction_levels' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type-v2='filter' w='16000' x='83200' y='11750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='8' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='18250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='12' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='24750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='115' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='114' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='9' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type-v2='filter' w='16000' x='83200' y='11750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='dropdown' name='satisfaction_rating' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type-v2='filter' w='16000' x='83200' y='18250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65750' id='3' is-fixed='true' name='satisfaction_rating' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='dropdown' name='satisfaction_levels' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type-v2='filter' w='16000' x='83200' y='24750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32250' id='11' is-fixed='true' name='satisfaction_levels' w='82400' x='800' y='66750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='14' name='satisfaction_levels' pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BC40F8D7-5D09-4CC7-B3E1-8F39BAB9A238}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='unemployment'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
      </datasources>
      <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
        <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country_name (geo_dates.RData)]' derivation='None' name='[none:country_name (geo_dates.RData):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='unempl_educ' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='unempl_hist' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='13250' id='8' name='unempl_educ' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13812' id='10' name='unempl_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='filter' w='16000' x='83200' y='14250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13812' id='11' name='unempl_hist' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='28062'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8126' id='13' name='unempl_reg' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' type-v2='color' w='16000' x='83200' y='41874'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='12' name='unempl_reg' w='49200' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='14' name='unempl_high' w='49200' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='82' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='81' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='unempl_educ' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='8' name='unempl_educ' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13812' id='10' mode='checkdropdown' name='unempl_hist' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='filter' w='16000' x='83200' y='14250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='unempl_hist' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13812' id='11' name='unempl_hist' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type-v2='color' w='16000' x='83200' y='28062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='14' is-fixed='true' name='unempl_high' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='unempl_reg' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8126' id='13' name='unempl_reg' pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' type-v2='color' w='16000' x='83200' y='41874'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3A1F6FCC-78CA-4D5F-A1A8-71D33BE2DD1F}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='beds' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (hosp_beds.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (hosp_beds.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{709C71EF-0C0F-49F1-98B6-992DF1CA7020}' />
    </window>
    <window class='worksheet' name='physicians' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB83FB30-D3CA-483A-93C5-872FAF34BFEC}' />
    </window>
    <window class='worksheet' name='self_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16EC6DDA-2081-4A71-A80E-CFDC401479A4}' />
    </window>
    <window class='worksheet' name='time_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86B29200-FAF7-4875-B1C6-C589E02E7445}' />
    </window>
    <window class='dashboard' name='health' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='beds'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='physicians'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='self_health'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='time_health'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8B0EEA34-BB74-49BB-8576-CA9AE8ED22C5}' />
    </window>
    <window class='worksheet' name='time_health_age_sex' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F46BE4D-FB05-4A7E-9654-7C07B806DB08}' />
    </window>
    <window class='worksheet' name='time_health_educ_sex' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB922F29-0673-4074-B34F-3E516BCE7294}' />
    </window>
    <window class='worksheet' name='time_vs_health' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A87D27D-4AE7-4236-A65E-1EC07357509F}' />
    </window>
    <window class='worksheet' name='health_map' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{823EF5DB-0877-4A44-B5E0-30907751B937}' />
    </window>
    <window class='worksheet' name='health_income' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (self_health.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD158D8E-5A09-4095-93F4-290521B979A5}' />
    </window>
    <window class='dashboard' maximized='true' name='health_2' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='health_income'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='health_map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='time_health_age_sex'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='time_health_educ_sex'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Duration:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0836F9C6-A5F1-49B4-AB07-EF3AA3740BDC}' />
    </window>
    <window class='worksheet' name='bad_habits_educ' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2BE2E4A-165F-4208-9241-5B2B773DA117}' />
    </window>
    <window class='worksheet' name='bad_habits_age' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (drinking.RData):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Smoking behaviour:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (smokers.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9072A5F9-2893-4884-82E9-2A36910901EF}' />
    </window>
    <window class='worksheet' name='bad_habits_map' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (drinking.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Time frequency (drinking.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (drinking.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC75F775-AAE0-4DE0-BA14-4230AEA665A2}' />
    </window>
    <window class='worksheet' name='fruits_veg_age' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4273D0AB-4102-48AD-AFFC-21FBD3C3944E}' />
    </window>
    <window class='worksheet' name='fruits_veg_educ' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (fruit_vegetables.RData):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (fruit_vegetables.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (fruit_vegetables.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1CE42FC-B9D5-4F90-9659-1E7E3E142CD8}' />
    </window>
    <window class='dashboard' name='habits' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='bad_habits_age'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Frequency (drinking.RData):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='bad_habits_educ'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='bad_habits_map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='fruits_veg_age'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Number of portions:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='fruits_veg_educ'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{760B681B-3FF7-4EC8-A576-C2074E81DA1B}' />
    </window>
    <window class='worksheet' name='city living cond'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]' type='filter' />
            <card mode='slider' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{50541DAF-8670-4F43-B99B-D6104843A61A}' />
    </window>
    <window class='worksheet' name='activities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C47DEE94-88D5-4C69-B281-3AC50BE52E5D}' />
    </window>
    <window class='worksheet' name='poverty_reg' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (risk_poverty.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (risk_poverty.RData):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (risk_poverty.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (risk_poverty.RData):ok]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (road_accidents.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4802920F-4C69-4F69-8CA8-4B8D1DB3DCC3}' />
    </window>
    <window class='worksheet' name='povery_time' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4377CC87-B074-4F44-B17B-0C147A6CDC6D}' />
    </window>
    <window class='worksheet' name='poverty_age' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (poverty.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Income and living conditions indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (poverty.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (poverty.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00419F74-AB8A-4105-A10B-E13FBEE2A2A6}' />
    </window>
    <window class='dashboard' name='poverty' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='poverty_age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='poverty_reg'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='povery_time'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{81FCBEEE-3CA7-42BD-9AC5-B38105195F63}' />
    </window>
    <window class='worksheet' name='income' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4841B069-481F-4F62-B292-C6C01A915389}' />
    </window>
    <window class='worksheet' name='income low' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769 1:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769:nk:1]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C8E92F9-34E1-40C9-93AD-67C06C44ABC4}' />
    </window>
    <window class='worksheet' name='income top' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[usr:Calculation_5004062136032288769:nk:1]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{023B726F-39B3-4B6A-8772-38B75F46E096}' />
    </window>
    <window class='worksheet' name='income_hist' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8A0AFD1-869C-475C-B7FE-C0F84F6C07F6}' />
    </window>
    <window class='dashboard' name='income_das' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='income'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='income low'>
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='income top'>
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='income_hist'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{517E9779-C6B4-4958-8179-44A408FAF19A}' />
    </window>
    <window class='worksheet' name='satisfaction_levels' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]' type='filter' />
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739166355456:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_1948932739171246081:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A806F614-E9DE-430D-BE73-72EFD0AD8B95}' />
    </window>
    <window class='worksheet' name='satisfaction_rating' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (satisfaction.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:education:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:indicator:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:lev_satis:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (satisfaction.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (satisfaction.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2E72282-4F69-46BD-AA2D-4D13B8C4771F}' />
    </window>
    <window class='dashboard' name='satisfaction' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='satisfaction_levels' />
        <viewpoint name='satisfaction_rating'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{52BF987B-6119-4FE7-81D0-828C5DD9FCC2}' />
    </window>
    <window class='worksheet' name='test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Calculation_-8183884885348159488:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EC8B3AC-78A2-4E00-8A9D-2DBC078373BA}' />
    </window>
    <window class='worksheet' name='over_inmig' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C47BA93-75F8-4035-AE5B-2D3114C4AC11}' />
    </window>
    <window class='worksheet' name='over_educ' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9CCC51B-992E-4EEF-AEF0-3CE815AAF7D5}' />
    </window>
    <window class='worksheet' name='over_map' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (over_qualification.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Migration status:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (over_qualification.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (over_qualification.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08CD5DCA-7D99-457A-B3B8-523D2EB783AD}' />
    </window>
    <window class='dashboard' name='overqual' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='over_educ' />
        <viewpoint name='over_inmig' />
        <viewpoint name='over_map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6C6E8010-39DA-4C65-9C64-B09C2FA8630B}' />
    </window>
    <window class='worksheet' name='unempl_educ' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB21B5CC-977F-48FF-A1AC-2A081A2BBC6B}' />
    </window>
    <window class='worksheet' name='unempl_high' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{894D5006-FADC-418C-8162-4EE02B9356D2}' />
    </window>
    <window class='worksheet' name='unempl_hist' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (unemployment_rate.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F7EF14F-45F3-4EAA-BAF1-602306176289}' />
    </window>
    <window class='worksheet' name='unempl_reg' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[avg:values (unemployment_rate.RData):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Age class:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Sex:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Time frequency (unemployment_rate.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:Unit of measure (unemployment_rate.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41FD1EC9-FD23-461A-9494-2CAADBD24BD9}' />
    </window>
    <window class='dashboard' name='unemployment' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='unempl_educ'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:International Standard Classification of Education (ISCED 2011):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='unempl_high' />
        <viewpoint name='unempl_hist'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:country_name (geo_dates.RData):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='unempl_reg'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6C92676D-868A-43AC-A69E-A6024945A1BC}' />
    </window>
    <window class='worksheet' name='work_health' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[sum:values (work_health_problem.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (work_health_problem.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:International Standard Classification of Education (ISCED 2011) (work_health_problem.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (work_health_problem.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (work_health_problem.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B57B3B4-4FBA-4205-BE76-34E4DC1B2A45}' />
    </window>
    <window class='worksheet' name='job_relations' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (good_rel_coleagues.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (good_rel_coleagues.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (good_rel_coleagues.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4AAA991-C8B7-4AF0-9326-062F194E1D79}' />
    </window>
    <window class='worksheet' name='underemployment' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Age class (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Sex (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:Unit of measure (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E850836D-AC67-4352-BB61-A2FBEC87C5F2}' />
    </window>
    <window class='dashboard' name='job_quality' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='job_relations' />
        <viewpoint name='underemployment' />
        <viewpoint name='work_health' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{90049676-F601-4310-A861-3231C7128F46}' />
    </window>
  </windows>
  <_.fcp.DatagraphCoreV1.true...datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='1cd374dd-f5aa-4c70-aa5e-e1e227728681' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='66b8bb46-bc22-46e1-9689-57000589e44e' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='9ad2df2e-88f0-4a11-b17a-7c76a19dd452' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='9a5f00d8-2f8f-40ab-a6c9-bce2cd1c5c10' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='2ea94ef8-31e3-4303-8921-0f053742d50b' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='09835f7b-ddc4-4036-afd4-3bdae436412d' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='553afdf0-1f83-4524-aa53-d365e8db2f57' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='04356e0c-b1b9-482d-bc1d-4a49fa7e781b' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='698963cc-41d0-4d2a-a1ee-e75fee0a16e8' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='2732d5d9-7d7c-4614-a48a-4320205d8695' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='7eaa9c14-2c0b-4218-ab9e-0d9aa50a5f3a' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='cd504a91-0e0e-42b7-91b9-c178a53fa7d7' />
        <pair execution-subgraph-guid='1cd374dd-f5aa-4c70-aa5e-e1e227728681' node-guid='80ce398f-dc30-4818-8e7b-e030e9e276ac' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Calculation_3260606198407761920 1]' fieldname-input-guid='aba4e5c0-06c3-4fe0-ab8a-5b8be5d8728c' node-guid='9a5f00d8-2f8f-40ab-a6c9-bce2cd1c5c10' value-output-guid='0f133594-4978-49e7-bc31-511a341a2e69' />
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Calculation_3260606198407761920]' fieldname-input-guid='e45b3048-ed2a-4e98-8550-d4d0fdd385c2' node-guid='9ad2df2e-88f0-4a11-b17a-7c76a19dd452' value-output-guid='a712404f-69a9-4e90-b247-f3ccf097de73' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{0D4CB209-F64E-4309-9B39-17E84D6319B0}' node-guid='66b8bb46-bc22-46e1-9689-57000589e44e' visibility-input-guid='90a0757d-6722-4d95-8cac-dbddba9dc0bd' zone-id='6' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{0D4CB209-F64E-4309-9B39-17E84D6319B0}' node-guid='2ea94ef8-31e3-4303-8921-0f053742d50b' visibility-input-guid='4ee3ee38-2003-4f14-836c-2d5929249725' zone-id='9' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{0D4CB209-F64E-4309-9B39-17E84D6319B0}' node-guid='09835f7b-ddc4-4036-afd4-3bdae436412d' visibility-input-guid='f5304845-6659-457d-aaf2-1efa85f18a02' zone-id='13' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{FA37381E-EBC8-4A72-9ECD-6AB0082F5998}' node-guid='04356e0c-b1b9-482d-bc1d-4a49fa7e781b' visibility-input-guid='8fac39a6-b4d7-4ab3-b64e-4800a2e78eb4' zone-id='45' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{0D4CB209-F64E-4309-9B39-17E84D6319B0}' node-guid='553afdf0-1f83-4524-aa53-d365e8db2f57' visibility-input-guid='7314ce4d-17a3-4176-b921-cad60b24ea18' zone-id='8' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{FA37381E-EBC8-4A72-9ECD-6AB0082F5998}' node-guid='698963cc-41d0-4d2a-a1ee-e75fee0a16e8' visibility-input-guid='e897d2de-a731-481a-a101-03cc5b8b912f' zone-id='38' />
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Calculation_3260606198754942977]' fieldname-input-guid='776275ef-2395-4239-95f8-1456aa3b7da0' node-guid='2732d5d9-7d7c-4614-a48a-4320205d8695' value-output-guid='b76aedbc-baa8-41a6-95ce-2b670acfe013' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{E88EA626-18DD-4F00-8F86-D29875329578}' node-guid='7eaa9c14-2c0b-4218-ab9e-0d9aa50a5f3a' visibility-input-guid='47bc89c5-0cb5-4795-95e1-69962ae9e07b' zone-id='136' />
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Calculation_3260606198754942977 1]' fieldname-input-guid='93323e69-ce08-4f2a-9d6e-af6f9eedeae4' node-guid='cd504a91-0e0e-42b7-91b9-c178a53fa7d7' value-output-guid='342a13bc-8048-4627-bea6-132f8cf5a730' />
        <_.fcp.DatagraphNodeDashboardZoneVisibilityV1.true...dashboard-zone-visibility-node dashboard-identifier='{E88EA626-18DD-4F00-8F86-D29875329578}' node-guid='80ce398f-dc30-4818-8e7b-e030e9e276ac' visibility-input-guid='b8bb3f62-6ea9-499d-ae43-eb2c274a69ab' zone-id='129' />
      </nodes>
      <edges>
        <edge from='0f133594-4978-49e7-bc31-511a341a2e69' to='7314ce4d-17a3-4176-b921-cad60b24ea18' />
        <edge from='0f133594-4978-49e7-bc31-511a341a2e69' to='4ee3ee38-2003-4f14-836c-2d5929249725' />
        <edge from='0f133594-4978-49e7-bc31-511a341a2e69' to='e897d2de-a731-481a-a101-03cc5b8b912f' />
        <edge from='342a13bc-8048-4627-bea6-132f8cf5a730' to='b8bb3f62-6ea9-499d-ae43-eb2c274a69ab' />
        <edge from='a712404f-69a9-4e90-b247-f3ccf097de73' to='90a0757d-6722-4d95-8cac-dbddba9dc0bd' />
        <edge from='a712404f-69a9-4e90-b247-f3ccf097de73' to='f5304845-6659-457d-aaf2-1efa85f18a02' />
        <edge from='a712404f-69a9-4e90-b247-f3ccf097de73' to='8fac39a6-b4d7-4ab3-b64e-4800a2e78eb4' />
        <edge from='b76aedbc-baa8-41a6-95ce-2b670acfe013' to='47bc89c5-0cb5-4795-95e1-69962ae9e07b' />
      </edges>
      <pin-values />
    </graph>
  </_.fcp.DatagraphCoreV1.true...datagraph>
  <thumbnails>
    <thumbnail height='192' name='activities' width='192'>
      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
      nN25VlY0/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='bad_habits_age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bad_habits_educ' width='192'>
      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
      AGgb8EA7oU0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='bad_habits_map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='beds' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='city living cond' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='fruits_veg_age' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANKElEQVR4nO3dy29c930F8HNf8yRnOA+SM6REUhJhiaTixIlst3AjNEEMZNMUCQIXLVAU
      6KLdtECD9h/oqmiBLItui66SIJsAQQLERYx00aRI4tiyIsqUIokU3+8h531fXVCifGeuY2t+
      d8TH93wAQ+TVzHe+Hs3hXA7JQ833fR9EAmmapuknvQTRSVIKAJ886KxTCoDrulHtQXQieApE
      ojEAJBoDQKIxACQaA0CiMQAkGgNAojEAJBoDQKIxACRadwB8H/XaIVq2C99zsLO1hZbNb3mg
      88nsPODZTSwt30MyPY2Eu4b1Axve5gFembtyEvsRBfi+j2bbUZphGjos0zh6u/Mv9VgSkxPj
      2NkB2raP6Zk5LC3MBy7jui583z/+EwB+c28dttP7M0U2HcfViWLX8e//7C4WNyo9zx1IxvC3
      f/JK1/F3frOId++t9zwXAP7u619A3ArehbcebOLtXz1UmvvnX57FWHEwcOztXz3ErQebSnP/
      4ZuvwtCDT/rvLqzjnfcWleb+5ZvXMZJLB45Vak18uLSjNPfKWA6FbCpwbPeggb/59o+U5n7j
      i1fxF1+5DiDsGcBpY311HTt7KZSKwMOFu7D9OOq1GgxDh2bGEXuSHgAwzaMR//GDd7F72Oh5
      qc9Nj+Kf//pLXcfnl7bx/v2NnufmM0lY1mtdx5c2D/Dz3y73PBcA/v4br8GyrMCx7UpDee6f
      /tG1rrkP1yvKc//xz/7w+CPfUxv7deW5b31prmvf5a0d/Nt3fqE091tv/QH+uJgNHDMtW2km
      AOi6cbxvVwAAIJEsoBQ3MFoeRmxrB9lCEZ7dAjTl2yY6VbpPgcwYymMXjt8fKY0evWGlOi9K
      dObxZVASjQEg0RgAEo0BINEYABKNASDRGAASjQEg0RgAEo0BINEYABKNASDRGAASjQEg0RgA
      Eo0BINEYABKNASDRGAASjQEg0RgAEi3QCrG3voj5ByvIl6dgNTawvF3HtdkruP/bO5iauwGn
      UcXkxbGT2pUocoEA1Gs1GFYcK4/vozwyjjdeHsGt1V1AM7C+vIyY6aM6PIykpXc1w/lQ+53B
      vu/DtrtLj3xP8XcRf8xcz/PU5gJwHAe2HSxLciOY67pO185R7Qs/OCeSuSH7RvErdD3X7Z6r
      0D54PNd7NjcQgNLUS8iX6rh99x4cu4VGU0cmP465yTLWlpew5yTweG0b16ZKAI4etE+b4VQ7
      szRNO57VeVxxcPhcXf3szzDNrtmd1YM9zTWMrrm6rt5KZpomTCO4n96nfQ1Dfa6uh801PubS
      zzNXP54b2NKuV/DB7buYnJ7BeCGJu2s1XCwOotl0MXZlBla7huHCEDRN6/ovitq40LkRtNGF
      zY2i5E4LmR2N/ty/QH/21fq1rxaybyQrP/t/D8QrMVjAa68Xjt7JXkLhyel+vHBUWnv9lc9H
      cetEp0ZoN2gv8oUM9Hi85+tnswNRrUL0qUUWgNdfv46G3fsnVOVMLPT4qzdmUZ6+3PPcdCz8
      nHF0NI+ZmUs9zwUAPYLz3E+rXC5gZkbtE9awU56pqTK++tWE0txMJv3JFzqlIgtAv8TjMaQU
      enmTVviDdHS0gBkt2ftghH/CWy4XcfNm9+8jeB7ZkAdUqVTEjKn2QAsLgGkaSKXUAqBF8An6
      STn1AThrEokYisUhpRmmpf5KB306DAD1hWkaGBxUq9S3rP4/PBkA6ot8IYM333xdaUa5lOk6
      pkGDaao9Q+rGs1M2BoDOlEQihq997abSjJnSs2cmfjMcicYAkGgMAInGAJBoDACJxgCQaAwA
      icYAkGgMAInGAJBoDACJxgCQaAwAicYAkGiBb4eubCzh9v3HSOZGkfEPsLJTx9VrV3D/zjym
      Zr8At1nD5ASb4ej8CATA9Z+UHMFB28zijc+O4tbKPnwf2FhdhanZyI8MIxXSDAdfsRnO88Kb
      4Xy1HwT38XHNcOoNY7bjQPM7muHcKBrcuhvR/Eia4Wx4HT8X7EWwr+s46LyLo2hwc0Oa4RxH
      fV/vI4+1QAAOKwe4PDOHRwvzSMQHUK9ryBbG8PLlcawsPsS+l8Ly6jauXSodX+e4qUvTAIV6
      RO0jbV2B45raWdrRTxB1z42iEc0yTZhG8AFlGN1he16m2d2IFkWTnWla6Pz59SiaLUIb8gz1
      B2pY45yp+AER+D3NcOULF7C0cAfFsUu4MJLGwkYDFwqDqNVtlK/MwmxXMTKcC7SKRdowFto4
      16+5p7dp7VzMjWh0P/cFOp4BYukh3Hj12c9x5p98oI/nj9ri5j6rVvdBdNrwVSASjQEg0RgA
      Eo0BINEYABKNASDRGAASjQEg0RgAEo0BINEYABKNASDRGAASjQEg0RgAEo0BINEYABKNASDR
      GAASjQEg0RgAEi3QCrG7vogPH67CTOdwZTiBB+tVzF67hIU7d3B57hW0qxUUi4WT2pUocoEA
      5EuTeDU7hPsru1jequOlUgoLjx5hIJPBvTsLGJ+8+KwJ7onO91VEOeuT50ZzWy9251M61w+Z
      G9HN9Pt+6KpMW11dQ7k8gZXlNaRSccTaA3CqGxhK+Zi/9WtUrsxhejzfh2pEH47jhCyqXo0Y
      Ntfz1O/YflYjOk5wblTViHo/qhFdB513setGU43Y+W8XVTXi07nBAPg22n4CmVQSW04F//v+
      Bj5z4wa0eAtIDWB9cx8xy3xWhwg8q65TrkbUYFlW9/EIqhHD5kZVjWiZwTlRVSN27hxVNaLR
      0Y2oG23luYZpdu1rmNFUI3bOtX31YOm6fjy3o4DSwvT0FABgeu7zmH56PHURAPDGzZvKN050
      mvBVIBKNASDRGAASjQEg0RgAEo0BINEYABKNASDRGAASjQEg0RgAEo0BINEYABKNASDRGAAS
      jQEg0RgAEo0BINEYABKNASDRGAASrSMAPiq72zioNmA369je3Yfnudjd2YbjAa1W62S2JOqT
      QC3K4foiFjbrmBgr4dHSA8D3sJvPobqzj4HdGqxkEpcujJzUrkSRCwRgc68Cp1rH2oaOxGAB
      V0sJ3FpvwWk10WjVsLu1glgyidJQqg/NcB5su7tUKopmuLC5nqdesBTeDKc+13Hcrp29iJrh
      PC36JjvXcdB5FztONM1wnfeDHVEz3NO5wW7QoSyaRhqHBwfQWzXM14DCxDXkiwnsHdaw3Ezg
      sFrHeGHw+DrRNcPpL7gZzgi59PN5kc1wUTTZhTXDGX1qhjP71Axn9bMZLleagGds4uL4BSR0
      B3vVNoZzKdgtA2O5USSTW0gPsR2azo+OakQdhZHS8bujyaM/44kEACA/zPN/Ol/4MiiJxgCQ
      aAwAicYAkGgMAInGAJBoDACJxgCQaAwAicYAkGgMAInGAJBoDACJxgCQaAwAicYAkGgMAInG
      AJBoDACJxgCQaMEAuG2sLC9ja+8A7UYV65s7cF0XWxsbcDyg2Wye0JpE/RFohWhsPcbqoYap
      lIu78/dg6kClOojG/iF29htIDKQxNZ44qV2JIhcIgA0Tjd3H2NBdxAbzT5rh2rCbm9Djdew9
      WoEZj6OcS7MZDmyGO55xXprhtFgSY6Ml7FSqSGoOPjjwUbw8i6FCDJVaA/VaHNVaE0Yxc3wd
      NsOxGe7cNMOlszlkHWDs4iQs2KjUbOSHUnDaFsp5C+l0FslMTnkBotMiEADdsDA88rT9zUIx
      fvRWLB4DAGTzrEWk84Uvg5JoDACJxgCQaAwAicYAkGgMAInGAJBoDACJxgCQaAwAicYAkGgM
      AInGAJBoDACJxgCQaAwAicYAkGjmJ1/k03ntP/8Vzl6l5+unrs8C//StruPJyg7SO4c9z03G
      LQDDPV+fzrfIAmA1G9Cbtd4XaYV3Dl19+3uY/OB2z3ONXA748r/3fH0633gKRKJ1BaDdqKJS
      baJdP8DK2iZc18Ha6gpsD2g0GiexI1HfBE+BfA8Pbv8SlYHLSDZ2ELc03Kvvo31Yw/5BG6nM
      ICaTyRNaNVqT//ffGHznZ0ozjG//C2Cej/tDqkAA9jcfY2BkCq2Wh9hgDi+VEvhgw0a7sQ3N
      imHlwQp062WM5bub4XzFZjjPD2+G8zzFxjkgdK5RrSC9u6k022m34ZnBjyFshnt6W2ewGa7Z
      aOLx4iLWmilcHo7jvT0Poy99BpmcicNGG4eHNdTrTRjD3c1wWscd+7x0LbwZTtfV5mpA6Fwj
      gqY1y7Sgd8xmM9zT2zqDzXClqasoTUyj7frQfRvVhoNsJgnHtpAumBgYzCExMKi8ANFp0f0y
      qG4gph/91dBRIRys2FFaBrPZF7fZGZXa3UT51vtKM2ITXwQG8hFtRL9PZF8HoCNDy7/DtZ98
      V2lG8o0ZYIQBeBH4dQASjQEg0RgAEo0BINEYABKNASDRGAASjV8HOCOsZh3xg33FKSOffBFh
      GIAz4vL//BCjP/2p0gz95n8BOv/JP4qnQCQaA0CiMQAkGk8IhSs8nMfsj9U+t0iO/xWQGo1o
      oxeLARAuubuF0Q/fU5phtt6KaJsX7/8BbIClGyqH19MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='fruits_veg_educ' width='192'>
      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
      NAUgpv0f7wV6WexBgkUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='habits' width='192'>
      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
      HbIfswAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='health' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health_income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health_map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income low' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income top' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='income_das' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3AkWX7g98vMqszyFgWgULANdAPdPd3jdnZndmaXazhr6I48kjqe4kIS
      KVHSMiQFdV8khqT7oJA+XIQixAhJpziJOh7vqCMV5B73SO7SrOXszu7MtJv2Dt3wBaC8y8qs
      rDT6gEY10AAa3jXqF4EIZNbLly+r3j/f+7/3N4LjOA5t2pxQxMNuQJs2h0lbANqcaNoC0OZE
      0xaANieaVQKglvNUVIP84hzZYm3Di2q16qYV24aKWq+jmZDN5ZZOmtrq4yfkclkAqivqfbbM
      yuvBpFbVNm3DTjC1KrWahrninG1UmZnPc//2TfSmxcP7D7Btk9s3b9G0LOYXFiktzlLRrX1p
      036g1uv7VnetVkXX9FXnqtWN+9NGTE9Nk1+cY2Y+2+qTi3NTzGeL5BfnMSyT6Zn0rtrqWnlg
      ojI/1aRh5sHJE3bCvPegRo9PR/CGUXMZPLFuAkKV6zmNqFciV9cJBuKYgsAbLw0x+fARedNN
      1CrSENykmxHE/ANiPUP0+1SuFpePBzBrRWKpU9RyM9y+/YC+oV4Ki3NMzJfwigbjj4NEvWDK
      IcoLj0nFgzwyOvnia50sjD9kuq6RCMapW01CkoEueGlWs9QbNolkknoxT+fACGZ1kYVcnWQy
      Sq6kIzbK9I+9Qmn+Me5gnMriLBJeKtTp9scolssInd0E9CKiP4GgV+kd7CNvh7ny3nsMvHyO
      GzcfkIjKTEwuUFPLvHZxlHv3HhEaO7OrH+SgmJqexqgVMaQAil0nEIiQKeWRXAH0Sh5EmZ6+
      BIWSzidfG+O97/yInsFespkCQbebms/PK6k4V+7Pcqq/g7nFMmKjjOCLEw9K3L71gFdef43H
      M2ne/uTrFIoFrl/+MbHeM3QGJB5MzNPZ040sOpRyC8hKgGKtjFcJYLs9vHZ+EE03iUSCZB5N
      4XKJ4OQZ7O/h0dQsHYJKM5ykrlaAnh1/D6tGgPzCAg8nJ9CrReqGjW2oDI+d5/7t60yn06j1
      JvW6Sq2Ux7Cgki9w5vxpjCbcuHELRA/3Hk1jZB4hB/14ol24HJuuvkEUySKaWHnc5PrlS2QL
      VdweP/2JOJW6iqrWqWsqwVgn0YCX8Xu3mJydp1rMo+PB5diASa1UYuj8OXLzOURRRNM0VLVO
      INZJd1c3kl3n2qXL5Msqak3FNgxmph9z+8FjAuEEndEguqbj1Av85Np1psanMRwbvVom3JnA
      sS0u/fgnTMzOA2DpJX704Q26kwke3X8AjRof3pjAr8Dko/vky/v3Rt0vPIEwAa8bXdfRGzqO
      Y5Er1unrStKfiPPoyfcFNrVanWa9wqXLV8hmK4ydH8PQNBxR5OHdG3x88x5qTaXZbFLXmyTi
      IaYf3efDqzeApRGnI9kLlk4xm+bmrdtkFxe4ee8hLl+YjrAPx7HAdpb60hMuvf8eLm+o1Sff
      f+8HeENhFhbSTExO7/o7ELazD3D7+mWUcJKRwdSub7wRmfQ0j+byvPXGq3tW5/T0FP39A88t
      U5iaRh7oJ7DOZ7ZRZS7fpC8Z2/D60uIsYjhJyCPtsrVHEYPpqTz9A8nnlpqemqZ/oH/P7rpp
      fY7J9GyG/r6djwDbEoA2bV402qtAbU40rs2LHA62bSOKu5NPy7KQpN1NSV7UOur1eut/XddZ
      byIgCMK6v4MgCKvKL5dbD0VREASBZrOJLMtomobjOLjdbtxu966eZy/YUwFoNBooirLrMgAT
      37mDnlf3qmkvNOf/4ae2VG5lp1VVFY/Hg9/vR9f1DTvwVn+v9VgWFMMwcLlcKIpCo9HANE2q
      1SrdySTCjmreO/ZUAAqFAslkJ6VSHaNexFFCiE0VS5IpL85ji24kxYNt2cRCCprpIhzwgKWx
      WDLxu5oISpBUd2Ivm9VmHWRZxtTLfPO73ybY2Y9HcuiKBagYIl7BwBPporQ4hegW+fb3rvHz
      X3qLb//gR3QkuhFrafovvslPLt0iKhu88snPMjd5h0q+iuXx0Ns7wPzEHfBECXglXJaJarlQ
      RBPLEvnCz/0cD698hGPUwRulmp2lM9nHfDaLW5IIeV3YcohkIrrv38OeCkBTV5mamyc3m0b2
      eTCdKvX8LN5EimQ8DAbMlwwkUyVr61iWRDFTRXY7hLovUFm4D267LQAHgGEYBIMdSJKLLrHM
      B+NZFqIxctkcUb/C576Q4FY6R8OucP7MS8Q6kwydGqKpaShdp7j38XWGB7sppOcQxaX3eCTZ
      i15ZWpbGbmIurWpiOBIKFrbbS1iqU9ObOILD46l5ROcRxUyGD9+/RWSoD8UrEBGapPMav/QL
      P7Pv38ORWgWam3qMHIyTiIWZu/QYo6JvftFzcBwHQdjdIHsc6hj64rkt1WGaJi7X0jsvm80+
      qc9BEgXu3LlPRzyCZktE/V6CoSCzU48IxDqRHIlgyEelWsWxLERRwrRMXC6JTHoGT7iboF8m
      FAySX5hjoazT35PAbFoIkoBkNynrIKPjyCHGRga5fPkyZ86cQcAhszhPMBDD5fUiSg56uYij
      BIl6RUo1k0QysW/K6pESgJXshdK38gdv17G6jmq1isfjwe12U6stmSkYhrHmmt3oAM/i8/nw
      eDx7UtdeseeCVa+WqDYcIkE/iiKv+mw7X2bmf/yfaN6/v9fNO/Yo587S9U/+h13XI8syLpeL
      bHqaq3cfE/EIWO4gQqOM7A9TURu8fH50D1q8hN/v3zNB2kv2XADmM3lEoFrKILr9eEQTRVHI
      1x2M8gKJnj4q+TyhziRel0C9WkKSFQoVA4+g4w7E6OmM73Wz2qxDtVrFRqAzkcAydERsvMEw
      vmgnLjG/7fpEUVy1miQIAoqi4PF4dr2kvV/suQDYTZ1KwyHsXxpaH0/eJdXXS3DgNYzyAuVs
      mvv37nPaEyaj18lN3SaR6iPSNYZklsFaOwy32Xssy6LRaDA7M0PFEIgHJGxXgEx6ioTkZn5h
      Hn8kjl/Z+jTUtm0URcG2bTweD5IkHdmOv8yh6QC1cgHb5SPkX39OmPv9f4k1M7OrexwHBXa7
      dcgDA0T/w/9gR3Ws1AEqlQr1eh1BEBAEAUmS1m2jYRjIsrzm/HooioLf799R2w6LthJ8QuvI
      5/M0m83WZ7ZttwRgpSAsv803QxRFIpHIrtp3GOzZFKjRaOA4zoZf1kYKsNVogKLwbFf/8C//
      Y8qLV/eqeceaWPITvP7V/2tP61x+8y+zbLLwLI1GY0v1bXWUOGrsmQBMPrpPpqIzNthD3ZSI
      BH2YhkahqBKJ+JhdKBIPyjh6nZq/i6BVwR+IMP1wgu5zwzSqBkKz1laCDwhZljHNp35vu5mm
      LSu7u2V5MrLb6eJ22DMBCEUTKH6DcqlM3ZJolOYR3T7u3J/g9OgQoiiQW5wjFO5AcCzu372H
      EowRcitMT4yjqiJnh/vaSvAB0Ww2WwrqTmbBbre7ZeDm9Xq3PF11HAdd1xFFsSU0y9Nd0zRR
      VRW/339ghnJ7JgDJ5PrOEiOjYyuOzrb+OzfwfCeGUHwUaZcrCEdNgd0pwfjerccvoygKmrbk
      V/3sdGiryLKMz+fb1kpPo9GgXq8jiiKyLFOtVjFNE8dxsCwLQRDQNA2Xy3UgI0FbCT6hdSxb
      Zaqq2up4G7Fyfu/1epFluVV+u8ucuq4jCAKqqiKKIoZhrBHAZcU7FAptq+6dsG/+AIvpGfzR
      LgLe9XaDXSzpvk/t0Z9Vnk+qEjzy+tc4/frXDuReXq+XSqXS6nCbvXF9Ph9ut3tXLyZZllur
      T8udXxTF1r2XN9IO4r1s2/Z+CYBNOj1PUmxy755NIuzgC0Up5Ir4AjL+gMyjuwsMDPeSK5Tw
      eGQ8kk25phOJd5Hs3Nj3ts3eIQgCLpdrjUK8Eeu9qHaC2+1uTQufFbplgQgE1vPO3jscx6FW
      q+3fCBAKBqlpJm5RoFwuoVYqGO4wzWIBwRWld3CA+ZlpRKFJTezEG/QQjXhwrK0tu7XZG/x+
      P6qqbkkP2IuVHlEUWx5hy55oK6dRHo+ntYu8n+i6vqRr7E/1IsOjZzctlXxOlIWTqgR7AzuP
      cLBdlkeAnSrBO8VxHBRFQZIk6k8CdEmS1Or8+31v27af7oK3leCTWcfyxqTjOBQKBWDz9fdI
      JLLntj3Lqz8bmWLsNaqqUqvVkGV5yVVz3+/4hCXtX1xjIg2A3aRhSSjup1/u9IffpVHavkXi
      ccUX66T/zS8e+H0FQSAQCLR8Alay7M+7/GbeD8O25VFov1me8y8v/S4r4AcmAAuLiyiyi9nJ
      aXoHB3EAtVonGvVjNCrMzOv43BBO9tDf1XFQzWrD0txe13VM02y9hR3HQdM0fD4fkiTh9XoP
      uZVP2e7swHEcVFVF07SWDrL8d2C2qrVynkJFIxQOUG+YyKbKnXsPyBYrAPSf6sXtyBzJ+dgJ
      YGUHX9n5l4+PM7quk8lkKJVK1Ot1dF1vbcgd2Ajw0sXX1pz7e30jq46T8adKsScYRRJ3pwMc
      JyVYCR2uJaXb7cblctFsNmk0GqsEYr9XZLbLTtpjWVar48uyjG3bS6tfbSX4ZNaxnnWubdtk
      MhkURcE0zdYGVSAQOLbWngC1Wq216gNLfWuZfR4BLBoNcJzmmuWthtFAkTdeVz5pPsGd/+S/
      x3Nua9Ed9gtRFOnq6mopv7VaDVEUj9wIsB6O42Ca5qZGdM8GANtnAdAoFMBo5JmfHqd35AJ1
      rYpbdOGYGkowjt/jBkujrEkogo4l+Uh1t5Xgw2J5T2B5ibTZbB4LAQA27PwejwddXz/Ezj4r
      wRKyLOHxCPjDHdQKZUKRKKFQAJdLQtM0FtLTFIpFAqEolUqZUrG4v01qsyUEQcDr9R6IQdpe
      8Dwdy7bt1n7DSp+DfTWFWMJLPA7QT1f36jjv8fiy08vT80YlRCC+ZFbt/6nP4lx4aVd334sA
      uwdVhyvRjoa3E5Y79vP0I1mWkWW5NQpIkkQgEODbP/zx0YoOnex9msTCPTiA0N21q/psy0aU
      dtl5D6AOVyLRFoBtsOy/rKpLGWm2YjgnSRKO4yBJEtFoFJfLhdsf3F8ByGfmqeg2qa4O5Ccr
      Dg2jAc76hlXNRgNJURCB0h/86xOjBId/5ZcJ/8ovH3Yzjg3NZhNBENB1HUVRtuQ9tuxl5nK5
      kCQJVVU535/cXwEwDAMHgetXr9LZO4jHLTA7MwGSQqq7k1whh98f4874BC8N91AqlIn2DbZ3
      gttsyLL1aLVaxbZtGo0GzWZz07CLy4q9bdtMTE3zL/7mh/yXv/ju/gqA2+2iXGnQkYhhGnUW
      yk0SHQkEl4JjW1jNBvmKTmciRiASoyMSId/cvN42JxdBEFrJNUzTxLZtbNve8krVt/7m2/zV
      e+9z6vQoweA+T4E6ulJ0bDSNt5vUDZvBoSGkFQr8clilk6QEK+c2Nx1vszEej2fLm4R3F0uU
      E6PcSxcoFkuHqASLboZPDW34ce21V2g662ct2SrHRQkOe7wcrZjJR59lp3rDMFrmG1vxJXBZ
      TQRD45Tf4Vs/+nDvBKBarWFZ5proYNVqlWAwCEB2YY66JTGQ6t60vu88vMtcpbxXzTvSvDM0
      wmdOnT7sZhx5NF3nL7//HoPdCS6eO9fasbYsi1qttiUBeHWknxvlRyyaEk4mu3cCUKvVMAyd
      3NwEixoMJhNUimVwmjyaSnPhlZfR1Rq+YIS7t6/jdrkoaCIht4Es+9BsEbO6gO3t5NXz7c7Q
      ZjXNZpPJqWkezs3zxtkzaJqG3+9HlmVKpRK2baNp2qZm27LsBl3lYm8YRNfe7QTLsozi8aD4
      g/T19JDq6cJxQFY8DI0Mk0ym6OjooK+ni85kLy6Xm6BfIZHsxadIIAgEwnG6E22H+DZr+Wf/
      +o/45x/eoijI/O//9ltksrmltXy3u7WkXqvVnuvcb1kWY6Nj4AvyvUaIqrWHUSHi8bUd99yF
      88+UWdr9jcfixGMrwh/G4jw7KbqY7GUovrvNoeOiBPdH20K/GcFoFLMpUy5Uabg7WShVOSMI
      q5x4lvcGnt0Ym5ub48cf3+Ta9AJatYoZTuFaeMyD5D7vA+yGVLgLa5dJNI9ift71CMjHw9js
      MHlzbIQP//zbCJIXd0OnrqUAKJfLq8ybLctCVVV8Pl8rf/Gf/Pk3uVnScdwenGACV62AGevB
      LOY2FoCH924TSqToiq/jqOGYlCs6DiY4bBoWO7swR77aYOz0qda5arVGMLhaUlfuBF+aqZKt
      W5wEXu7x80rP/sbBOc7ous43PriG0X8WwbY4JRp84vzoqo6/PAo0m02azSZerxdBELj7aIJ7
      U3NYgSgCDYTFaaxwB2I1j9TRsbEA1GpVBGmOhcUiPrGOW5GR3T58sS4iPhflcg4BF7ajc+2D
      HzEwdoFHU2lOp2KUVZ1ILML0RJrTZ/opl2uoepPZqceIkourt8Y5O5Jidt5NszKPJ9KBWtOx
      GzaJwb72TnCbVbjdbgKmzpCryT94bYzR4aUXaaPRwOVytSw8lz3vluOVqqrKH/zxn6DLftDr
      WL4guD1QLiC6XOCSNhaA/qHTxENu8pqXQvoBohykUi0RiUUBFy6zgS/Zh557RCzZS6Wik4iF
      CUY7CEXBcUyCXgF/PIVlTGAYNkoggstu0JOI45JlTANkXwi36NB/agh1sXQgX2ib44UkSfxX
      v/kba84vB9cSBKE1zVyO+/PN9z/gez/4EUW1gcslYdsOICDIMkIwgiKLiJL76LpE3s/U0DaP
      1vdcjosS3B2U6Q4+3+XwIFwijxvLUR5WBusFmJ1L87/+5XfA5UKfncQQ3diSjKn4EctFHKOB
      EO9GcMyjqwT31zIIG3jxbJXjshPs6Tl4V8gj+t7bFivX/C/dvI3o2JSKBb6V0bA9PlxdvYiW
      jVjXMHN5RAQclxtRLWPXqzj7FReoXMgynykyfOYM7g1/d2tVhGgwKOYbhOPBE2cO3f/H/+bA
      77mVYLhHHdu2mZqexmiaCE2DP1moYRYLNDWdSjqHO1fG3d2JKLrwDIzQvH0FQ/JiRVJgm4i6
      uj8CUG+YjJ7uZfz+A+5PzXJhrB+jCWpdxSV7kZpVPOEg+YKIbC0ihzoxzRqlTJP+s6faSvAB
      0Gg0tp3c4qjx4598wDceLyCGojgNjcb8DFIkhiCAEglg1lRoGoiygl0pIihe0C1EbJCgKXj3
      RwBcgs39+xP4gmF6EnGUYJQAArFYFAQwVBeqJeD3OAhOCLdgYQouUql2brCDQniyiXScw518
      4vXXEJQ7vH9vnHndREz2g2XieN14kyGszBz4A5i5RUSPhwAWQ33dyHaT24+nwTzCSnDle9/H
      eRK0daccFyV4K95g+5EmNRgMHmsBWMYwDP7nP/wTSm4vgqbS9IexfUGk2Uc4qSGccoFAMMTX
      Xj+D3+9nMZvjD/7qe9ih8NFVgl2vXgB7dxthlm3vOsT6Ualjrznuwa5WIssy/8lXvsDvfv0v
      8IxdRJt4iF0tQGoQY+ohliBh1EqkF0JMZguUtAa6bfP2J0d3LwBzM7PEIwFsXwTfOjv61VqV
      YCBItVbFMq3WrnEpMwOBHiLPXLRsPr149+qJiQ499jP/8LCbcOzp60kS9XmoVkrYkoQrEMSS
      XNhuBatnmKpt8Yc/voajeNGUEIS6UMvVPRgBHJ1H99KIiSRmXSOogCV50csF/CE/tUaTaDBK
      dnGapuAl5k8jeSMIlVkaupsf3bnDy2cHqTUcFMGgKXgYfeI/0KbNdtAdgYYt4LhkGoUcYqmI
      yyXRtCykzDR2tBNBVhCnxjEjHVy5M7N7c2iPP4rPr6xZ7kz29iLYNh7FTyrVTd/gMH3JzqfX
      +UJYTYOeRBx3IEJnPIJtO3iUtm9Um43ZSGW1LAvNF8ZpaAiCiHv4PKLiJRSPoUzcRIoloF7l
      VLPMr3zqIvGmimEd4QwxhalxbEPbVR3HRQnuOH1h0zraO8Fw59FjvnvnAV6zgcsXIGQ3ET0+
      JMfBNBq8p0nYpTyu7j7s+Ul8spuzXXGm8hXmcfPvne7hrYvncbvdfO/yNb6Z1Y+uEhzsGTgW
      nXcv6lhp1bgRyxHQdsMRfddtmfdu3cXp7mX6zk0UyUNactPM5ClNTyJ29SNUi7g8PpoPb+LC
      Znh4iH/07ucByOXydHTE0TSdb3zn+4z0dOEtLBxdAZAkadcdbznlZruOp3UcZ1JBHx+P30Nw
      bJRYB6Ik4YnFQRCppWfxnRpFVDzUy2Xw+rHEpy+Mjo6lPaZsPseDcp1fevc83V1dR1cA9mKH
      sl3H3tdxmMSjUTokF5VsjqauISkejHIJu6EherwI/iB6Zh6/P8D5iIevfuLlNXX4PB4GlKW8
      ZMnu7qMrAJn0NLPpAh2pLkxNY+jUqS35h1kNjXuTc0S9EulCjVRXHE1rcOo5IVjWYvP44QO0
      egMDC5e3g7DbJDkwhFvc2lvU0GrcvnEDOdqNVld32A6YenAF1YzSaJa21Y5rVz6kO9HNQjG/
      o/YfRQzDAEHCbDSwy0UMQWRxZo6evh5knx/DaPBawM07b7xEsnvJyfbZ7Dwf3L7HQiBKuVwm
      HA4fXI6w7WKYDl3xMKpaxbDYsnOkpHiJhfyYjkg8HKBaKeCI293wEXC5FJKdcXpSXWjVKhXd
      xLWNziNIbkJBHw3D3nE77KZKJl+lkC9ssx0WXsXLfHp+x+3fKZZlUalW96XumVyeRrWC7PHQ
      2duD1KgzfG6UQDxOsKub1x2VX/jST5Ps7qZarfKvvvEXPHj4cFUdsUgYe4UJyJEdAVKpHtKZ
      AsOxCLZlYTuwld+vqdeoVCoke3pQ6w16enp2oDzaNA0DOxrHrFV5+aURXNgYloMiba0TCdjg
      iXKxt4tssbajdohuP2986m30pkA+u7iNdogEQyEGR8+TX1zYUft3iiRJhJ7s4xiGQaFYxO/z
      tWJD7ZRCocCdu3foe+sdzFwWl6JA08ATiYLjLCVXfDLFm0un6YjH+aWf/jzBZxzkfS6JN2LB
      lin1kV0GbbO/HMQyaDaXo2kYJJNJqtUqXq93S5Gc18NxHP70b79NKZFk4fpVXIqHYKqPej6L
      3WzSqGtcHOjjFz//U9tS9o/sCNDm+JPoeGrWblrWlnJ4bYQgCCgCzF36gEhPL/5ULwDKk5FF
      m51msKtzw86/8j1vWRaiKC4lATxuI0C9mMXwRIl4N5bdSrlMKBze8PP09GMaog/FrtOU/Ayk
      nong61jMpTOkUsm9avaR4zA2wgzD2JUBnmmarWyPf3jpGh5gKBzEdhxOdXcx2JtqJcuzbbsV
      N1QUxVZyvGw2Szwex+VyEQ7vszXo3ZvXkNxeclWNgb4kApCbm8YWBW4/SHNxJIntiRAP++jt
      7QV0PnjvIzpSA2RyORJhL9liiUA4BlqZzoFzTD56zEAywZ2FEl0hGTxB8nPTDJ5/nc6Ij7nJ
      cd6/fIc3Xx2lpltcvnGTt189Dy6FxWyFN956nYm5DA1NRfH6EdQqtj1KrVrjxkeX+cwXPke5
      blAv515oATgMdmt96nK5WjnLvjo8QFdn5yq3yOUguaqqAuvve0iShG3bWJaFbe9hZLj1mJ2b
      w+X2UClrqPUipuUiosiAQdDrolI3GAxq3J6qtQQAyc2lv/0+9wpFPve5t5AlAbU0zQd/d5Uv
      /9pSPrGpiSlm8xUe56bpPT1GUW3impmnMzLM5NQUoiTy0Y9/COFBwn6Fn7z3fVKjF7lx5WO6
      hwZRy1nKdQg2NMymROn6R8yWYbAjzI2rH5FW4eJwaj+/mja7JBIOo2kauq63kmDLsrzubvey
      IDw7DXIc5/CnQJmZx4iRLuYe3EMOxzk7Mvjc8gtT46iOm0q1zqsXnsbVz6anmZ7PMjJ2gbB/
      l3bujsW9++OMjY3urp4jzHG0BVrGMAwqlUorBAo8NaNf+dZfTvm6/Lc8ffJ4PAQCARRF2V8B
      WKgaLFSN1vFBRT9TFyuomUrruPNC74Hc9zhxFAVgOdvLRkZ/tm2jqiq6ruM4TuuNLooilUqF
      8BO9b2Ws0JVomoZt2/j9/pYSvK8bYQtVg+tptfUHcPXjq/zVX/8V5pPG37pxBQC9XqNW310Y
      lGXUTIXsrbnWH8Dd8fFNr7t972REoTiqTExMPDeGarVaRdO0VZ1fWBEgt1wur3rjP4vX622F
      TrRtm/n5+YNfBq3UaqhVlT//xh+jWzLJoMXXH01Sr1fQnADnB2LoDY3ZuQwd3b387Je/tGf3
      NYwcV64/Yi6dpmHYGJUFEgMpFsfnQHIhhLq4eeMagaAPGxGfJ0ht7haNyBiKWcLn8/GlL311
      T9rTZi3Dw8Mbfras4MLTubwkLSVbbzabLeV4sz2ASCRCuVzGtm1isdjBC0CquxvREehIRDGa
      EPELfPhHf8prn/4sXYku5udmeOXlVzh71sF29m7XMhbw8XgyS71cItWTIhIKU1f78Af8vHrm
      ZWwb5otVmoZO2Cdj4qJWyhI+/SpDZ1/lz/7ff05ysJ3L67BYnh7B0pRnuaOrqkpnZ+fzLt0Q
      SZIOXwluczgcRR3geei6TqlUanV+27apVqvEYk9zKyynTV1WdOHpFGnl1Cqfzy/tAbhc+5wo
      O32Jwvzl1vHp17+2n7drUc8vUi9kWsdb8bhqc7iUymUiKzYvHz4cZ3j4FKIoYlkW9Xodx3Go
      Vqu4XC5EUVzV+QFKpRLNZpNqtYrH40HTNILBYGvdv6+vD4BoNIqqqvufJrUwf5nxK/9n6/j0
      61/j6sdXySxm+KkvvIvX/fzEEHfu3uHc2e3HzawXMuQe3modd5y+wE/e/wGdyW4cIcDIUC8L
      C7OUS2VGx1Znsbl552MunHtl1bm5iQkCfX2Ed+mS2GZjzGaT9370PoqicHZslEKpxIggYBgG
      qqriOA6NRoNoNLphHcurQMFgEMMwiEQi+Hw+LMui2XyagFoUxZYeceC/aBORV8708Xt/8C/x
      yF7iQTfeSJCFyUmwBQLRbu6PjzM61IdLlpmaneGr73551/cV/RFuX/+AhYzBt5MmrGQAAB9x
      SURBVEyLvmQYWfby0bWP8bvAcvmpl7Mkhwa5+8f/CiHgRytpWJj4BAWl8zZWw8Uv/9xXdt2W
      NmuRZZnPvvM2mq7j9Xj41BufIJPJtDasYGkZU1GUDaduy9Mcn8+Hz+drnRdFcZUN0rIuAYcg
      ALGAj4fpHF/93GcoVuqkejqxbIuLo2fBtFnMVwiHApw9exbBsVGfDH27dedLdXeTDH+aYrlG
      pW7QEQ9iNB1e74hQLBRoOi5i4U9gY1IIhjFdblJv9JLLzLCwUKDv1ABNvZ3Gfr9YXsXxPpm7
      a5rWmuos4/F4sCyr5cyyUzRNa5lltJXgE8pRVoJN06RSWdrIzGazLXsfSZLwer1LTjeVCj6f
      b0fP0Gg0ME0Tv9+/vyPAVDHPdPFpfM+DSgZ9WMp3m73BMJ5aD8iyvCbroyRJ6E9yR+i6vu3R
      QFEU6vX6/hvDTRcL/Gji6Q7sZ06d5urHV5E9Pl4aG9u3+66nfF+7+gGG7eZTn3h9Tfn74/cZ
      HXlx7X6OE4ZhtDq3ZVkbetH5/X5CoRCmaVIoFAiFQtuKmxSNRtH1Q4gLVKnV6PIG+Dd/+P/g
      9YcoVjQUyUZ2icjhJLnFx3SnRvnZdz+3p/eNRGLcfTTD3/71nzGXLWPpOjXd5Oy5EeqawXvf
      /hbxjiglTeDtz36Z0cFnMxe3OQj0FVmBSqVSK7f0s7RWcVwuYrEYlUoFURTXjBYboarqUqCw
      3Td5e4yMnKG3u5twwEu5XKJUUenr7cVu1pmYnqfn4msEg3ufOLppNIlFI3jdMXp7JUKxCI/G
      Z4h3BKnWdPq6O/HIMvGuHlxu3+YVttlzdF1flbnmed5jzy6KhEIhDMOgWCwuRXvYIASMaZpU
      q1X8fj9+v7+tBJ9UjqISPDU11VqiFAThuUuelUqltXL0LJlMhng8vsawrlqtIgjCqlFiXwVA
      v3OHxp27reOtJIJoczAcRQGApWnPynX6jdhsKTSXy+F2u1tl6vU6kiSteeZ9nQI17tyl/Kdf
      bx2Hf+WXuX/vJovZMp988y08m+wEtzl5bPV9vNm+UEdHB9VqlWw2iyzLeDyedQX+wHWAXCFP
      UHbz9b/4M+o1g5BPwCX7qVWKJDoSZNPTyKKFJgYIBKIEwz6+8oUvHvu4lm22htvtXrUMuhFb
      EZTlWETPi0l04AIwPDDE3QcTXBg7R0M3SPV0YiMiYiNiMxUO4RKhZ3CESrHAw+n5duc/QSwv
      fW7k1ALbC/K72XSqrQSfUI6iDlCv15mfn28ZrkUikXVXcwRBaJlKLK8ULQvMSk8xWNIVlpXl
      detqC8DJZFkpPErYto2mPU2KstxG60lQrZW+vrZtr1oFenZUWGkButI34FnaAtDmRHNko0O3
      aXMQtAWgzYmmLQBtTjSrBEAt56moBvnFObLF2oYX1WqbJ0CwDRW1Xkczl8JkA2Bqq4+f8Ozx
      emia/qSKKpq5SeEdUq3V0PTVmSmrhUUK5Rq3bt7GNA0ejE9gNurcuvsQyzRYzOSZnZ5md+nr
      Dp7ZyXFm5nNUV/yWurZsiGZTy82RrT39om1Dw7ChVt24XxSzaWYX1k9uXq1tfN16v//zyu8O
      k1q1hvakE61SgsvlaebnZBpmBhw42xfmvQc1enw6gjeMmsvgiXUTEKrM5TSiXolcXScYiGMK
      Am+8NMTkw0fkTTdRq0hDcJNuRhDzD4j1DNHvU7laXD4ewKwViaVOodVKhBSJyfkiff1JFtLz
      9PT0kJufIRSPMzWxgMfrprt3gE53k4elBlpmnnhvL00TjPIC3miC7PQMtiSR7OogX64xMnqR
      xek71E03YdnGlEOUFia58InPMHnvGvGuFLMTE/gSnWj5HIFkH+riBN0DZyimp0gMnKeaTzPQ
      lyKfmeLOVI2L/X7ycgpX/hH+vjOU5+cYHQzzKB/gTP/6tilHkXv37iDqOmYkjlgr4vJHeHj7
      Nt2pJMFYDLk0z9UsnInJdJ8Z4sFHN7C7B+n1QyY9R7ArSno8R++ZU/iFBhOzWYxmhdNjr1PN
      TCGIMkW1QiScIDs9R3zsFIGmxmy2RtDjoBoSXkGnc2CMUmYatVLBFe0h7pXoHRxkZnqcqQfT
      JFIJ8oU6HR0R8sUaIa9DrljDH4oTcBkI3hhdssO97CIRfwelYpGA30Uw1oOrWaFquZEtFVtx
      Mfcww8DZHrR8mdm8wLmhwOoRIL+wwMPJCfRqkbphYxsqw2PnuX/7OtPpNGq9Sb2uUivlMSyo
      5AucOX8aowk3btwC0cO9R9MYmUfIQT+eaBcux6arbxBFsogmVh43uX75EtnC0htI0zQMtU61
      kkNoGMwVVG5du8RiTiW/8AiXN4wNmLpKqWFzrj9BrqohCgKaplOvV+lMnqK7u5N6fprLV66j
      6gZqTcVoNhm/d4vJ2UViXSnCfhld1yksznH92o+ZztTANihV6yQ6Eli1HD+5dp35+aU3UzU3
      x+V7abqiCg+mFqgtjDORq4FW4f79e9SNzW1XjhqF7DwLZQ1TV5FFmzvjMyTiIRzBw8hAN/V6
      Axybhl7l46tXkcMxBNuhrtbQNIO6WiHZewZLr6BpGqZWJ9jZS293HMHlIxlRuHztJrlCEaNe
      p1Kvo2kaWl1F9ASIBrzYRp1HU3OIgoBtGsRDHu5MZRABtV6js2eIZi1H0xHRn1wrKAG6ursJ
      edxP+mUWQ1UxHJvM3DQ3b93GEHwM9XWj6zqCIHDlw/d5PDWFWtNpGhqSHMbjcrhx7dL2lkFv
      X7+MEk4yMnh8IidPTU8z0N+/4zLVwiJNd5hYcOMM9rPT0yT7+zlaq+pHg2oxw/Wbj/jkZ99i
      s5DF5VyasiHT39OxScnVFKamkQf6eb4nQI3pKYP+gdWm9u19gDYnmvYqUJsTzZGN9GTb9q4T
      O1uWtevt/nYdtOLw27b9XEO07Yav2Um4m72+x5YEwGrUeTyzyPDw0KapShtGA0VWVh07ttOy
      x1j3mnUMs5yr/wKq01tpHkQG4dXfWHN6L2Z3J7IOq8H98Qk6ojEWClXGxoZbgvM8ATJNc1uO
      6dstvx/32FJNWqFMPOnj/sMZZBm8kokpejDrZYLBMIv5ArF4B4guGrUC0WgHC7kSY6eHuHvr
      Ok3BS0/Mj+AJEfDKlAtZRMFgoeYnpmjYbj+RgBerUQclSGc8suUHbLMPiDLxaBi1UsHGxnHY
      eqbyY8YW5xgmswsafqnGx7fuILg8uCWDcqlOfiFNMhljIV9mamaeQi5DNjPPjas3MICunj4S
      sRBICrKlkS3XeHjvDoWqhktwWJybplgospgrMvn4IY8mZvb1gdtsjm1UmJjNIgcCSM0GxnHb
      5dsGR3YVyLr3l0haZvOCAIFuOP0za07vZIht17Exm+kQL+wU6FA4/VU4YvbqLyK2afDxxx9j
      2XBq7CXioZMVEua5AlArF7j1YJI333htzWdGo4GsKOi1MihBdLVMJLJx6OrNUGsq/oC/dfx7
      /8f/xtTExJau/eKXv8IXv9JOXbQT8vk8w8PDTM9mqNdK+yIAX//uVYrq08DCUb+bX/7i2j51
      GDxXAAqFAvF4nPnZKVyKj/nFHMnOMCYKWjlLcmCEUrWKWawyNTnJ2dFTGCjolRyCy0NHLErd
      aKA3LISmiuj20DAd3E4DR5Lx+Hzk5+aIdndSrhr484sISpBUd+Kgnv/Ek+hKcvXye3z43n1+
      /R//5r7c44c355jIqK3joU7/8RCAZUr5DA1Hpm7YzE7mKVsefLaK2xtAMyxQ84S7epidfEzR
      chNVZLwhgbsPHhH2OIwv1Hl5bIiGVqVct+iMRTDrRWYKJfRajaZlMJvXGewKgNtuC8CBYmE1
      FV79xPnNi76APFcA+odGnvw3sEk1y5+fAmDy0QOCkRiRaCed8QhnXlrvmtSqWi8Cc1OPkYNL
      sSCTqRSiuDUdIBLb+1CKJwnH1Cg1xCOsEO4f+/LMg8NndnRdauBU6/+f/cW/f+Sctl9MJFxe
      kYlL9zHf/eyJE4IDe9752WnCiSQ+ZSmMxfKOcW4xjWZJ9PV0rSpf/5Nfh/mrz61T6n0D36/+
      /r61+SRg6hWKpSbDr57laAVJORgOyBiuSTqdQSsVqFZLpBdzXL+1FDO0UFhKoDExfp+7N24y
      vbi5d1ibvWPu7j0aLjflyRkqh92YQ+CABEAgFPSzMDfJnds3mMuWEUWR9Nwcy64ki3PTILk5
      krtyLzCpsVH8Aoy+epGNrbVeXA5oCuTi9Nn1s6z3pJaca/p63l11XkqMbboRJibaWV12y9zd
      +6h2jY//bpKzrzxZCbIa3Lt/H92UcIwGY6++hvcFVceOrM6jfO6/aSvBB8DAa59kAKi8lGOl
      Y6fijxMUTVyOl4blILNkDv08yxnbtlcluHgepmluq/xO7rGV8nsiAIvpGfzRLgLeJae3RsNA
      UWRKpRKRSIRSqbjtXeKtKMHB//rWcz9vszXSs3PIgtBSgm3bwdBrxHpS1Ko1umQB2FtzaJfL
      9aLYAtmk0/MMuF1UrQDVeoPJyWk+/cnXyKcnUdUEc7kqZxDA0kjPF7CaFuGebqxKGdnvp1LT
      iAR8SJhtc+hDwDFVrk/m+FyqBwDR7WF0dGl6GQ5uLefWcWVPRoBQMEgmPU1Fs7F9cURRZDE9
      hzvSxXx6jq5EBxOP7uPxiESTw5SnMzhGlSvXb3Hq7EskYwGMhsHi7CMsT6ItAAfMfHoBv8eP
      DSfOsX8PBEBkeHR9BRegvycJwMDAYOtcMr60czvQN7yq7MDg073hrSjBbfYCg1qhzLWHd3n5
      zdfZOC3di0lbCT7xyJwaO42no+fodoZ9ZEfPXMjMI3jDRINLprNWowGKQlPXcYtgSR7kZ/qu
      41hMTc3Rl+rEFD0om/TtthJ8MGiVPNfvPiSR6DnspqxCVVX+u//7e6vO/fpXX+b88Pbb+U//
      4NvMF5/mH/7MhVTLGnVHAjCXTpMckCmVLJr1KrOTs5z+9CcpZjIIgD/gZUGzMOtFmg0Lb6Ib
      Ua/Q2Zng0Z2PKTRD9PR1tJXgI4A3FGekv4eytnnZg2alCTWAvkPfzPmivqqul1b4JuxIAMLh
      ENnsArV8DRsRRRTJLaaJBz3cny0jZ2YoNr24tEUSPadxAEWRmZqawacoRPyhthJ8RNAqeSbS
      GYLeEMcvwOPu2ZEA9A+d3vCzT0Q7gfU/T3SvPm4rwYdPJT2NI3uo5SpocCIM4sZn8/z27/4F
      0FaCTzydI2d5p1egMDfJSfEG1g2rNSXasgCkZ6aIdqXwynsrMw1dx+3xrLHK20wJ9v7K7+Pq
      e2NP23ISEVweyosPSQwMnbglUNiqANgaDVOklEnz/v0JXnntZWTJ4dbVq/ScOovP7+b+9ev0
      jV7A0lSGhlJ8+NHHdHaE8IU6uHvzOqMXLqKpdWrFLIlkPx6vm3sfXyXePYTf7zCb1RjoDCJ6
      w3R37Ny5vs32cKwGN65dJv3Dq/zGf/QPDmxKsDwFWebXv/oyL48+P4r3frDF55VoGnVsUyDV
      2wNmA9UUCUcTSI5DNBoiEu8C2yIRDWNJColYGI/XS6WYJd6VwrZsouEgXpeDYVqkQkGCHR00
      GzZOwE13Io7i88CJVMUOj/zUON7UGXoW5zFZ7hAOxWKJcMDLw8dzjIwO7/kO8V6t8OyWrQmA
      KHNmdK3pcTLx1Hn9wssXVn02Mjq2fl3xeOvfixde2fCW7vO/iDDw5sZNCh2tdevjSsep87yT
      rFMr9T2NfmibFIoVnGoRS/EgOg6WvbfWoGuudVZfa1lrBcJ27B1Zgz6PI6sES4lRhEjfhp+L
      4eOTpOMoU52/z19fmoZclnd/499fWgVybDKLaXyDgzSmp6imUoTcex8cdyWiIK66dr37iIKI
      KIrbtgZ9HvsuALOzs8QCAVyRyKoMIdValWAgSHpmEkvy0tfTRbPRQFIURED/wT99rhJ8FHeB
      68UshidKxLvx11oplwmFwwfYqucTTI7yq78wirPyTSkpvPXWWwAkk8lDatnBsO8C4DRVHtxd
      JDTQiVrS8LstRLeHTKFMb1eCSq2GP+zl0k9+iN8fIdCVpL9reylydsLdm9eQ3F5yVY2BviQC
      kJubxhYFbj9Ic3Ekie2JEA166O/vB3Q+eO8jOlIDZHI5EmEv2WKJQDgGWpnOgXNMPnrMQDLB
      nYUSXSEZPEHyc9P0jb5CsiPI3OQ471++w5uvjmJIfkYGe/f9ObfCtQ+/w3vff8xv/rf/6aEt
      hRpNA1V9qhfour5umXq9vmp08Pv9a8pth30XAF+4A62it5SoSKwT09DweDz0pFIY+tJDRyNB
      BNfuHmY7zM7N4XJ7qJQ11HoR03IRUWTAIOh1UakbDAY1bk6WWwKA5ObS336fe4Uin/vcW8iS
      gFqa5oO/u8qXf21pBWNqYorZfIXHuWl6T49RVJuIs2mSHaNMTk0hSiIf/fiHEO4lrEi4AhGi
      Qe+BPfd69A+dZyTb3DSH137y9fce8L/86bXW8VDn2r6wXpnf/e2f39V9910A4rE48dgTxXeF
      3tr5ZGRtxRB6JizKZkrwbnn3Kz+3aZnMzGNevdDB9StXkMNx3nz7Ld58+6015d769JcAWBBV
      VKcbJVbn1b//91qfz89McOXKFV76xGd423+Y3Wx9Ht27g4PrRK6/HUsleC9WgMyZS1izl1rH
      ylu/taZMZ98pTNOk6/XXt1Rn98DIuucTyT6SfUM7a+gBYNo24XDwRc2B8Vx2JQCzU49x+6N0
      PXfjyqZeN/D5PGvSJxnVKgSD6w69z1OC5Td/a90Oux2s2UsYH/yz1rHy1m9x9eOrLC4s8u6X
      v4JLELhy4xYvn1u9nGs1dWq6+UK5CiY6I1y6kuZTnznslhw8uxKARkPH7dH5m2/+JT3D5+mO
      B5h6cAtvLIHp+PGJdZRgGLFpc7tQQrRUOhJJyqpO0CMiGja5ZgOf4mIhp9Eb9+L2xxjsO5yV
      h0qthlpVee8n30cUZUxD4M/+3deR7Ca37zwkOXKel0c6mJktcuvePX7nd34H9y4T+R0FFNmH
      7LJ5gRPBbMiuBMDtlmnoGt19Q/R1+slVTcLxTsLREJK3m0L6AQBmo47oVkhEfa3AV4IgIMle
      TqcSpHNVBvuihPweOMTQWKnubkRHINERZyGT59RAP9+6+j7JgdO89fY7RDp7uXi6B7cyQTAU
      OrR27jXp9CK9Q/1Hdz68j+zqmZejRy9bcERiAE/f3vHQ05Dbg8+pJxSKrzn3PCVY6t29EZzy
      1tpp1OmRM5weWVLKzz7Rzf/z/+Ifr9l4eeWVjXewjxuZuSkGz79OzO/i0YPHjJ05tflFLxBH
      VuifpwTviRVocQJKk0+Phz6/+zqPIZ2pfqbG73NrpsmFC+vGsX+h2RMBqFdKiLIbw3ITWrPM
      t/dK8J7sApcmYfL7T4+HPs+9uzfIlXXeefOTa4rPzKXxeRTi8bWj1fFGwO0NUpu6D9LJWwfa
      EwHwBfx88NHHDAz1Ua8K2M06RdVCpnGslOBCqcQ7b32W/+9P/wiPLFNv2IjNOrokI1giPclu
      5ibu0tU3wlfe/elDaeN+UM1OM19qnMjAxHszBRLdnD59CrupM5HO0R3xoekNZM/SG+W4KMHD
      /QP86IOP+Mw7P4Wm1sgUqiiCAZ4gWrlEsqeXoEciEHmxRgHVqJIZTz9dBbKbTEwv0NsV4cHU
      IufGRl7YPYI90wGWpwaJ7hTF3CLeqJdE9OlKyeBzrt2uErwnDH1+zby/KzVAV+qpX/Lw8FoL
      x1NDg/vXpkOiN3WG06+4n3qEiW68iovFfJmhmEJed4i699cceqdsdr9DMYeOdnRtXmgTNlKC
      BSW467oBHo8/ZGJ8vHV8ktOsCoKI5CztA7gArAZz6TSdiQQPF6qcSwhIwv6aQ++Uze63r+bQ
      i+lpmoKH3mTnjuvYSBHeSAneq7RIE+PjfPdv/rp1/MWvfJW74+PEPQINpZO+xN4I2lGnXspy
      d3wSxed/6pctKbz+xPyj7+C9FA+UXe4ENxA9Cu9956+IdA0QTyQoZaaoWl5CLhPF58MWFJqV
      RbzhGBNzeYa6QthuP9np+0S6h9ByeZROP4uLh68ELy6kmcwv8Lgq81IqQF2tYIluTMPALRrc
      uH6P1NBpTg8PMr+Q5pPvvEtv4nj7L/siCZIdk1y6kn4hlOAfXx/nzlS+dfy8KRvseifYTb3R
      oKOrh+RAL4vpDIFAmLA3jFeWUMsFGlg0TJBNh3g0SKPRQFF8BCJdOEYdl8eDoviPhBI8MnKG
      4NlROueyZBcWePnVN0Bw+Oa/+7fEu3t549PvEI0leOWlMf7o69849p1/mablIh47XJPsveLO
      VJ6/+GBi1bn1TKuX2ZUAJHsHn/y3NE5GnzEPaK2Zn3pqCWk0GsiK8nT7eAM2UoL3yhf4i1/5
      6pp5f2/3UuSu1+NdcHFpU8g0TX7za7+95vp/9Gu/tiftOArEw35+MP0xnzvshhwCB74TLCtb
      iz22kRK8VwKwFXPok0K4s5/f+trOcjt//btXKT6Jtek4DucHO/j0y+ubhe8Hv/fnH646ns9t
      L9flNgTAoVQqAxCJPI3dWa1WCQbXKozLaZI2O18tlfBFImvCbmykBO+FKTQ8xxx6McOXvvRl
      JGHjle9iIUc0tv9umwfF/Zs/4uOrZX71P/vlbbtE/vDm3KoQJ4IgHKgAbGe6sx7bEACBwuIM
      /kQ3Cwt5mvUqmUoVn2ThDUUZv3OLzoERaDY599Jprl79mFBAJhLv5Ma1awyMnKXZNHAaNcKx
      BG5F4fGda4QTI/hzc8wcASW4UqtRLBb57re/RaFmoIg6paJKRzzC5au3OHXhNdxYpGJBJifG
      X4gdYce26Rs8S83O8GJoAdtjW1OgcEeKeCzAjWu3kd0ykuylsyuK4Bh09fQTDAaJ+RScJ4Gx
      vH4vtUqZnv5hgkE/PiWCrnowkOntClPI9yBYAvIRUoJP9fVRrlWJNEz6ezoxDBO1WsbjC9HZ
      f5qYX8EydDwezwuxI6yrZf722++hCDL1T73Kbr2y53OVNdOSo8y2BCD+JLXRxVdfXfNZrGP1
      W3u/AmPthSk0rG8OvawEr2Rpc2eQs+dXnx8cejHMhr3BKD/3Mz/NnYmFXXd+gHxF5/J4ftW5
      7U5LDpKjaw499vOIG3hbrRc1bD0cx9ly2ZNSx3qkZ+coLOQwuHCokSEOg6MrAJK0oQBsFUEQ
      2nU8U8d6uNwuXG75hTV4ex5H1qF1tz92u46t1tHkw59cxTLNF2IneLsc2REgk55mNl2gI9WF
      qWkMnTq1pTeU1dC4NzlH1CuRLtRIdcXRtAanTm0nLInN44cP0OoNDCxc3g7CbpPkwBBucWvv
      SUOrcfvGDeRoN1pd3WE7YOrBFVQzSqNZ2lY7rl35kO5ENwvF/CbXuXn5lXNUdGHN96sVFnmY
      qXF+bO+jQx8VjuwIYJgOXfEwqlrFsNjy8CwpXmIhP6YjEg8HqFYKOOJ2Z7YCLpdCsjNOT6oL
      rVqlopu4ttj5AQTJTSjoo2HYO26H3VTJ5KsU8oVttsPCq3iZT89v6Tqff/3Vf0twITXr6M0l
      /WPZ3Hnl33HnyI4AqVQP6UyB4VgE27KwHdhK/2vqNSqVCsmeHtR6g56enh0ojzZNw8COxjFr
      VV5+aQQXNobloGzRbVDABk+Ui71dZIu1HbVDdPt541NvozcF8tnFbbRDJBgKMTh6nvziwqbX
      lUtp7l8vc/GZRNmiS0JyKyiurZlDH0eOrAAIkptUcvt+BW5PgNEnuQxC6+xQbw2J4eV8CJHQ
      irNbxyV7GT615FyT7PLssB2A6MajQKr3aTj4zdshkOofBLZ2XSgQpS4urlkB8gUjjI292Bk7
      j+wUqM3BEQgn6ImHTmRgrLYAtKFpS7z9qa3FP33RaAtAG7A07kzOnsgskW0B+P/bu5fdJKI4
      juPfloIzhYIgA22B0iKm1YomRdK4dOu7+Cg+hhuNMXFh3LnSuKqatgvbGG2ZKa0MlFsBuQxu
      pAttgRoROnM+q1nM5JzNyblkfv8jkP3+ja9baf68ksL8xnYTLPwnnTYtQ2YuOmnas/5exAxg
      cermB9rTdg70mlgCCdbjj91ARiZ5NyZuiBGsR3J5SCQS/V80KTEDCOfqGC1U7XDU3RgqMQCE
      c2U0DXu7SrEx6p4MjwUHQItMJkuxVBx1R8aew27jIFvAYeLjIVPvAV69fM7K6h20TI5g0Eux
      /IPU2gIvnr4msR4ntRxlS6sitfI43T60dJqO8xpRn0ShDu1qnmm3l1yuQup+0nKnJP7ZMP7Z
      8bjMe1hMPQAUxc+RqlEuH6PpOa5M2UitLXB7Ocz2jkoi6EDyXufNk2fE4jdpGiVqNQe2mk6h
      Ch73NBX1Cxsfd1lNJvFYLS/4S6fTOa2y/PsfrY8fPTx9NgzjQsGdi74/jDYmOv2KJ5qEmt4n
      3KPSa6NaZOPTDmvrKRwWXBj+C2IACMIlY+olEBi8ffeeW4shNnd2Wbn3gIDLxDu6EdHVPY5q
      bbwumfoA8VVd+0xDiqLvb+P2SJw0nMyHgnhnzi7N1Y25eqRJam0bLtneN156qO6hV+oYtUrP
      Nkw+2U8yH5qjVm8Qj0U4qV/+CN84sssyVV2nNGB81a/4mcDAfVWh02qQy+XPLKPZ1Y25yrKE
      rusDxUsnbFMsRcN92zD5DNCipOdRIotUSwXiC4MV5hUuxumaIRCJMKf4BoqvHmYrNGjilKdw
      h1aZX7LRbjbAcfYM0I25KoEAkUgExefpGy9tt5rkjyt92xB7AMHSTL4EEoTexAAQLr1KufzX
      3/4EbVpSou7uLvkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='income_hist' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='job_quality' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='job_relations' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='over_educ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACLCAYAAAA3Q5aoAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUG0lEQVR4nO2de1hVZb7HP7YC2RIaCgximBmE4EgQpKGYNBaG6aMnpzLTR5IZL6BjdnR8
      jtdHTnm6nbyRCrXTMtFqbGTGJHl0Rka7jMqIOIENqBy8gLiFkGDv9p6V54+9RTbuzUUhN67f
      5y/Ya633tt7vft+19vt9f12uXLlyBUHQKHfc6gIIwq1EBCBoGhGAoGlEAIKmEQEImkYEIGga
      EYCgaUQAgqYRAQiaRgQgaBoRgKBpRACCphEBCJpGBCBoGhGAoGlEAIKmEQEImkYEIGgaEYCg
      aUQAgqYRAQiaRgQgaBoRgKBpRACCphEBCJpGBCBoGhGAoGlEAIJLU19f36HpiwAETSMCEDTN
      nbe6AILQEuMWbe+wtGUEEDSNCEDQNG0SQEW2nuyKjipKa8hHr8+/lQUQbjNceASoIFufzS3V
      W4vko5+h5/aQ5O1Ul9YjD8E3RQRJ6RG3uhDtxO1Ul9bTLgJQDXlkbtzC12eMKF4hPD5zBuOC
      PEE9z/6N77CjwIBZ0eEXPZn506LpQR2FH68iI/cMRtUdr35P8rv/eoq+VxOsyCZ1+U7OATsP
      7QRg8Kx0kiKAH4rZ994u/vyPMxi5m4HPz+N3w/2BGgq2rufDb0qpNYO7TzgTUmYSF6AA+ejX
      FNPPs4TsY6XUqjqCx/+eefEBKI3qUZGdxh8udKE8rwCD2R2fwZOYlxiDjwLk69GTSML3G3ln
      RwH9k9JJishHn1rOU8sS8Afy9W+Qd9ednDr4HQZVR/D43/BYdQ6fHfwOAz6MmL6USYM8gDL2
      vv0uu0oqMaoKusARTJ/3HGGejvJ5m7CvPoCpycR42gpatY91u3uTPDnMrvx25Ot5I88d8/Gv
      OWMEXfAoZs8aR5DDPDqoLhXZ6I9GMvHeXFZl5PLTqGUsS/Bvjy7XbrSDAKrY/8UpolPeZIq3
      G6qplF1pWZyYP4kBhTn8rfdveTulH26qiUuVP9AV4OKX7K5+nNR1j9BdsVB3thpz4yT9E1iW
      Hkm2/iiRSdYb0kDlRczPJvHai71xqzuMPuMoFcMT8KcrPrFTWPHsPXi6gaX6L6RnFRKXOKjR
      dYm80nDdMS7GB9injQnue4GlU1Lw+Kma/I/fQr8/hIUjewLwQ94WtiqDmft2Cn5ujtqiBvrP
      YtHT9+BpziNj5Rf837MvsPTXvXGryuGtP52AQRGAFyHjXyL23l54KCqmok95/8uLhMX7OsxH
      de/O63vLiBln/YooO3Ccvo+OdN75r9amezRz3pyC9x0mSvel8e4fC0m1iebnqot65nP0xQE8
      m7qOB7q3VOKfn5sXQE0BRw/s5ZMDext92Af3ChgQHEXfj1aTWjqQX4ZG8Miwh+gF4BtOeNVr
      pL6Rx6DQUIYMHc6A1ubXfygJD/a2/t09kEBvg+2AG5z7grXrjlFaa5NTn/FUMMjayZ1e1xhv
      7g/pjYcCKN5E/HoMB7eWAVYB1HSP5T+fCcLTwZW2whH18D3W4259COw/kMgHe+MB4OuHT8N5
      7tQWpJOxtoRKo2r9aPAAwNdhPkrYaIbs202hOpkw5QQHywbx5LiWm6pPcCjebgAe9IufQFTa
      CS4Shv/PWJfL5hASU2Kto6gLcvMCMJsxR01n/fQoB99Ig0hc+Rrlxf/k1OlCtr16mMdWJDPE
      w5/4RW/y8KkiTpaeYk/aK3z3mxWM6+sg/dZycR+f/COYxFdepLeHbdqTWn4TCQL19dSha/i3
      T3BzHaYNHP+UnZYEXn7T1kErskn9/Nrh6/PpybDBl0nbX0VI7yNcChttk2QbUI3Um5rL4wZp
      oS7e9we5bOeH9ngL5DuAgWWfsS2/GguAauJSUR4naoCKIo6Vq/gMiGZY/HgSwqCmFqg5zT9P
      XUZ3bzjRv3qK54d2p7rGQdoXTlJyWQUsWCwtlMNipouPH95uCqrpEqcO5nGqzZVRMZqsGamm
      UvZ9mItPVKvHptbnYjbj2cufu9zAUneWY199S3UL13hE/4qAIznsOFDH4GGt6/4WkwkVwFJN
      /sfbKRsYSXvPwG+kLq5EG0eAc+xcPoOdV//tM54VyxIYk/wEGzesYO4GI6q7F/0eHMPEycBP
      P1KwaTnvldZiVnQEj5rNLF/ABOezV/Pet5UYVdvD5hNN8/IncngX1i1OZouqY0TKaiYNbKZo
      AY8xwrKSBckGVF0gMS9EE8iVtlUPA39LW8DeWiPo/Bg4djrTIzzamEbLKBFjCF21grkfG1F8
      whkdfw89Wuo1ygCejM7iv8vHMqFRkdTCj1iYcy9LXxpOjyaXfPuHJby0qRazuxf9YqcyO779
      H0DbXpcKslMzYPoyEqxP28zIiyI96da8gepy5cqVtvaS25aKbD1HI5NwsRcVVtTL5G3ewNkn
      FjaaKqoUfvQ6J4Yt5On7mswz8vXoSeIW9at2o76+nudf+VOHpe/CP4QJDeTrmTFnGX8NnMKY
      xs9J6nGOuz3NuKadX2g1MgIILk1HjwAiAMGlqa+vp1u3bh2WvkyBBE0jAhA0jQhA0DQiAEHT
      yHJoweURT7AgdBAiAEHTtFIAFWSnXm+Xu/UeYRejIht9p2gQ8VZfRUYAoQNxfaGJAARN025v
      gVry0zr1p1JHSfZmNu0uwKDq8It6jrm26/L1ekhM4PuN77CjoD9J6UlcW9zo3FdcV5LN5k27
      KTCo6PyieG5uIjE2V0Zd4cesysi1lsMvmsnzpxF9l4G8zI1s+foMRnQExkxh5qSohrKvKe6H
      Z0k2x0prUXXBjP/9POIDFPuymxV0Xu74jYy0Fq+mgK3rP+Sb0lrMuOMTPoGUmXEEOPQXt9b3
      27yX2Hk5VQx5mWzc8jVnjCruXl4QOrlt91B13kbq+f1sfGcHBQYzis6P6MnzmXbnH5ix4RAA
      hw4B9GH8imUut9K2HV+D6rj/ySRmJ9r+NX1N2uZ8ZtvW4/aKmkJS0hTbwdN8lpbNXbMT+D5z
      Catyr+4AbKTy0GYWo7OtDz9H8ekePJPyKnHX5VfL2ZMG7gwMZ6jNVtkX4EQmS1bl0pBi5SE2
      LwZdehJ9clbyx14LWbL6uUbpXCRn5R/ptXAJq68WT80j4/Uc/mNRPL7AXcEjSXpmpPVYRTb6
      oxchwJ98/VbUxBReTaDRMdvfd/lwn28vjp6vxWw2YyjYxns5AxpM4eeKT9PjmRRevVqxiIns
      W/cRhclW22PmVnhhTlPTey8C+nvjVXYJo1HFeOYvrNke0rCW3lk5K7L1HHlwOksaKpiPXt+W
      e9iHnNedt5HXpVLK6u4mJPqXhEY8wrDIHqAkkZ4ehV4PSS68JruVAtCh62bEaAIazBgmTp+8
      gBLt5JImdkI7GtnzLGZvxi5fxZgARyf2ITjImXHPia3SYsZ77HJWOUiwxt3dWQVvABVVVVCc
      rES+uO8T/hFsNeF72L71Gzs0b8j22IL90Bk/qaDcyGS3uXvYCI9Biax8rZzif57idOE2Xj38
      GCuSh9D+VqL2p5XN0oPwaBM73z9IuclqUaw+vJUddUOI9r16TvN2Qmf2vOBQH/Zn5lBqshqq
      LXVnOZxf1nKRnNkqg0Px2Z9JTunV/Oo4ezifMqBHeDT1e7MoqrYAKqZL5RhMvoRHGtiTVUS1
      xVq+oqw9GCLD8W0ufxT6BF5g92f/wurarOPsdycb7IAWcxd8/LxxU1RMl05xMK9lg2ZLtscb
      tR/+4h6F/Z8dpNKCzbJazDmHZzq7h823UUXRMcpVHwZEDyN+fAJh1FB7NcnTxZRYANWCRW1F
      YX9mWj0F6hk3i6kX1vK/C7ZQa1bQBcYwZWZco2+p5u2Ezux5HkOmMq10LWkLdljT9QsiZsKL
      PNxSgbo6sVUqQ5g6rZS1aQvYUWudkwbFTODFh4Gecfx27MesWjHX/hkgfjqjMjeyYm6j+e24
      lier/vGJDN34DottNsyHBt+Nh7f1WMBjI7CsXECyQUUXGMML0YG06NB0YntsOHwjVkpAiZjI
      1O9WsXLuFoyKDyGx/Z18Ozu/h/7NtFHXHwvYtPw9SmvNKLpgRs2eZfvyGMCwiF2kzZ2BUQlm
      4rL5POZ7m1oim7UT3ib2vA7Hoe3x58MVLaEdbYiRtUCuQr6eGRnHrTvW3YLOr1XEESa4NGKJ
      FDSNWCIFoQMRAQiaRgQgaBoRgKBp5DWo4PKIJVIQOggRwG2Kej6b9M9KaGlXea3T8hQoX9+w
      rtsO29boLvSreTuR7/JLeFumgpxPqhkxJwg3sK1EfaqD4nPZxxbrbLQsgIgk0tOTAMjXp1L+
      1M2ZGhyuN7nFC6J+NmxB45LsK49+Rh5Rdmafm0Mt3EvJoNEkyKbRLeIaD8ERSWgwQqeN9g5P
      auLI/stET2tzECVNcvMCqCshe/MmdhcYUHV+RD03l8QYHxQqrFEeJ95L7qoMcn8aShz72GeN
      fWqNMjN4lvVb326IbkvYzSVMMX7C0cg51wJEqIV8tL6c0XNG2hlKnNskm7ELVmST+nlvljWM
      TPbDvUN7Zc1e3n53FyWVRlRFR+CI6cx7Loza7FSW7zwH7MQa+XUws9KTiGiSZuOQs+gCiZky
      k0lRtvbM2IPa4xJ//7qESqOCT2wSi6ZENDHWFFNUG8RTTt0ojeur4BXyODNnjCPIs4yslX8j
      eOFkwmxNafp7Oh8wlRlDPJq1mTZq5ebD37ogNykAlcIvcun29FJWp3igWKr5ZtM2DoQlE9cD
      UM/wub6YgGdTWfdAdxSe5dEWl9y2Mexm1SB2bD+CyeZAMh05QN3gqfZuKrWQL3K78fTS1aR4
      KFiqv2HTtgOEJcfRo2wX6/Z4MnH5GkK93bDUfYm+NW/dqvbz7qcqY5avIcL7DkyXKvmhK+AV
      wviXYrm3lweKaqLo0/f58mIY8QnLSI90NAVqTAU5GXvwnLCcNaHeUF3EnzdkkNNnkbW9Lp/l
      ctjzvPxmf7w5Q9b/5FBMhP3U6WI55338nJt5qvbzxaloUt6cgrebiql0F2lZJ5g/aQDDh1Sz
      +zuVsDAFqOGbPE+Gz/Bovv3s8m4h/K0LcpMCKCb/4CFycw6R2ejTwYMhLgK4bCYkMYXYNoUJ
      bGPYzZ5xjO6+ni+rhjCyZ6ObZlfMfA4eyiXnkF0pGUwc/t9e4OHE6YTajCxunp44DJvbhItH
      vqLbmIVEeFsL4tHLFkJUraUgPYO1JZU4KH4LiRZw1GcUC0O9rV5g71DGjTrA6wUXrQLwfohf
      xfbHWtRA7u3jIA1V5d/NZFFTcJQDez/BPqqtOxUMwD96EIatRzCFDcGj6gjH745mjgKccN5+
      duK7mfC3t4ibFIAFs/dYlq8ag0NLr/f9BLU1Rmabw24qhD3al527C4kbXc7x7g+R3DTLZnzC
      52/QL+vuxF98/NOdWBJe5s1Qb6zFT6UVtt32Q1Gavalms5mo6euZHuXgvvR4hBjlA46ZhtD7
      wHH6xtoM9s20nz0dEP62g7nJ3wGCCfXZT2ZOKVZLr4W6s4dp3tJ7gZMll1EBi4PYpzfke+07
      nKGGA+zIOU7fR5vupECzPuFm/bKKwp0/1HBZBdV0iaLs/RTZDjn2F6uYzZ708r8LNyzUnT3G
      V9/al/7CyRKbh9hy/Tt633AiDXvIKrKGnLVUF5G1x0BkeGuGj6tp9CbAUMlFZ4cHDKTss23k
      V1/1/l6iKO8E1ii1HkQP9yTvm+McNQxi+NWO20z72dHa8LcuxE2OAB4MmTqN0rVpLNhhDYXq
      FxTDhBedO3r9I4fTZd1ikreo6EaksLpJ7NMb8732ZHi8J/P/HMTSiY6K6dwn3Kxf1ncYo3uu
      ZHFyptXzOzaEwIYsHfuLI8eEsmrFXD42KviEjyb+nh7XBOwfyfAu61icvAVVN4KU1ZOwr70/
      8dNHkblxBXMbPQS3wp7ciGBCvQ5QYorH19GDcN8xJD+xkQ0r5rLBqOLu1Y8Hx0zk6i5BSshD
      dH8/jeKEV2gIRt9M+9nhzKdtx23qCb61WDiz6212+85lxpDOsBlHx6IWfsT68tHMGdn5X4VK
      mNSWqMgmdcbLbKwexWTp/AAoYY8TdPwLTrjgNiSuxm0yAghNUc9n8943wUx7OqhVb7VcFfEE
      C5pGPMGC0IG4xlogQWiG+vr6lk+6QUQAgssjUyBB6CBEAIKmEQEImkYEIGga+R1A0DQyAgia
      RgQgaBoRgKBpRACCphEBCJpGlkIInYe6ErI2pLGn2OoWnJAyk7gAx55z1fA1m1dlcsig2m+t
      0wQZAYROgon87R9y7pFFrElfz6tTe/NV+q7rfcmAdXuZv+I99VXWp69hUdwlPvjg75gcnCkC
      EDoHpqMcNIxgYqwfbih0f2Ac44OPceS0g3NPf8XhvuMZ90B3FNzwi51IfO1hjjpQgAhA6Bx8
      /z0E92+04ZlCSKg/hioHvs+aanre37/R7iA9CR14J5eqrj9VBCB0Dsw/codOZ/eRoihUVF6/
      AcyPP/6ITmfvD79DqeRC5fXJigCEzoF7V34yGu0+UlUVf7/r90zq2rUrRqP9fOcn1Y9f+F2f
      rAhA6BzcfTcUn+LaLEblu6IKfHo62uHOm6qTp7g2Oaqi6Nt/08vBLjEiAKFz4BFJrE8u2w9W
      YkHl8r+y2Fn8INH3OTj3vqE8XLaTrH9dRsVC5cHt5Hg9TKSDXXNkNajQebD7HWAwk+Zd26K9
      at/rrDQ8zVvPBQNNfgcIHsXsWeMIcvA7gAhAuA2oYt9bmXSbNZsYB528OWQKJHR+Ko5wIXpS
      mzs/yAggaBwZAQRNIwIQNI0IQNA0IgBB04gABE0jAhA0jQhA0DQiAEHTiAAETSMCEDSNCEDQ
      NCIAQdOIAARNIwIQNI0IQNA0IgBB04gABE0jAhA0jQhA0DQiAEHTiAAETSMCEDSNCEDQNCIA
      QdOIAARNIwIQNI0IQNA0IgBB0/w/2P1n1yqBLlQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='over_inmig' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='over_map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='overqual' width='192'>
      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
      jkO5UkFO7lwH7Zomo6PbU50T+0gfj3aAiKdOkKph2zbtdptSqUQymWRpaYl6vU65XCamqkx0
      GjvWNLiNGsVCYdvrKU3DNnburBEQ7QART5WgcW0+nwfu5Se5rsvRo0fD15rNJvbiEkJ2uzvT
      p9vYeZDNSgUlvfdorWgHiHiiBEbsbgQLvjfVIUjcC/5zXRdN09gQd1ZppGSKpeXlba+X7ybQ
      7Ybv+5EARDxZDMO4b2R5MEVjJ4ERRZGCurMAyIkkf371Jv/pb/4W3/e5+NlnrK6uklUUFv7h
      15QWFgja9/m+T2Nzk9aNm+Sr9UgFiniy3C+jVBAEEokEzWYzdFEOljdC11Ok75EDpOTy3Chv
      8fX16ywuLrKyvMyZ06d5W5b5m1/9EseyGcpkOF4sMnniFCPFYjcjNkqFOBw8zlSIg0a9Xg8n
      t/RWfsE9Yfi7Ty9RGx7f4yzgGh1ekVze+d73gHsJf7VaDcdxyGQyWJbF2toaqqYxMzUV7QAR
      j58HLagJJjjuZC8EHiJLksN/76Ym1S9+zKn/9k/Dfwefn8vl2Nza4q9/8xsaIiRyeSSzw4e3
      b0UCEPH4Cbo07HckbDKZ7BtkFxCPx0kkEvz07/+eNgriLkEygNrnn/KTt95kdLS/UmxtfZ0L
      ly/T1ttoJ0/QGy0QD9uY1IiDTafTCTtLJJN7ux8HGVR9kslkWJSTHx1nydl58Xc218k2a/wv
      //JPyKTT22ZJ67pO0+jQLJfRfL+vea5v25EXKOLRsG07XPitVgtd1x94Gr0gCORyuXCQX+/i
      B5jMptn6/GJf06sArTjK/Mw0mXR3loIxEPj6ZnGRkfwQf/Yn/w3e9Zu0ymWcu1VxXiYTCUDE
      oxEM5whqdmVZfuCnP3TtgKGhIYrF4rZyzPm5OQo7BLoA7GaDQrLbueLSN9f47fsf9P3++PQ0
      544eRZYkjs3OUqp3WLy1QqtSRZSlSAAiHo2gYCVoWOW6LtVqlXK5TKvVeuDz9SbDWZZFp9NB
      kiTOT+3sAZI0DUWW8X2fX399ndMnT4S/W11f529vLfF31291VSNZJlEcJTkxxVa9w82rNyMB
      iHg0JEnqm0cWpDYELRcfBsdxurp7sxme9/yJ47jt7QLlNptsbGwCMCPBzPS90VPXVtaQc0Po
      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
      4/z/K+653tefskkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='physicians' width='192'>
      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
      0EFMEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='poverty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='poverty_age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='poverty_reg' width='192'>
      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
      y7Imejby/wdbBm+TJoYJqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='povery_time' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='satisfaction' width='192'>
      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
    </thumbnail>
    <thumbnail height='114' name='satisfaction_levels' width='192'>
      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
      AUh0zf8Dma/LxajSAOYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='satisfaction_rating' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='self_health' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='test' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='time_health' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='time_health_age_sex' width='192'>
      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
      HM3HAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='time_health_educ_sex' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='time_vs_health' width='192'>
      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
      CgAxNQoAMTVNa2AUc3tI7pUw4LagqggYCg10ql+EdIWmAFitFuRzm+B4L1ilBln20ZzgYzzf
      VUu5Xqmz43OC91MqlcFBhlivQgatEwzQnOBu19nxdYL34wsMwhcY1PISQo41OggmpkYBIKZG
      ASCmRgEgpkYBIKZGASCmRgEgpkYBIKZGASCmRgEgpkYBIKZGASCmRgEgpkYBIKZGASCmRgEg
      pqZpQozUqGEvV4bbIaChcHA77Z3qFyFdoSkAtXod2dQuclYejAI4x8ehKAokSd1zpNWW1VKn
      mrmhWupUW5+WOrWU+/a/u9l2r9Sp9zbSFIB8JgWJE8CLDTTAPZ43q2Z+5qMOqSmrpRzDMB2p
      U82cYL3b1jLfVe9t2St16r2NNAUgGI7C05BgsfBQwD7+ohz0Zfk2tWW1lNOzTq3vSe+29a5T
      S7leqFPvbaQpALxgAS9oeQUhxxudBSKmRgEgpkYBIKZGASCmRgEgpkYBIKZGASCmRgEgpkYB
      IKZGASCmRgEgpkYBIKZGASCmRgEgpkYBIKZGASCmpmlCTLmQxXa6AEYsoSILOHtyqlP9IqQr
      NAXA4fbBUaygxtjhUBTIskwLZR/jRaC1lOuVOg1dKLuQTSNXKCIcCkBiaKFsgBbK7nadhi6U
      7fYFcMoX0PISQo41OggmpkYBIKZGASCmRgEgpkYBIKZGASCmRgEgpkYBIKZGASCmRgEgpkYB
      IKZGASCmRgEgpkYBIKZ2qAAsL87hwfyS3n0hpOs0zQd4hLPY4VDULydKyHF1qAAE/R5UFVot
      j/S+QwXA6fHDeYjXdWIJTr3b7kSdvdJ2r9SpZ9uHCoDWRrSW1VKn2gWb1daptj4tdfbKF6sX
      6tS7bUZR+wgEQvoQ9/rrr79+tCoUzM18jUyphoDf27ZUOrmJhdV1RAZDB9b32Qc3ERobA79v
      ghUszT1AAwJcDvu+Naa34ri/8BC+wCAsfPtf+O3leVR4K5YezKKusPC6W+/o5TIp7KSzKGVT
      WN/JIBTwtywnS3U8mFtE0O/GzU+/QGx0pG3bu4llFGQWa4sLEOxu2K2tj7Ea1TIWl+MoZVNY
      jm8iHA6j5WZSFKzHl7G5vY3EWgKKYIPb2Xo7FXN7mJmZg8IoWF7b5zNSJCwvLSBbqmNp9h78
      gyMQuNafUSaVxNziKgrZXYiwwOWwtSwnSzUszM5iY3MbG+vr8IaGYWnzkI/kZhxLK3Gkktso
      1WX4ve6W5eqVIr66cxcSy2JpaRmhcARsi26urz3U4zqAArvTB545YCBhOUzExg6sLb+7iWJd
      QqFUPbBsuVxBMrmjoo8MeI498FkygWAQjCLCGwhDFutty3l8AQg8A5bnERsdbVuO5SwY8Hux
      tR5HQxRRrUtty/oDQXCMhHKlhuRO+/ck2Bzwuh3fPJIGyr7PMOJ4ASPRQQyEhiHWa23LAQyi
      4+Ow8izGY7F9ygGC1QG3RUKp1kCx3L5OhmEQG4+hUi4juZPct22by49IaAACz0CU2n9GgmCB
      1cLB5QuCkds/74flODiddsgyMBobR5uMQhAsRz8GAFh43DYIjva//gAgSw3sZbLwuJ3Y73fd
      E4riypUABKv1gHYZTE5NoqbibJQvGEKxwcBp2//tpvJFNFgbHIIMX2i4bblMKoliuQ47JyGT
      y8FhC7YsJzWqKOTzCEfH8EJkFLZ2P20A0tkcKjKPyYkRWFwDbcvVygXk83kMDg6CsXla/rI9
      0qjXUag4YeFEhIaibcspioRcJgeX3Yp8JQOv29GuIOr1GuyeCF78/vfBCe0/I0mSkMlnMDk5
      iTos7Tspy6hWS/CEw/BIDDzW9m9IlmUEB6NgxDKcvvA+70eB4PDAbeWQyuwh4PO0PB6QZZmO
      AYi50a0QxNQoAAYpFotGd+FAlVIBDam/dxBoF0iD3/7Xf8IXGkIsNg0H34DFM4CdeAKMxYKJ
      qWkIjIRCoYJGvYhkpoJ8egvnL1wCoCCV3IYvEMTuXgHjETdu35vDbqaKc2cmwYhV1CQgPBTF
      TnIb09PD+NObN/DS9Zexk0wiPOBGtqpgbWkG+XIdTgtw4uyzGAl7sfBwHUGfA/mqgtmvbuF7
      V65hdz2BodER7KTSiPicyBdLqCpWSI0ahkMeJLNVnBgbxJv//T/wh4PY207BFxnG5PAAGEbC
      yk4dsaANvsAA1rbyePr8CaM3fcfocBBsHgqA0bALiyu7sPMFyI27YIscSjYr6vYwzked+OT9
      /wXvGEZ8bR2j58YxvzCHWimD5bVtDA9FIQp2DNrD8AaHIMoZbG8kIDfKkEUen9/6DII7hPBI
      CL6gG2+/8QaYwDAiETcSWylMRIfgFywAFCTWFlDcUPBgswKX3w4Hz8HlD+LB5zewndzDxzMJ
      nIh6sLbRwAvTEfzxwxlEhwYws7qOsI3DibFB1EpZgB/D8NgEyoVdLM5vowIBY7ETWJybATd4
      Ei4UAfRvAP4ff5u3xP05Ia4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='underemployment' width='192'>
      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
      IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='unempl_educ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unempl_high' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unempl_hist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='unempl_reg' width='192'>
      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
      F+tNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='unemployment' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WYxkWXqY990tbux7ZETumbUvXdXdVdXLTM+0KHJIDsdDS4BNARZEiAK0
      wJIMEAJMyC9+sR9sGAZkgwIkQ4BtyKAxlGBINkakREpDzqiX6uququ5aMysr9z1jX2/cuIsf
      sjK7siKiKiMzconM+wEFVJyIe+6J/OO/5/zL+Y9g27aNg8MpRTzqATg4HCWOAjicahwFcDjV
      OArgcKpxFMDhVNNVBXjw+NEbP/PoweNu3tJhlzTJRs/yaGLlxQuDjY3cjrcLxcLhDOyIkV9+
      sTC/yPDIENPTMzS0EhVNJ5ocQTFKLK5kuH7rPR5++Qm6LeFTVdRABDc1csUqofggxWLxle5t
      vrl7B8Eb5cqZfr6895CF5TR9oSCBkSGWp2cYSka493CSkTPn6U9EDvGr9xZdl42l8+Drrynk
      l/nwg7epazWmJ5fJFhqMjPXxx3/87/jBD/8SAydcJjtmgMWFRQBmZmbZyJe5ceMWS/PP+eTT
      T5Go8NntB+i2RMSqkbpyg3x6mdV0jhs3b7E0N9XUeW76Lk9WNO7fvs2nd77inVvvM9gXY2Nh
      Ee3Ffb68+4Bb77/v/PjfQLdlAzAyfoGwoVPEYHFxhY31dSxBJBYf4Pz58yf+xw+vKIBgady9
      e49yrYEgbL0lMDQ4CEqQa5fHQNhse/EWhlbmqy+/QHB5mzr3xvoJe0SuXL9OKhLg9u0vWNnI
      EQi5uHf7S1bTOfpiAe7cucNKOn+gX7TX6bZsAARR+PbzQCQao7w+xXJBJ7e+ysory6KTiLDf
      SPDnn33Ch9/5aPt1bmOZ6fnNteXg2DlSsdD+RuiwZxzZvJl9K4CDQy/juEEdTjVdUYBuTSLd
      6Ock9dENHNm8vo+uKIBlWd3oBtM0nT66jCOb1/cht/qAZejcv38f04Izl94iFmztRXA4fBzZ
      dJeWM0Amk+Hs2bO4PQGqZcc9eZxoJRuzXmXi6ROy6TSPn02TTa8xu7B8xCPtDVrOAIlkP3e/
      /Dm3fz7B3/gHf2tXHWX/9H9q2e756O/j8Xj2PkKHHbSSjejyEAl5KRTLYFqUtAYSNpZlYVkW
      lUqlZV9/cmeKXKXR1H55JMoHb43vaLMsC8Mw9jX249hHSwUAE7Oh8u6tq7vu9Gf1YMv2j+78
      ATU929QuDNwgcuVXdt2/wxbNstGLGyxuVBhKxamubYCtUKlbiKKIbdv89v/wb1r29F/82luY
      qtJ8B1FGlnf+NAzDaGrrlOPYR9uebKNGvi62/8ArfCENtGz/ePqfo+SaE+AaAI4C7IlXZaOG
      +rhxvQ+Avr6+XffjCoZxW80KIJ2iCbuNF0hC9ojMPJhgf5ONQ/dxZNNNWj7gDa1ILt/g7LuX
      UQ97RA6vZS+yef/q4IGOqZdpqQBLT55SlxUqMwsUASdj5PiwF9kMXbzQst0j1FquAVRB2tcY
      e4mWCjB46SKzX3zN0LvXcR/2iBxeSzdlc+vr38Pdyj679tfh3H+9z957gzYzwAQVq8z9P5/l
      8jub3garofF4ap5UQGWtZuKVDEo1i+tXLx3qgE87rWSzV+zRj7FTl5vfSLRoO6G0VIDRG+8z
      ChTfSrMVSBcVN7FwEMUlUl2YRUr1EfB+62vuFNu2m/y5x9FPfJR9AE0uv1ayeRMBsdnXD+BT
      bHw059ZUTs8KqL2Xc21xiqX1BtcTcWAz2lgsFvAkk/QND5OK+ilq3/qaO0UQhFPja+42r8rm
      Tfzqn/+wZbv2nX/Ysl2XfPj2PLreoq2ESqUc9+5M89aNzelQUr1cvHgRgHA4DEDCSUM5El6V
      zZtoDH/csv2nYo282BwlfkvQ+eV9jbB3aKMADe5+OUkyGdn1NOtwWHQum399obWinJ+bQq/M
      NrX3Sf17H16P0UYBFG6+d5XphdKuI8EOh0Xnssmy0bJdr8xSLz5pajfq7+1jfL1F+7+h5CK7
      tIz52g85HAmvyMasV5mYeIyphGlUygQiXmqa46HbDW1/2/m1VVLnzzp7Jo8hzbKx8cWGkUwN
      wR2iiOB46HbZR1sFuPm902IG9R6vysayQSvnGRwaplAscSbk3ZWHThz7a4hGsxEsxcZPjYeu
      rRH8h//8D/EGIvzgL/9oXxFHPTDa+g1PYh+9nmaaZaO4fdseOr9v0zW3Gw/dv5wtMl1o3vD0
      ly8luX5KYmFtjeC3rl2iqMF+YyL3lO9RUd9pah8qKUivbKKxbRvL20fio9/Z511PMp3L5vuc
      b9k+071B9Szt9wNg0Y0985MBL2uu5n5kc5nrT/7PpnYtcgUcBXgtncqmZl5p2f790RrXjWaX
      56XY6Zmd2yqA0Sgw8XWB6x/epHnLhMNR0qlsxv/H/7ll+8Tf+5tk9HpTe9U8PTsN2j5GBgbG
      8fZ5nf0AxxBHNt2jrQLMPJ/Fo8gcj+o2Di/jyKZ7tFUAw7IIhQIv1Q52OC44sukebRXg7Lnz
      qKpEraof5ngcdsFBy2arlMrL/6rVatvyKr1MWyPYNHQsyU0+vUZwZPgwx+TwBg5aNo/n0vzT
      n0w2tY/3+fhHv/ubXb/fUdJWAZaX18isF3n75rXDHI/DLuiWbMYKZZItnupSqI/AX2jebRZS
      T96iq6UCmA2dvlSCQkNxPA3HjJaysW1y+QJBr4up+VVGBxMUNYu+6Ou3zJ/7xafIc/NN7fp7
      lzl7pnl1bBMH3tr/lzhGtFSARr3G3Ow8S2vV7ZDL1p7gvpCbxeWsk3F4RLSUjaGTK5bR8nUk
      t4fVjQy2ZWOFA3tKhnOJNn2eZvtCczX2lYjWM8lwbn8IWZTwNMpMLa5xaSi5vSdYb9RJxvaf
      cfg6TtofeT+8mvjVSja2ZbK2vMD4+Dj52Xn88TB6fe/bVcuiyoy3ORqsKAG+u49EtB5KhoPR
      sREaopezQ0ng2z3B/YODlEqVXWcc7oX9fMHj+EfuNq/KRlK9fOc73wEglUrtu39NtpgON9sG
      AcG1776PG20ltLK6ht8f3PY1v7wnOOj3A86e4KPiVdl0G1dxmdTnf97UrgYvw7W/dkB3PRra
      KoBbVSnVGy2KZjgcNQctG8M9RGn4v2pqt9TWFcB7mfbJcHqWn/98kRsf3jzM8Tjsgm7JZsLj
      puZvnsZlT5C8/2xTuy2foiVQKDrEzVs+J9x+DOmWbCa8btYDzRWABhSJUoss0ZNIWwWoVKr4
      vLsvFJ9UnSqih0WnsmnHlStXGB9r3rFnhUI83XfvvUFbBejrS7L09eSua898ufCPW7bfGv57
      exmXw2voVDbtUF0Kgtm8rKnLEpySilAtFWDLren1+xFsGwRnIXRc6KZsYgs6ZLWm9syoG2Kn
      ox5Iy2+ZXllgZmEFxSXwbNLZOXqc6KpssmVYLTT/K5+O9T+0OyVyYIRYaghd13G797e2jyqt
      PQf+urPRci90UzYOr7EBvvrsF9y584jf+d2/y37iXU/X/xXz5eYnVcS9/4jlaaVT2Xx+tXWN
      k9Zb5U8XbRUgEvEwMnrZqQx3DHlVNm9KVLyfTbfs58rAmZbtsiAQczXnAYdOUxzAHwxjSiVO
      3lfufV6VTbcTFaNLK/zw3/6LpnZjdATjvQ/3PO7jkmS4q9KIkujGrhWowak5LKFXeFU2b0pU
      7OtvXe5cHU8hxcJN7ZZRaHvvk5ao2HZDTC6XI5BKOYfkHTNayeZNiYrvvvN2y76WVhvopWaP
      T1gyOS0WWtsNMblCgfXlDAb7L4/Y8h5KinTid5raLX+U01OXrHP2IpvY19mW7dW3U6jh5rW+
      S7cxRkea2q1kssPRHn/abohRXJBfSR9YxuGy4uWfxC82tSdVN7/9f/yVltd4f+t/x+c73Quy
      vchGu9mc2AbgV0oIUnN1IY/HzdjF5msqgVOUDTqQHObqLeVAnv5votXZtQCa1hy1BFAUBZfr
      9JjrncrGyE+0bBdCEYR688aXjO3im1rz39qtuvm1TgbaA7QvjmvbqB5Pkxs0vTh3ZOcEW//f
      f4nVQjm0H/0+rou/dGjjOGrayaYdYXfrh0O7GUR0u1FGmpdAinv/CXjHjbYKIIoWiqQ2/ZEU
      j6cr5wR3k5fdWsfR1bYfWnk82smmW6j5OsOfrja/kQpR+W7r4lhutxtJ6r0Dhnd9TOoWPn+g
      K+cEdxNRFLd/KMfR1dZtOj0mtR3/76KHlVxzMt0Nr8CNNtf824lcy/ZfvxjpSfuspYRqxQyP
      JpZJpYJNBVhl1cPo0OZU6OwJPnxeJ5tOWclpzKw3P9HHE+3tqZHGgzbvtD6L+LjTUgE8wRjv
      vXuVpzNrztkAx4yjls2flFu3e2ZnW7YnEgn6+voObkD7pO0cHQyFCEV154jUY0i3ZHN5PE4i
      0RwJHrTrsNjCBngN/3p6iuVKs3b8zQ++Qx89qABPHj9lI12mdv0KB2H7yzQIC83rSb8QOIC7
      nSzayUYr5phey5GK+CjWTMaGB17bT2J4GLfVPI8E08ttr2mVJAcQ8gaIh5tl51OPt3u6jQKY
      IEiEAgdXg76sp5nP3mlqH/GPH9AdTwrtZVOuVMC0KGkNJL710P2TSX/Lnj7eQ77DD//xP2vZ
      /sdtjlvSDfNYe+jazgC1Up6NqnAkgTCH19NONh6fDztdAFuh8lJpxFaGLrQ3W4VECOGvfK/5
      DQliY50tvI67h65NTxIut5vB4OurCx8XdF3fPrzBNM0d/uhedM29nvay8QUjXL0W2XVPHsFo
      uSlWNSuI5dmmdtvlwVcqtu4s1ZsZXG1VafzMCEvrjSOpC/TvLjRXJQP4eOPft2y3v/pnWH/6
      DwAQ+LaegRa5gu93/vAARni0dEs2t77+vZZpJ/f8v8E/nGkuujXeJ/CP2qQD/Wq+gtzCCCZZ
      YP2F3WBZm7PSFsfBO9RxIOww+EJqbbz1pqe5+xy0bFKJEH/9ZvMSyCMYVKaqLa/p06r4qs0K
      cC9XYElrzhRwiwI/OM4KEAolGR4pOLVBjyHdko09+jF2qlmJDP9VSi28Q4gwM9vaAB1vYxus
      aUUe6M3LpnbepMOmrQJYto3H53P2BB9DuiUbn2Lja6FGA9okP5r6v5va9cAoudU2XrqxWMvm
      D2p1vl9v9g5px8Q2a6sAiwuL1EoVDDj0iKPHeHLId+wtuiWb/61cY61aamq/GB4ieem3m9pV
      yUNyeq1lXyuBBJLUHAcImnp7w/kY0FYBwiGFhQXxSIzgyeynLdv1wPmW7ZZ8upKSOpXNeF/r
      p+3w4ABhuznM6RFkntjNMZooCao33299j6+mNotqvcrbKcwWiqFL3mOx17ytAvgCYZCyxyoO
      8JPor7Hma96ocZUFTFfz7uWAd5Bfm/izpnZL9hI+21qQvUCnsvnv7P+mZfu/tP8OWTaa2qOv
      MS4m4z9t2T4ebV2qvZJrUJlvsSUzZTLU/jaHRksFSE8/4f7sPLoltH3K1KslCrs4ibCb+IUy
      daF5yp5v5HisNeeujMgefv3f/P2m9kbkCkXj77a8h3v8uztcdceNbsrm/NwiemW2+fo+kWy8
      s3E9fb9EyW5ObRkVL6C0yAWSUVhfX2/Z12G6R1sqgOz1o8ouwkGpradh5cVJhByiAkxnf96y
      ytxe0ieEFooB0Pjbt1HV4+GhaMVeZGNf/s9afk7PP6VebLa3zGAcaG3UtqNk51rOJli0nmVI
      UPi6+WGmulQqz1vXIum7/nbXZdNSAcKpYf5i6vUnkAumTrF2/EtoF87+501thjvRdt9xZeE+
      DbveNAsoySt4wkfvt96LbCaU47mV8YcLi01tlUCQr7TWsYbghYtNkX7Y357wPSdVjJ65sNdL
      D5Xfy99vahvxj3NxsEWuC/Djz/8XpBbK0fjR77dUgFqtRu2T329qt20by9uHVGt++lnJt1sK
      rFu2yauyKW3c6+h6f7XGu4+bN9K7fHVuj7Z+AieqIl6jeVEWNjUSlUxTu9vt5qtLzdl4ouTl
      uaf10qgyM0XNbN4GdGNkjLH+5uCpruvk8/mm9pcj0oK9z/2MlmVhmmZX1s2vhspPex/AvvbZ
      OrJ5cx/73u+y1VE3/siCIOy7n5PUx35xZPPmPvY9Azg49DJd2/E4NfEYXVC5cqF1FbLXUcil
      yZd1tFIaQQ1y4exYx31olQJPHk3iiUXQqjrvXNtD9XtL58mjR+i2C4wa42/dJOjqPBS4vjRH
      ulKhXqqTGBxmKNWhT7HLOLL5lldl07U5WlF9eJS9dReKxHHJAqoviCLubUKyLEiNn8EjK4T8
      e/N6WJaANxDE1OsMJmNoxl7GYrG8uk61mCWcGMDQW1ezO0wc2Wz30iSbrs0AsUgAQ9xbLens
      xirlmk5f2Ifo3mv9SZtiNs3g0CCV2t62zAmigGnCW+9cZ31tgyHvXn40Iu/cfA9N08hnM8RT
      g3saSzdxZLNFs2wcG8DhVHN8Y/4ODofAsVeAcrk5XH4cKBY3U3z1Shnd3DmJVopFNpeoNqVy
      ecfnTyK2UaO8x6XNQVIrFdFfBMS35PAtNsVi6eiWQPlCAcHUmVvaoFAp8M7VawBU8hu4QnFW
      5he5/NZl7ty+zZUrVwGD5bklUqOjLK+sEQ+qZPNlfOEolfQaUZ/NTCNBUNBIxsOIosT68hym
      oDA0PMzC0irxoEpFt3j0eIHf+OV3mFsvQTWHSxX55nmJt8bDhFIjVGfu8PnzAmLDQg57GUwO
      Iwo2hfVZxs5fJVeo4DEKRM/f5Nk3d6iXSwydv4JkNTDqJUKxBDOLOZJuDSs4yINv7vHeuRT1
      6HlGo8czLaEVhXweRIFiZg1v1M+TLxd554PLGKZJJl/FZVXwJ4aZfvQ1Z65cQRGgWsyi4cGu
      5fGFYqxnMiiSRNivUjFkVudmSCWjeAJx/D6ZQqlCqVDEE4xiVrNEIlHShSrPHt3jez/4TeqF
      VSp1E1uWeXTnC9777kfUDBgd6ONf/OT/It5/lvTKc8LJcc4NRLdleWnIRzTVz8TUAqMhgZml
      Zcqecc72KYS8bnIVg8za8tEVfnt09z/SMCQWF2YRBt7GOzmJYRjMPX/K6MgwS+k6Y1fOAwKT
      E08xrAKNmsLP/ujPSF26yGLEgxsTKbOIZbiYm5hmph7n7YEAi2ur+D0qhrYEZZWf/cmn9I+N
      sBBx4xFFwr4genaO2Ywfa2UCQ7AIRq7xi1/8Odfe/yUSwOJqhvcvjJG4NM69n31BPl+i//oZ
      pFqBOz+/w2/8pzeZ2ygj2Dai4mFu6ike1YNh66xlCwi2xIoO719KsDLvIzUQ57OJDUajzWXH
      jytrM095XgSvkac4qaGkSzx8aPB4NsPIQAwfVcKWig7MPHuKYRjoegNRNJiZnCWsujHjw6ge
      AQ8CtmGiSnUWlqCc/4b1mpszg1EswUJOz/B8Yp3I8FmiHpFgLI7fLfHZnz0kHg/xdG6dsf44
      X93+BF9siNGBPhrVPLbiY2BknGqlzvT0liyvMz39kMnlLCFFZK4hMhz3MZtb59/frXIp5kEQ
      RETFProZILu+gjcUYeb5c6KpIeRGmbKh4LIqWLKbTKbAtbcu8eWdO/TFIvijMRRBxDIM5pfX
      GR4ZRBRsBFvn01/c4Xu/9H1MC1bW0niMHELfJUJKDcEUsRCYX1xheHQAEcikM4wNJamYKunl
      WULxOPlMDkUwkN1+ZFnGHwqRXV0lXapx5ewgz54vMzwSJ1+oUCrU0Gp5rrz7PhP375Do76dh
      u4j4VWwByuklCoQYcNeZzRuYtRKCaTB+/RYR93HaYfEGzDormQp6JYc3FMZlC6ysr5LqH2Bl
      PYtKndjgOOszT/DEUtQ0g77Ypqcov7GK7A7i9voQJZtnj76hf+wyIa9CdmOVYCTG9OIa58eG
      Qdj8CWbXlgnGB1DEzdiBJzqAXa/Q0MoUGxIeNESXl3y5TizkRVZkjIbB+vIC/WcukVtd3Jal
      YJuoskWmrnImIvBso4EsmAwPJsEWAJuJiUnHC+Rwujn2RrCDw0HiKIDDqcZRAIdTjaMADqca
      RwEcTjWOAjicarqqAA8eP9rZoGd5NLHy4oXBxsbOshmPHrc7cM3huNMk6x5lRyR4YX6R4ZEh
      pqdnaGglKppONDmCYpRYXMlw/dZ7PPzyE3RbwqeqqIEIbmrkilVC8cHmfBdL58HXX1PIL/Ph
      B29T12qsLxWYW8kQ6+tncfY59WqV5MglBvt64yyCk0LXZW2UefBonmA8QS23RMV0cfP6Re59
      eYeq7eKj99sdvHq07JgBFl+UqZiZmWUjX+bGjVsszT/nk08/RaLCZ7cfoNsSEatG6soN8ull
      VtM5bty8xdLcVMsbjIxfIGzoFDFYXFxh4vk87926ycryHIFwnBu33mf++cOD/6YOO+i6rI0y
      z5eKjEYMPr0/w9LjO9y5/QWBM++C1Vwc97iwQwEES+Pu3XuUaw0EYestgaHBQVCCXLs8tnkC
      xVZNMgEMrcxXX36B4Gpdn1MQhW8/D4hWna/u3qVSN7997ygKkJ5yDkLWyWQS1CBDcT+DF64y
      Pppi4u5tpufaH7p31Ow7FeLzzz7hw+98tP06t7HM9Pzmun9w7Byp2M6lzdzUU9YzOZRAgneu
      nNvPrR0OmU5lbVSL3Hs8yXqmwH/y679yqGPdLU4ukMOpxnGDOpxqnIPgTyn1Fqe2nEYcBTjF
      HOcq2PvBNE2q1Soej4dCoYBlWYRCoZb1WJ0lkMOJw7ZtXC4XtVptuzaqaZpomtZ0yryjAA4n
      DlEUEQRhe5lnmialUolisYhl7Szp7yiAw4lDFEUURWkqoiuKIrK8c9XfUwqwF4/tXr28h3md
      bduH+t1OA7ZtIwg7I6w+n69JKXrKCH6Q+Yqy0Vl9Hcu2EIXO9fwwr7NtG4T2Z37t9l4BV4hr
      bQ6rO41IkoRpmliWhSAINBoNVFXdoQRdVYDlhVkagko8GsTr2QyXVzMZhFiMrWo42UyGaCxG
      JpMlFosCmxHDyfkVzpw9j/ulIq6lUolAYPOITUEQeJS7z3JtvptDPlEMekdOvQJYlsXa2hqJ
      RAJVVVEUhVKphG3baJqGaZqEw+Ht2aGrCmBYAiMjKebmH4EVI7uxjGCYqH3rLMznGEsFsGQf
      hl7l+WKawNwkRcvHmVSY8xcvMvPoLstFi7HBPkytQrpUw21VabgTvPf2pW4O1eEE0mg0+H9+
      9jM2Fhb4rR//mGAwiPniSCVRFLEsC8MwdiyPuqoAAa/K/NIq4XA/68trJPtTFAolosEQypgP
      j2giuAP4PRLBoE4y7CFkSqRSUSYnJwjE+hkL2YhGDSUUp89VxiVFwOXv5jAdThi2bdNoNMjm
      cizPz/FLt957UaRLJxAI4PF4qFar1Go1bNveXlmIothbuUBrlWUMGh1d0+pUweN23dYa9VWj
      rdN7uUSVhKf54LlW1Ov1ExMIq1ar/NM//Anx0RFs1U1jfR20On/pBz8gFoth2zaGYWy7QQVB
      wOv14vP5essIXqkuUjY7NIL3eKjaYV5nWTaCwGsVYNA7ynjw/I42wzCa3HqnEVmW8QYCeAcG
      yCwsUne5UQJhGqa5/TdVFGX7/1sxAq/XezQKUMqts7hW5Oz5cSQEwEIQNtdokiRhmzo1HVSX
      hCgK2AhIosiT/Den1gi+Ff+oSQEcNpEkieFAkIm797AEgdiFy9iWSb5Yoj+ZpFqt0mg0tu0B
      27a3T9A8EgXIl2pcvHCWqcf3WK1AxG2julw8fTrJ6OW3SQYF1jMGU8+nuXI+hemKcvX86FEM
      1aEHkCQJr8eDKcoE+wcoLC2hFfK4P/4+sGkA67oOsGOpWSwWj0YB+vtiPHs2TSCaYCQsEw8H
      MOsVbEEk1JciGZJALKHIZ4nGApjs7RRwh9PB1PPnPFzbIHn5CjYgGg1GfF6GBwawLGtH5uvL
      y0zLso5GAWS3n4sXX/Hs+P2EYsntl6mUh1Rq58nsvzL4Y0w6O4jhpBjBPtnxhLVDdbkorq/h
      7kswLIl8/8MP8Ho341CVSqXp81t+H0EQessLdG/9c0pmoaNrLMtGFDvfdHyY120awQIv//4H
      faOcDb4+9rEfI/gkeYEA8vk8kiRtB0632HKR1ut1NE3bboMXuUGHPdDlmae44mcIqSDKMmZx
      lbycJKxapNNpUsnNWcA0DMqlIp5AEEWSkSSRp4WHp8YINm3rjQrg8C3hcLhl+5b7UxCE7f0A
      oigiiiKSJB22Atgsr2VwVQWW9SKSKCOJDTS5xp2FBa5eHGNufh6rkqFkh/B7FSozkzSUKLec
      SLBDh9i2ve3udLlcTbOlbduHrAC2yfnL7wAGsjSI2aixurZBMhLC65KIRCIUs2mk2BB2sUgk
      GsEj2wiqs/516BxBEPD7d/52nkxOEgoEiMdi/PSzz3vLBkhX10+NEeyVfQRcr6+W59gAu2cr
      /+fu4yd8vb6OF4GpubneigTPlacoGp0ZwbZlIewhonuY110OXSfpHeg4FcLhzZTLZe4/nWC1
      WKQ/FCS9vk5FktE9XryRcHcUwLbqPHr0jGQyRSAaQREA22JtI0MsEkZWXDQKy5TUQSKuBhuZ
      LNFwGEVVefboASMXzvH48QzXLp9FL2SoKCF0rYBkicQTUURRRpYlJguPT6QR3O8eIukdOOph
      nEgKxSKfPXzI4K1bzFoWDA5Se/QIdXAQs1rtkgJUcwT7zyKU1piqlvDZNlZDp25LLD5/jCV5
      iQRkAqODzDyfwsLk/pd3uf7+dwlEAjz+ZoJANMgv/sOf0pfoQwgauFQbly3w9MFddDnMrbcv
      d2OoDqeMgf5+fvOj7/JkZoalchlTkgkPDqL4/QiKqzsKIPqT2OtTWJ4w/W5IZ8pEgwFqpozP
      NYrb66WYy2+6PgM+TNnDhQsugn4Poq2gKD5UtxvVNvH6goiqF1ECCXBJNoIaeOMYHBxaIQgC
      l86fZ2RoiLX1dX56/z6y283a1DSW0GPp0Nla+kQawT4pgEfxdmwDOEZwZ9R1nZ/dv89suUyx
      ZiFIUm8pgPnN10iVckfX9EIk2LxxC9HlchTgENA0jf/1D36CevEt9GK+O0ug6eYDlyYAABDU
      SURBVGdPqTZELl88u2n8rqfxB/zUNY1IyEetIbM2+5TUuQs8fTjB1cvnQKtQ80QJyhaGLSBY
      BtlCkZDfj0tV0fUGpmngUmQEScGlyDA/C+vrHY1tr2UvDvW6t9/d490cOsXtdtMXCpKulGmU
      Ct1RAI8/hFzTmF9cRLJNsvkKNV2ntLaAfWaUqhHGF4kw9c1DfNEY33z1OW7VR0HaIESJuhgg
      4LKgUSPtCVHOV/H53QR9XkrZVepS0DGCHbqGpboR6hXi42e6owCC1UBwe1HrBZT4CDHW8Mei
      pBJRGvUabq+KRBTZ5catqmQFC6/Xy5DqwdBr6KaIXS/jDQ6Qy2QYuHgOtyJimRYuCUS3YwQ7
      dAfLsjAkiUBfikal3GM2QKGAZFtv/uDL1/SAEWz6A4iS5NgA+8S2babm5qnrOrFQEMu2iYXD
      21tURVGkUq3yB199TaWQx+NReysS/GXtG4pG7s0ffAnLthH3EGE9rOuuR28RF4Id38dhJ5Zl
      8Ue3v+L2apa6aVHPbiAoblyFNJ5QCKuYJ3H2HJXVFZRUCkEQ8cfjB6sAS3PPqdkuxob6MbQ8
      2aqLWFDBFgRsW8Qy6tgIqKqKVtfxqApLK+sMDmxWNmjoDcBCVFRURWa6NHHiIsGj/rPE1eSb
      P+jwRpaWlzGCSYRqBVl1oyYHEIdG0DLrWKqP6YcPCFx+m8b6Oi6PSuH+g4NVAMMwQYK5yceo
      AS9FPUBufZZ6rYKpBPErJqZlItoupheWuXhpDKOxeYKhZdcplywEa9NIdoxgh9chiiJnkwme
      TzzHUj0IloWobLqWXX39GLUqZjRB8ek3hC5cQY0lqK4sHawCBEMhMiWd5PAYlm1h5isk+s9R
      r5YoNwRiIT9gUq9qyG4P0ZCPkmbhsnUEd5RUKkAhu4bodpYIDm8mGApy/tolbMsiPb9AqV5H
      UBQArIaOEk8hSRJKZLNWUMMwessILmg5LOFkGcE+OYCEtF3TvhMcI3gnTycn+ek3D7AtizXN
      RkkNbxbHLeYpLC+j+WN4tSKpi+ehWqaRy/aWEaz9x+c0Mp0VxrIt+8V5xJ1xGNcpIR+RH36w
      Xa/GYX8UahqpixcxGw1mfnYbu1xHdSvUi0U8ioTu8WNiQaXEe/Eg77x//bAVwOLpw4fE+odR
      ZAmv24VW1xFlBUwdxe2lVq7g83up1uoI2MiigOhy43YplJ7Mo82uHu6QDxA1FSX5ww+OehgH
      gm3b5PN5IpHIodzPsiwWMmnKCKSXVigoUSxU1FIekmfQdA3RpWJKEd5yNfjO1ctEIpHDVgAD
      1RfDZWl89osHjF09h1Gt4fb4sBs1sA2WFpdwRUcIeWV8bpVKfh1N8HPTMYJ7Dp/Pt+N1pVJB
      luUDWXqtra3z6OkEsYuXcUfj2IUyiBKmVt+sPuh9EUyVJCpmA+lF3OWQFcCF12WiWTJnL5wl
      mUxtD2BmapLB0XEkxY0/3Iffo2CZFqosIHmcSHCv8XIVBoBnU1NotRp9ySTJvr7XXLk3QqEg
      Sa8XyR+gkF3cLJBVyWPqFsLqAlib5Tclr8qaR9i203rKCK7nS3RoA2OaBpLUuZ4fxnWCJKKE
      fNsnGZ4WI9iyLO7dv8/1a9dQXnhpusGdBw95aNjMPHjC84UiFgLWCw+iIAgIehVvQKQv4OG/
      /a0f4fF4essIlqcnkUqdHpF0TCPBA4Nw/kLH/Z8ERFHknbff7rrxr1UqbDx+QgiFUMBP1pB3
      HDtlKx4GFIvf/fFf3Fb+A1eAuanHeIMhNNOP3yNQLeXw+7zI3hANvU4oEOD54/vEz15D1MuY
      hoHX66NabyAKNoooICpu3KoCy4snJx1acZ1aBYDNJ/Jeys+/ju998D4f3ryBLMs8nZrmv/9X
      twm74FevjRLyqCiKzLmRIWLRzaO5DqU2qOqLUMousZxX6PNLaLILl6nzfK2Ay9TxX71IOl+g
      PjePUllD8Pso6G7Sa8tcOjuGVisjyioXzp876KE6HCJb1dm6iSAI20uqi2fP8Hf+QpHLZ0ZI
      xGM7Prd1VFK5XD54BQiFw4T8KuGkRC5fYDzio1Y3OBfzkMmVkMwGb938CAwNW/fwySdfcPX9
      jwj73cTjEaolCcnz+vo4Dg6vIghw7fwYoihSr9cxTRPbthFFkVqttn1ifE8ZwWalQqexWcM0
      kfcQ0T3w6xQZXJvr0NNmBB8GjUaDQqGAbds7bI1cLrcjNtFTRvD6Lx5ipDstjHU8I8Gx71/H
      O7q787wcOsM0TSqVyvYB5C8/WGRZ3vGwORYKMP98khoqqXgYSbCp102K9SrRQBARC0n14XW7
      qDxbOjGR4OBbZ8A59GZXbD3F3zTb2bZNrVajVqthWdb2UUjwrc2x1ceWAnTXCtkjsb4E1UqZ
      XD7H0vIyxWyOhmmSy+VZnJvhycTUUQ/R4YhoNBo8fvJkV8vDSqVCpVLZXu+/fA7AFh6Ph3J5
      s7LIEUSCW2OZFtFolHgkSKWYA9mLx6siAiVFJOFx0qFPK4qicPXKlTd+zjCM7XOAYechGFtn
      hBWLRVwu1/aJkT13QoxeriLSYc0dw0Dag6F40NeJqoKobH7OMYL3T6VS2X6yw0tLHFHckZj3
      quv1WMwAu0V6+hCp2FkkWLQtRKHzld6BXjc4BBedAz+6iSAIO8/+eulfsVjE6/W2jDvsUIC1
      5XnqtkrEr2BLbrRyEcFo0PAGUc06sqGRl0O4TI1oJEytplGv5KnjYXHuGdevXsGW3VSLWUKR
      GKVKjYBHZn4lTTIaRPX4KBSKeFwqoiqh6zbRcIByIcv9B4/pHxgiFA7jUyX0homJRDT8UiLc
      6srJiAS73Xvs3aEdL//4t5Y9lmWRz+cJBoNNM6VhGM02wOrqGjoqhuZFEi1WlpZQpCjDl2VW
      03XM7BJG1CZChflaA0U0UV0qdnkdQQ2wurJIpmKhFzdIpFJs5DVSiRCypLCyuopUz2MF+1lc
      KhCJCiwsZvj4ex/gD0UZHhpGwKJYyJOp13C7ZGaXs3z8vQ86XPQ4nHRm5+YYHRnZXuZsrf8l
      SULTNBqNxvZ7kUik5dIyk8k0p0Kcu3QVwbYRRAkBC0SZaDhOsaYRcFlEr17HECTcUpKG0UCU
      JCRRRPd6iA3IaOUCgYSHoOcMdU1HdpeJBtxopozXJeL1D+LyeNGiOgIaiivA2uoqqVSKRCKB
      KG0+P23A0MqI7iC1ahVg+9hLh9ODYRg8n57B6/NhWxbDQ4OUKxUWFpcYGx3d/kypVEIQBDRN
      QxTFtgfmvYyqqpuK0ktGsKlpSJ0aiscxEixJ8NKU7BjBranVahSLJZZX1wmHg+TyReKRENHo
      pjG79bTfCnaVy2VCoVBHOUY9pQD/YfIJ2Vq1o2tejQQe9XU/vnId9ys58I4CtOblINbLa3zb
      tslms9vvb1EsFhFFkWAwuOu/5aF5gdZWV+lLplhfWSKaHGBhepJ8zeDyeD8rOY3BZALbrJMr
      lHF53ARUhVLdRLJ0RNVH0OdhsZBjqdhZKsRxw7Q63NFzinn5Sb71g7Ysi1qthiAITdU3ZFnG
      5XKRz+fx+/272mxzaApg2TagszA7TbEuI9oWRsNgYmIS2R9kedGgnlvEHU8wl9WIu3QMy8Yl
      K8gujaBv6LCG6nCM0TSNer0OQKFQ2KEktm3jcrlwuVyUy2U0TcPv9792Njg0BfB7XMwvZUgO
      DRONh5DEEP2mQV2rUTMFzFqZ6NnLeHweQnULFZ181SAacs4IdviWRqOx43Ug0Hq/uMvlolQq
      USqVSCQSbWeDnrIB6g0docPg1HEzgpUWVaAdG2B36Lq+I9pbKBQIhVrvFSmXy7jdbiRJolQq
      IYpi06HZ0GOR4Mwf3UFf76w69HFLhx7+q7+K5O2tH95xwDTNHT9+0zRfu6dYluXtDNJgMEi9
      XieXyxEMBnfYDkemADPPniJ5Iyh2HbdgoQcSWLUaWilDuG8IyayhmRIyOoonRMDnpjq31vPp
      0LZTBW5PbK37t3jd0x92pkbApt9fURRKpRKKomzHlY4sHdoWXQwkAywvzjMzt0Yum+Xx06dI
      LjfptRVW1tNUSkXSa2s8m5o+qmE6HAMajQaapu1okyTptTVYRVFsmiFEUSQUCiEIAvl8Htu2
      j24G6O+Lsp6p0jcwTCgQQlBE3NIZvC7whWL43DK2ZVPKy8S9zp7g08z6+jr1en3bRtqNrSTL
      MrVareV7Ho9n213aU0awoTc6riRw3NKhBanZ2HWM4NeTz+ebgl674U3LpCOdAfaC8NUdxEK+
      s4v2WOCq69cNj8DVtzrvz4FwOEypVGpyge6XQ9kR9vD+XQR3kLPjw+jVPLPLRYb742i1Mqqi
      4o0nmH38NcHEEA1tDasRJVva4NqlMzyZmmcoGUH2hgn5PZDZ6N106Db+aofdcVAl5A/cCI4l
      +1Elm9XFGQo1g3AgSLFYZGriKbVihYYA3y7CbEqFHJVMlsmVdSJBP5lMmufPHSP4tNPNGqIv
      c+AzgN3QiPcPkV1ZZKh/gPWVFSKRPlKpPrSqhgeIxqKYQF/fGPGIzUYmQCweIF/WiagSCe+b
      01sdTjayLO/wBO0lUbEVPWUEm4bR8bFFezUUD+S6NkI7jUbwy9mdu/lssVikUqlgWRZut7vJ
      z/8yL2+FbJUqsaNO0B7HvyvSa8sovsjm+v01rC8vYEgeoiEP4MI0dLw+Lw1dR1HVb3eEffE5
      5DszgiXbbvvDO9TrfvkHzlbIl+hE2Q3DYG1tDVEUURSFTCZD+MUB2G9Sgnq9vr182iqNuPV/
      OOAZoFqtIooSgsBrnzb1eh2Xy0W9XgVc2LaB2+1uUoBGo3M3qGVZeyrCepjXWZa1LbBu3ut1
      FZiPegbohHq9TqHwbRq8aZrbaQ3lchlJklrWALJtG7/f33LVYFkWsiz31hJorz+u06oAr6NX
      FMC2bXK53HYx2y0ajQbpdJpUarO85G7/dpVKZXvPsKZpvRUH2Iuw9/oDOczrDnuMvYQgCKiq
      SrFYRNd13G43qqoiyzLuF0vK3fz4G43G9kaZcDj8bbnFg/4C3WR5foalTJlb717bVaUI2zK4
      f+8+4xeuEA7sblO9aeg8mZimL+JleS3DxWvv4JF3UZavmGc1U8Sql3AHEwwP7O4crJXFWTLF
      Mma9QTjRz+jQLgrmWg2eTU5i6wYFwc3bVy7gkk5u7YytXWCiKG7/iL1eL6qqUigUCAa/rRzY
      aibN5TYziOPx+I50imAweDxqg+6WhiUQD/nZ7ZrNBjyqwkZm9ynUkuwiFg3RMGyS8TANc3d3
      8wXDeN0KHo+bjfTug3WiKDM2MkgwmsQy9d1dJAgoqp/+0WEULUdRO9kZprZtb67XBQGv10s2
      myWfz2+XOyyXyxSLxe0Et5dX9Vv1f1qVR5FlubdmgKGBJGu5yq61VhAkAqEwseTuy5CbDY1S
      sUgi1U+tWiOg7u5upVyaUqVKLBxgOJjY/f1Mg1xRx6dCKD64u4ssC72hoZtBQn2DxLydb9zp
      JQKBwPY2x3Q6TTAYJBAIbCvEVt5/tVrdYduYpkk2myWRaC+PnjKCHbpHrxjBW9i2TaVSoVAo
      ND3Jt15vnQuw5R3acpuqqrpdH3TrfOCt9x0FOKX0mgLAphLouk6hUNixPXJrNhAEgXQ6jSzL
      KIqCrutYlrU9S1iWtZ0duuVd6ikb4CCxzAaVauv88aPENuqUKpu7obLZLJOTk0xOTu4pPbjX
      2Tp8OxQKUSqV8Pv9+Hw+ii8KJm8Furbao9HodkVon8+Hrus7+rIsi/8fTjffYUKrEn4AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='work_health' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
