<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='region_data' inline='true' name='federated.0m1qf021ngu4lq199qvkn02knoxn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1pdfkm21soii8n16rlhqy1sggv47'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/region' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
          <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[NUTS2_name (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[NUTS2_name]' />
          <map key='[NUTS2_name]' value='[geo_dates.RData].[NUTS2_name]' />
          <map key='[TIME_PERIOD (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (physicians.RData)]' value='[physicians.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD (road_accidents.RData)]' value='[road_accidents.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[country_code (geo_dates.RData)]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_code]' value='[nama_10r_2hhinc.RData].[country_code]' />
          <map key='[country_name (geo_dates.RData)]' value='[geo_dates.RData].[country_name]' />
          <map key='[country_name]' value='[nama_10r_2hhinc.RData].[country_name]' />
          <map key='[freq (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[freq]' />
          <map key='[freq (road_accidents.RData)]' value='[road_accidents.RData].[freq]' />
          <map key='[freq]' value='[physicians.RData].[freq]' />
          <map key='[geo (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[geo]' />
          <map key='[geo (physicians.RData)]' value='[physicians.RData].[geo]' />
          <map key='[geo (road_accidents.RData)]' value='[road_accidents.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[rownames (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[rownames]' />
          <map key='[rownames (physicians.RData)]' value='[physicians.RData].[rownames]' />
          <map key='[rownames (road_accidents.RData)]' value='[road_accidents.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[unit (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[unit]' />
          <map key='[unit (road_accidents.RData)]' value='[road_accidents.RData].[unit]' />
          <map key='[unit]' value='[physicians.RData].[unit]' />
          <map key='[values (nama_10r_2hhinc.RData)]' value='[nama_10r_2hhinc.RData].[values]' />
          <map key='[values (road_accidents.RData)]' value='[road_accidents.RData].[values]' />
          <map key='[values]' value='[physicians.RData].[values]' />
          <map key='[victim]' value='[road_accidents.RData].[victim]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (geo_dates.RData)]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUTS2_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NUTS2_name (nama_10r_2hhinc.RData)]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>NUTS2_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[nama_10r_2hhinc.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (physicians.RData)]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[physicians.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>victim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[victim]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>victim</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (road_accidents.RData)]</local-name>
            <parent-name>[road_accidents.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column caption='NUTS2 name' datatype='string' name='[NUTS2_name]' role='dimension' type='nominal' />
      <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (physicians.RData)' datatype='date' name='[TIME_PERIOD (physicians.RData)]' role='dimension' type='ordinal' />
      <column caption='TIME PERIOD (road accidents.RData)' datatype='date' name='[TIME_PERIOD (road_accidents.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='income' datatype='table' name='[__tableau_internal_object_id__].[nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='physicians.RData' datatype='table' name='[__tableau_internal_object_id__].[physicians.RData_D409308C22B24C68BC4C5A36576E55EA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='road_accidents.RData' datatype='table' name='[__tableau_internal_object_id__].[road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35]' role='measure' type='quantitative' />
      <column datatype='string' name='[country_code (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_name (geo_dates.RData)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='freq (road accidents.RData)' datatype='string' name='[freq (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='geo (nama 10r 2hhinc.RData)' datatype='string' name='[geo (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='geo (road accidents.RData)' datatype='string' name='[geo (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column caption='rownames (nama 10r 2hhinc.RData)' datatype='integer' name='[rownames (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (road accidents.RData)' datatype='integer' name='[rownames (road_accidents.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='unit (nama 10r 2hhinc.RData)' datatype='string' name='[unit (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
      <column caption='unit (road accidents.RData)' datatype='string' name='[unit (road_accidents.RData)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
      </column>
      <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
      <column caption='values (road accidents.RData)' datatype='real' name='[values (road_accidents.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column caption='Victim' datatype='string' name='[victim]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='income' id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='nama_10r_2hhinc.RData' table='[nama_10r_2hhinc.RData]' type='table' />
            </properties>
          </object>
          <object caption='physicians.RData' id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='physicians.RData' table='[physicians.RData]' type='table' />
            </properties>
          </object>
          <object caption='road_accidents.RData' id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35'>
            <properties context=''>
              <relation connection='stat-direct.1pdfkm21soii8n16rlhqy1sggv47' name='road_accidents.RData' table='[road_accidents.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (nama_10r_2hhinc.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (nama_10r_2hhinc.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='nama_10r_2hhinc.RData_51112019D5734A1BB8EAE132CED808A5' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (physicians.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (physicians.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='physicians.RData_D409308C22B24C68BC4C5A36576E55EA' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (road_accidents.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (road_accidents.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4A0E965AF1BA4673B5696261D3E07800' unique-key='true' />
            <second-end-point object-id='road_accidents.RData_0C1BA7E51A86425E9BFCDB5A90D87B35' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='city data' inline='true' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='geo_dates' name='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/city' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[TIME_PERIOD (living_cond.RData)]' value='[living_cond.RData].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[geo_dates.RData].[TIME_PERIOD]' />
          <map key='[city_code (living_cond.RData)]' value='[living_cond.RData].[city_code]' />
          <map key='[city_code]' value='[geo_dates.RData].[city_code]' />
          <map key='[city_name]' value='[geo_dates.RData].[city_name]' />
          <map key='[country_code]' value='[geo_dates.RData].[country_code]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[freq]' value='[living_cond.RData].[freq]' />
          <map key='[indic_ur]' value='[living_cond.RData].[indic_ur]' />
          <map key='[rownames (living_cond.RData)]' value='[living_cond.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[values]' value='[living_cond.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>city_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indic_ur</remote-name>
            <remote-type>129</remote-type>
            <local-name>[indic_ur]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>indic_ur</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_code (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>city_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>133</remote-type>
            <local-name>[TIME_PERIOD (living_cond.RData)]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[living_cond.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TIME PERIOD (living cond.RData)' datatype='date' name='[TIME_PERIOD (living_cond.RData)]' role='dimension' type='ordinal' />
      <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='living_cond.RData' datatype='table' name='[__tableau_internal_object_id__].[living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E]' role='measure' type='quantitative' />
      <column caption='city code (living cond.RData)' datatype='string' name='[city_code (living_cond.RData)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Code' datatype='string' name='[city_code]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
          <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
          <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
          <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
          <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
          <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
          <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
          <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
          <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
          <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
          <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
          <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
          <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
          <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
          <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
          <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
          <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
          <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
          <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
          <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
        </semantic-values>
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
      <column caption='rownames (living cond.RData)' datatype='integer' name='[rownames (living_cond.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_code:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HU&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FI&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='geo_dates.RData' id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='living_cond.RData' id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E'>
            <properties context=''>
              <relation connection='stat-direct.1h5mfn71asfr8y15i8nyy0elq92p' name='living_cond.RData' table='[living_cond.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[city_code]' />
                <expression op='[city_code (living_cond.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[TIME_PERIOD]' />
                <expression op='[TIME_PERIOD (living_cond.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_4B7AE4A0149E4096B76709EE75F4A7F9' unique-key='true' />
            <second-end-point object-id='living_cond.RData_F90B19FBA7334CBD98F896C2B86B105E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='country data' inline='true' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_data' name='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37'>
            <connection batch-size='' class='stat-direct' directory='C:/Users/franc/OneDrive/MADS/IST737/project/data/country' encoding-error-limit='' filename='geo_dates.RData' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='foreing_lang.RData' table='[foreing_lang.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
          <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[age (foreing_lang.RData)]' value='[foreing_lang.RData].[age]' />
          <map key='[age (self_health.RData)]' value='[self_health.RData].[age]' />
          <map key='[age (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[age]' />
          <map key='[age (underemployment.RData)]' value='[underemployment.RData].[age]' />
          <map key='[age]' value='[activities.RData].[age]' />
          <map key='[country_name]' value='[geo_dates.RData].[country_name]' />
          <map key='[deg_urb]' value='[get_together.RData].[deg_urb]' />
          <map key='[duration]' value='[time_health_enhancing.RData].[duration]' />
          <map key='[freq (foreing_lang.RData)]' value='[foreing_lang.RData].[freq]' />
          <map key='[freq (get_together.RData)]' value='[get_together.RData].[freq]' />
          <map key='[freq (self_health.RData)]' value='[self_health.RData].[freq]' />
          <map key='[freq (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[freq]' />
          <map key='[freq (underemployment.RData)]' value='[underemployment.RData].[freq]' />
          <map key='[freq]' value='[activities.RData].[freq]' />
          <map key='[frequenc (get_together.RData)]' value='[get_together.RData].[frequenc]' />
          <map key='[frequenc]' value='[activities.RData].[frequenc]' />
          <map key='[geo (activities.RData)]' value='[activities.RData].[geo]' />
          <map key='[geo (foreing_lang.RData)]' value='[foreing_lang.RData].[geo]' />
          <map key='[geo (get_together.RData)]' value='[get_together.RData].[geo]' />
          <map key='[geo (self_health.RData)]' value='[self_health.RData].[geo]' />
          <map key='[geo (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[geo]' />
          <map key='[geo (underemployment.RData)]' value='[underemployment.RData].[geo]' />
          <map key='[geo]' value='[geo_dates.RData].[geo]' />
          <map key='[hhtyp]' value='[get_together.RData].[hhtyp]' />
          <map key='[ind_type]' value='[get_together.RData].[ind_type]' />
          <map key='[isced11 (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[isced11]' />
          <map key='[isced11]' value='[activities.RData].[isced11]' />
          <map key='[levels]' value='[self_health.RData].[levels]' />
          <map key='[n_lang]' value='[foreing_lang.RData].[n_lang]' />
          <map key='[quantile (self_health.RData)]' value='[self_health.RData].[quantile]' />
          <map key='[quantile]' value='[get_together.RData].[quantile]' />
          <map key='[rownames (activities.RData)]' value='[activities.RData].[rownames]' />
          <map key='[rownames (foreing_lang.RData)]' value='[foreing_lang.RData].[rownames]' />
          <map key='[rownames (get_together.RData)]' value='[get_together.RData].[rownames]' />
          <map key='[rownames (self_health.RData)]' value='[self_health.RData].[rownames]' />
          <map key='[rownames (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[rownames]' />
          <map key='[rownames (underemployment.RData)]' value='[underemployment.RData].[rownames]' />
          <map key='[rownames]' value='[geo_dates.RData].[rownames]' />
          <map key='[sex (foreing_lang.RData)]' value='[foreing_lang.RData].[sex]' />
          <map key='[sex (self_health.RData)]' value='[self_health.RData].[sex]' />
          <map key='[sex (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[sex]' />
          <map key='[sex (underemployment.RData)]' value='[underemployment.RData].[sex]' />
          <map key='[sex]' value='[activities.RData].[sex]' />
          <map key='[time (activities.RData)]' value='[activities.RData].[time]' />
          <map key='[time (foreing_lang.RData)]' value='[foreing_lang.RData].[time]' />
          <map key='[time (get_together.RData)]' value='[get_together.RData].[time]' />
          <map key='[time (self_health.RData)]' value='[self_health.RData].[time]' />
          <map key='[time (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[time]' />
          <map key='[time (underemployment.RData)]' value='[underemployment.RData].[time]' />
          <map key='[time]' value='[geo_dates.RData].[time]' />
          <map key='[unit (foreing_lang.RData)]' value='[foreing_lang.RData].[unit]' />
          <map key='[unit (get_together.RData)]' value='[get_together.RData].[unit]' />
          <map key='[unit (self_health.RData)]' value='[self_health.RData].[unit]' />
          <map key='[unit (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[unit]' />
          <map key='[unit (underemployment.RData)]' value='[underemployment.RData].[unit]' />
          <map key='[unit]' value='[activities.RData].[unit]' />
          <map key='[values (foreing_lang.RData)]' value='[foreing_lang.RData].[values]' />
          <map key='[values (get_together.RData)]' value='[get_together.RData].[values]' />
          <map key='[values (self_health.RData)]' value='[self_health.RData].[values]' />
          <map key='[values (time_health_enhancing.RData)]' value='[time_health_enhancing.RData].[values]' />
          <map key='[values (underemployment.RData)]' value='[underemployment.RData].[values]' />
          <map key='[values]' value='[activities.RData].[values]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[geo_dates.RData]</parent-name>
            <remote-alias>country_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequenc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[frequenc]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>frequenc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>isced11</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (activities.RData)]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values]</local-name>
            <parent-name>[activities.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_lang</remote-name>
            <remote-type>129</remote-type>
            <local-name>[n_lang]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>n_lang</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (foreing_lang.RData)]</local-name>
            <parent-name>[foreing_lang.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequenc</remote-name>
            <remote-type>129</remote-type>
            <local-name>[frequenc (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>frequenc</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ind_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ind_type]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>ind_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deg_urb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deg_urb]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>deg_urb</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hhtyp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hhtyp]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>hhtyp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quantile]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (get_together.RData)]</local-name>
            <parent-name>[get_together.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[get_together.RData_32250D35A0C042CC918EFD895D987719]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quantile (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>quantile</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>levels</remote-name>
            <remote-type>129</remote-type>
            <local-name>[levels]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>levels</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (self_health.RData)]</local-name>
            <parent-name>[self_health.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>duration</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11 (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>isced11</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (time_health_enhancing.RData)]</local-name>
            <parent-name>[time_health_enhancing.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rownames</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rownames (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>rownames</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[freq (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>freq</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>age</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>sex</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geo (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>geo</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>133</remote-type>
            <local-name>[time (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>time</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[values (underemployment.RData)]</local-name>
            <parent-name>[underemployment.RData]</parent-name>
            <remote-alias>values</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='activities.RData' datatype='table' name='[__tableau_internal_object_id__].[activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='foreing_lang.RData' datatype='table' name='[__tableau_internal_object_id__].[foreing_lang.RData_89DE240236D748AFB4F4337DA154363D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='geo_dates.RData' datatype='table' name='[__tableau_internal_object_id__].[geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='get_together.RData' datatype='table' name='[__tableau_internal_object_id__].[get_together.RData_32250D35A0C042CC918EFD895D987719]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='self_health.RData' datatype='table' name='[__tableau_internal_object_id__].[self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_health_enhancing.RData' datatype='table' name='[__tableau_internal_object_id__].[time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='underemployment.RData' datatype='table' name='[__tableau_internal_object_id__].[underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48]' role='measure' type='quantitative' />
      <column caption='age (foreing lang.RData)' datatype='string' name='[age (foreing_lang.RData)]' role='dimension' type='nominal' />
      <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='age (time health enhancing.RData)' datatype='string' name='[age (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deg Urb' datatype='string' name='[deg_urb]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='freq (foreing lang.RData)' datatype='string' name='[freq (foreing_lang.RData)]' role='dimension' type='nominal' />
      <column caption='freq (get together.RData)' datatype='string' name='[freq (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='freq (time health enhancing.RData)' datatype='string' name='[freq (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
      <column caption='frequenc (get together.RData)' datatype='string' name='[frequenc (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
      <column caption='geo (foreing lang.RData)' datatype='string' name='[geo (foreing_lang.RData)]' role='dimension' type='nominal' />
      <column caption='geo (get together.RData)' datatype='string' name='[geo (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='geo (self health.RData)' datatype='string' name='[geo (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='geo (time health enhancing.RData)' datatype='string' name='[geo (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' type='nominal' />
      <column caption='Hhtyp' datatype='string' name='[hhtyp]' role='dimension' type='nominal' />
      <column caption='Ind Type' datatype='string' name='[ind_type]' role='dimension' type='nominal' />
      <column caption='isced11 (time health enhancing.RData)' datatype='string' name='[isced11 (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Isced11' datatype='string' name='[isced11]' role='dimension' type='nominal' />
      <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
      <column caption='N Lang' datatype='string' name='[n_lang]' role='dimension' type='nominal' />
      <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='Quantile' datatype='string' name='[quantile]' role='dimension' type='nominal' />
      <column caption='rownames (foreing lang.RData)' datatype='integer' name='[rownames (foreing_lang.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (get together.RData)' datatype='integer' name='[rownames (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (self health.RData)' datatype='integer' name='[rownames (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='rownames (time health enhancing.RData)' datatype='integer' name='[rownames (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='Rownames' datatype='integer' name='[rownames]' role='measure' type='quantitative' />
      <column caption='sex (foreing lang.RData)' datatype='string' name='[sex (foreing_lang.RData)]' role='dimension' type='nominal' />
      <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='sex (time health enhancing.RData)' datatype='string' name='[sex (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='time (foreing lang.RData)' datatype='date' name='[time (foreing_lang.RData)]' role='dimension' type='ordinal' />
      <column caption='time (get together.RData)' datatype='date' name='[time (get_together.RData)]' role='dimension' type='ordinal' />
      <column caption='time (self health.RData)' datatype='date' name='[time (self_health.RData)]' role='dimension' type='ordinal' />
      <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
      <column caption='unit (foreing lang.RData)' datatype='string' name='[unit (foreing_lang.RData)]' role='dimension' type='nominal' />
      <column caption='unit (get together.RData)' datatype='string' name='[unit (get_together.RData)]' role='dimension' type='nominal' />
      <column caption='unit (self health.RData)' datatype='string' name='[unit (self_health.RData)]' role='dimension' type='nominal' />
      <column caption='unit (time health enhancing.RData)' datatype='string' name='[unit (time_health_enhancing.RData)]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='values (foreing lang.RData)' datatype='real' name='[values (foreing_lang.RData)]' role='measure' type='quantitative' />
      <column caption='values (get together.RData)' datatype='real' name='[values (get_together.RData)]' role='measure' type='quantitative' />
      <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
      <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
      <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
      <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:duration:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Zero minutes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;300 minutes or over&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;150 minutes or over&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:levels:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Very bad&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Very good or good&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fair&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Very good&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bad or very bad&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='activities.RData' id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='activities.RData' table='[activities.RData]' type='table' />
            </properties>
          </object>
          <object caption='foreing_lang.RData' id='foreing_lang.RData_89DE240236D748AFB4F4337DA154363D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='foreing_lang.RData' table='[foreing_lang.RData]' type='table' />
            </properties>
          </object>
          <object caption='geo_dates.RData' id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='geo_dates.RData' table='[geo_dates.RData]' type='table' />
            </properties>
          </object>
          <object caption='get_together.RData' id='get_together.RData_32250D35A0C042CC918EFD895D987719'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='get_together.RData' table='[get_together.RData]' type='table' />
            </properties>
          </object>
          <object caption='self_health.RData' id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='self_health.RData' table='[self_health.RData]' type='table' />
            </properties>
          </object>
          <object caption='time_health_enhancing.RData' id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='time_health_enhancing.RData' table='[time_health_enhancing.RData]' type='table' />
            </properties>
          </object>
          <object caption='underemployment.RData' id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48'>
            <properties context=''>
              <relation connection='stat-direct.0zan7bn0ckmi9w1gk7f5y0ex9l37' name='underemployment.RData' table='[underemployment.RData]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (activities.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (activities.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='activities.RData_9FB1F24AE15340C2AA71FCC8C8ECCB9D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (foreing_lang.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (foreing_lang.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='foreing_lang.RData_89DE240236D748AFB4F4337DA154363D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (get_together.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (get_together.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='get_together.RData_32250D35A0C042CC918EFD895D987719' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (self_health.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (self_health.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='self_health.RData_4FA4DC93A76C46359DC289EB6D1B5316' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (time_health_enhancing.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (time_health_enhancing.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='time_health_enhancing.RData_BC03599DD8934279B696C7623999DF2D' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[geo]' />
                <expression op='[geo (underemployment.RData)]' />
              </expression>
              <expression op='='>
                <expression op='[time]' />
                <expression op='[time (underemployment.RData)]' />
              </expression>
            </expression>
            <first-end-point object-id='geo_dates.RData_86ED519FBA3A431E936E8CDC8900607D' unique-key='true' />
            <second-end-point object-id='underemployment.RData_345DC6679A5941BF813A0DA53A3F6E48' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='city data' name='federated.0wyeh3p1rd106b1g75pnn0q7e2uf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wyeh3p1rd106b1g75pnn0q7e2uf'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column caption='City Name' datatype='string' name='[city_name]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Alicante/Alacant&quot;' value='&quot;Alicante&quot;' />
                <semantic-value key='&quot;Bocholt, Stadt&quot;' value='&quot;Bocholt&quot;' />
                <semantic-value key='&quot;Castellón de la Plana/Castelló de la Plana&quot;' value='&quot;Castellón de la Plana&quot;' />
                <semantic-value key='&quot;Düren, Stadt&quot;' value='&quot;Düren&quot;' />
                <semantic-value key='&quot;Elche/Elx&quot;' value='&quot;Elche&quot;' />
                <semantic-value key='&quot;Espoo/Esbo&quot;' value='&quot;Espoo&quot;' />
                <semantic-value key='&quot;Frankenthal (Pfalz)&quot;' value='&quot;Frankenthal &quot;' />
                <semantic-value key='&quot;Halle an der Saale&quot;' value='&quot;Halle&quot;' />
                <semantic-value key='&quot;Helsinki/Helsingfors&quot;' value='&quot;Helsinki&quot;' />
                <semantic-value key='&quot;Lahti/Lahtis&quot;' value='&quot;Lahti&quot;' />
                <semantic-value key='&quot;Las Palmas&quot;' value='&quot;Las Palmas De Gran Canaria&quot;' />
                <semantic-value key='&quot;Mülheim a.d.Ruhr&quot;' value='&quot;Mülheim an der Ruhr&quot;' />
                <semantic-value key='&quot;Oldenburg (Oldenburg)&quot;' value='&quot;Oldenburg&quot;' />
                <semantic-value key='&quot;Oulu/Uleåborg&quot;' value='&quot;Oulu&quot;' />
                <semantic-value key='&quot;Puerto de Santa María, El&quot;' value='&quot;El Puerto De Santa María&quot;' />
                <semantic-value key='&quot;San Sebastián/Donostia&quot;' value='&quot;San Sebastián&quot;' />
                <semantic-value key='&quot;San Vicente del Raspeig/Sant Vicent del Raspeig&quot;' value='&quot;San Vicente del Raspeig&quot;' />
                <semantic-value key='&quot;Tampere/Tammerfors&quot;' value='&quot;Tampere&quot;' />
                <semantic-value key='&quot;Turku/Åbo&quot;' value='&quot;Turku&quot;' />
                <semantic-value key='&quot;Vantaa/Vanda&quot;' value='&quot;Vantaa&quot;' />
              </semantic-values>
            </column>
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indic Ur' datatype='string' name='[indic_ur]' role='dimension' type='nominal' />
            <column-instance column='[city_name]' derivation='None' name='[none:city_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[indic_ur]' derivation='None' name='[none:indic_ur:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]'>
            <groupfilter function='member' level='[none:indic_ur:nk]' member='&quot;Number of murders and violent deaths&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</column>
            <column>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]' field-type='quantitative' max='4207445.3698918596' min='-1285432.8226952429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]' field-type='quantitative' max='7704729.0012606503' min='4285024.9978328897' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' />
              <size column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]' />
              <lod column='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Latitude (generated)]</rows>
        <cols>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{79C0A39F-02CC-4F34-84B1-586ECDD54936}' />
    </worksheet>
    <worksheet name='activities'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column-instance column='[values]' derivation='Avg' name='[avg:values:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Frequenc' datatype='string' name='[frequenc]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='None' name='[none:age:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[frequenc]' derivation='None' name='[none:frequenc:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex]' derivation='None' name='[none:sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit]' derivation='None' name='[none:unit:nk]' pivot='key' type='nominal' />
            <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (activities.RData)]' role='dimension' type='ordinal' />
            <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[time (activities.RData)]' derivation='Year' name='[yr:time (activities.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]'>
            <groupfilter function='member' level='[none:age:nk]' member='&quot;From 16 to 24 years&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]'>
            <groupfilter function='member' level='[none:frequenc:nk]' member='&quot;At least once&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]'>
            <groupfilter function='member' level='[none:sex:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit:nk]' />
              <groupfilter function='member' level='[none:unit:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]'>
            <groupfilter function='member' level='[yr:time (activities.RData):ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' />
              <lod column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
              <geometry column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Latitude (generated)]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{43001160-6874-4204-824A-001E443F5538}' />
    </worksheet>
    <worksheet name='income'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='NUTS2 name (nama 10r 2hhinc.RData)' datatype='string' name='[NUTS2_name (nama_10r_2hhinc.RData)]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column caption='TIME PERIOD (nama 10r 2hhinc.RData)' datatype='date' name='[TIME_PERIOD (nama_10r_2hhinc.RData)]' role='dimension' type='ordinal' />
            <column caption='freq (nama 10r 2hhinc.RData)' datatype='string' name='[freq (nama_10r_2hhinc.RData)]' role='dimension' type='nominal' />
            <column-instance column='[NUTS2_name (nama_10r_2hhinc.RData)]' derivation='None' name='[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (nama_10r_2hhinc.RData)]' derivation='None' name='[none:freq (nama_10r_2hhinc.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Sum' name='[sum:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD (nama_10r_2hhinc.RData)]' derivation='Year' name='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (nama_10r_2hhinc.RData):nk]' />
              <groupfilter function='member' level='[none:freq (nama_10r_2hhinc.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD327D37-FF64-4260-8EDA-774862904D4E}' />
    </worksheet>
    <worksheet name='income_hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[values (nama_10r_2hhinc.RData)]' derivation='Count' name='[cnt:values (nama_10r_2hhinc.RData):qk]' pivot='key' type='quantitative' />
            <column-instance column='[values (nama 10r 2hhinc.RData) (bin)]' derivation='None' name='[none:values (nama 10r 2hhinc.RData) (bin):qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[values (nama 10r 2hhinc.RData) (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='3' formula='[values (nama_10r_2hhinc.RData)]' peg='0' size='1825' />
            </column>
            <column caption='values (nama 10r 2hhinc.RData)' datatype='real' name='[values (nama_10r_2hhinc.RData)]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[cnt:values (nama_10r_2hhinc.RData):qk]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[values (nama 10r 2hhinc.RData) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{58DAA26C-E44E-4FA6-920D-DB4B166C3217}' />
    </worksheet>
    <worksheet name='physicians'>
      <table>
        <view>
          <datasources>
            <datasource caption='region_data' name='federated.0m1qf021ngu4lq199qvkn02knoxn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m1qf021ngu4lq199qvkn02knoxn'>
            <column caption='Time Period' datatype='date' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column caption='Freq' datatype='string' name='[freq]' role='dimension' type='nominal' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[freq]' derivation='None' name='[none:freq:nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit]' derivation='None' name='[none:unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[values]' derivation='Sum' name='[sum:values:qk]' pivot='key' type='quantitative' />
            <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
            <column caption='Values' datatype='real' name='[values]' role='measure' type='quantitative' />
            <column-instance column='[TIME_PERIOD]' derivation='Year' name='[yr:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq:nk]' />
              <groupfilter function='member' level='[none:freq:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:unit:nk]' member='&quot;Inhabitants per ...&quot;' />
                <groupfilter function='member' level='[none:unit:nk]' member='&quot;Number&quot;' />
                <groupfilter function='member' level='[none:unit:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]'>
            <groupfilter function='member' level='[yr:TIME_PERIOD:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</column>
            <column>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' />
              <lod column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]' />
              <geometry column='[federated.0m1qf021ngu4lq199qvkn02knoxn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Latitude (generated)]</rows>
        <cols>[federated.0m1qf021ngu4lq199qvkn02knoxn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5F9B334B-D507-4D05-BC37-F45069A6A85F}' />
    </worksheet>
    <worksheet name='self_healtg'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='age (self health.RData)' datatype='string' name='[age (self_health.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (self_health.RData)]' derivation='Avg' name='[avg:values (self_health.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='freq (self health.RData)' datatype='string' name='[freq (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='Levels' datatype='string' name='[levels]' role='dimension' type='nominal' />
            <column-instance column='[age (self_health.RData)]' derivation='None' name='[none:age (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (self_health.RData)]' derivation='None' name='[none:freq (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[levels]' derivation='None' name='[none:levels:nk]' pivot='key' type='nominal' />
            <column-instance column='[quantile (self_health.RData)]' derivation='None' name='[none:quantile (self_health.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (self_health.RData)]' derivation='None' name='[none:sex (self_health.RData):nk]' pivot='key' type='nominal' />
            <column caption='quantile (self health.RData)' datatype='string' name='[quantile (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='sex (self health.RData)' datatype='string' name='[sex (self_health.RData)]' role='dimension' type='nominal' />
            <column caption='Time' datatype='date' name='[time]' role='dimension' type='ordinal' />
            <column caption='values (self health.RData)' datatype='real' name='[values (self_health.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Year' name='[yr:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:age (self_health.RData):nk]' member='&quot;16 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (self_health.RData):nk]' />
              <groupfilter function='member' level='[none:freq (self_health.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:levels:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Bad or very bad&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='&quot;Very good or good&quot;' />
                <groupfilter function='member' level='[none:levels:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Very bad&quot;</bucket>
              <bucket>&quot;Bad&quot;</bucket>
              <bucket>&quot;Fair&quot;</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Very good&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:quantile (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]'>
            <groupfilter function='member' level='[none:sex (self_health.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]'>
            <groupfilter function='member' level='[yr:time:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (self_health.RData):qk]</cols>
      </table>
      <simple-id uuid='{9C214ACD-B248-458D-BD97-15AB6338C325}' />
    </worksheet>
    <worksheet name='time_health'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column caption='age (time health enhancing.RData)' datatype='string' name='[age (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (time_health_enhancing.RData)]' derivation='Avg' name='[avg:values (time_health_enhancing.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column caption='freq (time health enhancing.RData)' datatype='string' name='[freq (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column caption='isced11 (time health enhancing.RData)' datatype='string' name='[isced11 (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column-instance column='[age (time_health_enhancing.RData)]' derivation='None' name='[none:age (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[freq (time_health_enhancing.RData)]' derivation='None' name='[none:freq (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[isced11 (time_health_enhancing.RData)]' derivation='None' name='[none:isced11 (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (time_health_enhancing.RData)]' derivation='None' name='[none:sex (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (time_health_enhancing.RData)]' derivation='None' name='[none:unit (time_health_enhancing.RData):nk]' pivot='key' type='nominal' />
            <column caption='sex (time health enhancing.RData)' datatype='string' name='[sex (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column caption='time (time health enhancing.RData)' datatype='date' name='[time (time_health_enhancing.RData)]' role='dimension' type='ordinal' />
            <column caption='unit (time health enhancing.RData)' datatype='string' name='[unit (time_health_enhancing.RData)]' role='dimension' type='nominal' />
            <column caption='values (time health enhancing.RData)' datatype='real' name='[values (time_health_enhancing.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (time_health_enhancing.RData)]' derivation='Year' name='[yr:time (time_health_enhancing.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]'>
            <groupfilter function='member' level='[none:age (time_health_enhancing.RData):nk]' member='&quot;18 years or over&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' direction='DESC' using='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]' />
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:duration:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:duration:nk]' member='&quot;150 minutes or over&quot;' />
                <groupfilter function='member' level='[none:duration:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;300 minutes or over&quot;</bucket>
              <bucket>&quot;From 150 to 299 minutes&quot;</bucket>
              <bucket>&quot;From 1 to 149 minutes&quot;</bucket>
              <bucket>&quot;Zero minutes&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:freq (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:freq (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]'>
            <groupfilter function='member' level='[none:isced11 (time_health_enhancing.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]'>
            <groupfilter function='member' level='[none:sex (time_health_enhancing.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:unit (time_health_enhancing.RData):nk]' />
              <groupfilter function='member' level='[none:unit (time_health_enhancing.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]'>
            <groupfilter function='member' level='[yr:time (time_health_enhancing.RData):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (time_health_enhancing.RData):qk]</cols>
      </table>
      <simple-id uuid='{7A7FEDCE-33E2-4947-BA42-34B214407AAD}' />
    </worksheet>
    <worksheet name='underemployment'>
      <table>
        <view>
          <datasources>
            <datasource caption='country data' name='federated.0dqo4gp1bw9vp81gbj4w30ulh33x' />
          </datasources>
          <datasource-dependencies datasource='federated.0dqo4gp1bw9vp81gbj4w30ulh33x'>
            <column datatype='string' name='[age (underemployment.RData)]' role='dimension' type='nominal' />
            <column-instance column='[values (underemployment.RData)]' derivation='Avg' name='[avg:values (underemployment.RData):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[age (underemployment.RData)]' derivation='None' name='[none:age (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[sex (underemployment.RData)]' derivation='None' name='[none:sex (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit (underemployment.RData)]' derivation='None' name='[none:unit (underemployment.RData):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sex (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='date' name='[time (underemployment.RData)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[unit (underemployment.RData)]' role='dimension' type='nominal' />
            <column datatype='real' name='[values (underemployment.RData)]' role='measure' type='quantitative' />
            <column-instance column='[time (underemployment.RData)]' derivation='Year' name='[yr:time (underemployment.RData):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (underemployment.RData):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:age (underemployment.RData):nk]' />
              <groupfilter function='member' level='[none:age (underemployment.RData):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Cyprus&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Denmark&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:sex (underemployment.RData):nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (underemployment.RData):nk]'>
            <groupfilter function='member' level='[none:unit (underemployment.RData):nk]' member='&quot;Percentage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (underemployment.RData):nk]</column>
            <column>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]' value='51' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values (underemployment.RData):qk]</rows>
        <cols>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</cols>
      </table>
      <simple-id uuid='{18219D9A-37AF-4FED-BAC7-A21FF9840372}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='activities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[avg:values:qk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:frequenc:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (activities.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C47DEE94-88D5-4C69-B281-3AC50BE52E5D}' />
    </window>
    <window class='worksheet' name='physicians'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:geo:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit:nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB83FB30-D3CA-483A-93C5-872FAF34BFEC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='radiolist' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]' type='filter' />
            <card mode='slider' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[sum:values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[avg:values:qk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:city_name:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:country_code:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[none:indic_ur:nk]</field>
            <field>[federated.0wyeh3p1rd106b1g75pnn0q7e2uf].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{50541DAF-8670-4F43-B99B-D6104843A61A}' />
    </window>
    <window class='worksheet' name='income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[sum:values (nama_10r_2hhinc.RData):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:NUTS2_name (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:freq (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD (nama_10r_2hhinc.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4841B069-481F-4F62-B292-C6C01A915389}' />
    </window>
    <window class='worksheet' name='income_hist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:unit (nama_10r_2hhinc.RData):nk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[none:values (nama 10r 2hhinc.RData) (bin):qk]</field>
            <field>[federated.0m1qf021ngu4lq199qvkn02knoxn].[yr:TIME_PERIOD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8A0AFD1-869C-475C-B7FE-C0F84F6C07F6}' />
    </window>
    <window class='worksheet' name='time_health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:duration:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:isced11 (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (time_health_enhancing.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (time_health_enhancing.RData):ok]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86B29200-FAF7-4875-B1C6-C589E02E7445}' />
    </window>
    <window class='worksheet' name='underemployment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (underemployment.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time (underemployment.RData):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{448FD1A7-4BE6-4A85-A8E3-004BEE1C9989}' />
    </window>
    <window class='worksheet' maximized='true' name='self_healtg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:age (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:country_name:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:freq (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:geo (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:levels:nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:quantile (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:sex (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[none:unit (self_health.RData):nk]</field>
            <field>[federated.0dqo4gp1bw9vp81gbj4w30ulh33x].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16EC6DDA-2081-4A71-A80E-CFDC401479A4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='activities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='income_hist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='physicians' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='self_healtg' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='time_health' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='underemployment' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
